var at=Object.defineProperty,nt=Object.defineProperties;var ot=Object.getOwnPropertyDescriptors;var tt=Object.getOwnPropertySymbols;var rt=Object.prototype.hasOwnProperty,lt=Object.prototype.propertyIsEnumerable;var k=Math.pow,z=(f,t,e)=>t in f?at(f,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):f[t]=e,w=(f,t)=>{for(var e in t||(t={}))rt.call(t,e)&&z(f,e,t[e]);if(tt)for(var e of tt(t))lt.call(t,e)&&z(f,e,t[e]);return f},N=(f,t)=>nt(f,ot(t));var l=(f,t,e)=>(z(f,typeof t!="symbol"?t+"":t,e),e);var b=(f,t,e)=>new Promise((i,s)=>{var a=c=>{try{r(e.next(c))}catch(h){s(h)}},n=c=>{try{r(e.throw(c))}catch(h){s(h)}},r=c=>c.done?i(c.value):Promise.resolve(c.value).then(a,n);r((e=e.apply(f,t)).next())});(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(s){if(s.ep)return;s.ep=!0;const a=e(s);fetch(s.href,a)}})();var st=(f=>(f[f.DEBUG=0]="DEBUG",f[f.INFO=1]="INFO",f[f.WARN=2]="WARN",f[f.ERROR=3]="ERROR",f))(st||{});const G=class G{constructor(){l(this,"logLevel",1);l(this,"logs",[]);l(this,"maxLogs",1e3);l(this,"isProduction",!1);this.isProduction=!0,this.isProduction&&(this.logLevel=2)}static getInstance(){return G.instance||(G.instance=new G),G.instance}setLogLevel(t){this.logLevel=t}debug(t,e,i){this.log(0,t,e,i)}info(t,e,i){this.log(1,t,e,i)}warn(t,e,i){this.log(2,t,e,i)}error(t,e,i){this.log(3,t,e,i)}log(t,e,i,s){if(t<this.logLevel)return;const a={timestamp:new Date().toISOString(),level:t,message:e,data:i,context:s};this.logs.push(a),this.logs.length>this.maxLogs&&this.logs.shift();const n=this.formatMessage(a);switch(t){case 0:console.debug(n,i||"");break;case 1:console.info(n,i||"");break;case 2:console.warn(n,i||"");break;case 3:console.error(n,i||"");break}}formatMessage(t){const e=st[t.level],i=t.context?`[${t.context}]`:"";return`[${t.timestamp}] ${e}${i}: ${t.message}`}getLogs(){return[...this.logs]}clearLogs(){this.logs=[]}exportLogs(){return JSON.stringify(this.logs,null,2)}getLogsByLevel(t){return this.logs.filter(e=>e.level===t)}getRecentLogs(t){return this.logs.slice(-t)}};l(G,"instance");let q=G;const o=q.getInstance();var M=(f=>(f.MENU="menu",f.ATTRACT_MODE="attract_mode",f.PLAYING="playing",f.PAUSED="paused",f.CONFIRM_MENU="confirm_menu",f.SETTINGS="settings",f.SAVE_LOAD="save_load",f.STATS="stats",f.LEVEL_COMPLETE="level_complete",f.GAME_OVER="game_over",f.LOADING="loading",f))(M||{});class ht{constructor(){l(this,"currentState","menu");l(this,"stateData",{currentLevel:1,score:0,lives:3,isPaused:!1,isGameOver:!1,debugMode:!1,activePowerUps:[],powerUpEffects:{}});o.info("📊 GameState initialized",null,"GameState")}getCurrentState(){return this.currentState}setState(t){const e=this.currentState;this.currentState=t,o.info(`🔄 Game state changed: ${e} → ${t}`,null,"GameState")}getStateData(){return w({},this.stateData)}updateStateData(t){this.stateData=w(w({},this.stateData),t)}isState(t){return this.currentState===t}isPlaying(){return this.currentState==="playing"}isPaused(){return this.currentState==="paused"}isGameOver(){return this.currentState==="game_over"}isConfirmingMenu(){return this.currentState==="confirm_menu"}isAttractMode(){return this.currentState==="attract_mode"}isLoading(){return this.currentState==="loading"}isSettings(){return this.currentState==="settings"}isSaveLoad(){return this.currentState==="save_load"}isStats(){return this.currentState==="stats"}isDebugMode(){return this.stateData.debugMode}toggleDebugMode(){this.stateData.debugMode=!this.stateData.debugMode,o.info(`🐛 Debug mode ${this.stateData.debugMode?"enabled":"disabled"}`,null,"GameState")}setDebugMode(t){this.stateData.debugMode=t,o.info(`🐛 Debug mode ${t?"enabled":"disabled"}`,null,"GameState")}reset(){this.currentState="menu",this.stateData={currentLevel:1,score:0,lives:3,isPaused:!1,isGameOver:!1,debugMode:!1,activePowerUps:[],powerUpEffects:{}},o.info("🔄 Game state reset",null,"GameState")}}const D=class D{constructor(){l(this,"fontsLoaded",!1);l(this,"fonts",{primary:'Interceptor, "Courier New", Monaco, Consolas, monospace',display:'Cyberpunks, Interceptor, "Courier New", monospace',mono:'Interceptor, "Courier New", Monaco, Consolas, monospace'});this.loadFonts()}static getInstance(){return D.instance||(D.instance=new D),D.instance}loadFonts(){return b(this,null,function*(){try{if("fonts"in document){const t=[];try{const e=new FontFace("Cyberpunks",'url("./assets/fonts/Cyberpunks.otf")'),i=new FontFace("Cyberpunks",'url("./assets/fonts/Cyberpunks Italic.otf")',{style:"italic"});t.push(e.load(),i.load())}catch(e){o.warn("⚠️ Cyberpunks font creation failed:",e,"FontManager")}try{const e=new FontFace("Interceptor",'url("./assets/fonts/Interceptor.otf")'),i=new FontFace("Interceptor",'url("./assets/fonts/Interceptor Italic.otf")',{style:"italic"}),s=new FontFace("Interceptor",'url("./assets/fonts/Interceptor Bold.otf")',{weight:"bold"}),a=new FontFace("Interceptor",'url("./assets/fonts/Interceptor Bold Italic.otf")',{weight:"bold",style:"italic"});t.push(e.load(),i.load(),s.load(),a.load())}catch(e){o.warn("⚠️ Interceptor font creation failed:",e,"FontManager")}if(t.length>0){const e=yield Promise.allSettled(t);let i=0;e.forEach((s,a)=>{if(s.status==="fulfilled")try{document.fonts.add(s.value),i++}catch(n){o.warn(`⚠️ Failed to add font ${a} to document:`,n,"FontManager")}else o.warn(`⚠️ Font ${a} failed to load:`,s.reason,"FontManager")}),i>0?(this.fontsLoaded=!0,o.info(`🎨 Loaded ${i}/${t.length} custom fonts successfully`,null,"FontManager")):(this.fontsLoaded=!1,o.warn("⚠️ No custom fonts loaded, using fallbacks",null,"FontManager"))}else this.fontsLoaded=!1,o.warn("⚠️ No fonts could be created, using fallbacks",null,"FontManager")}else this.fontsLoaded=!1,o.warn("⚠️ Font Loading API not available, using fallbacks",null,"FontManager")}catch(t){o.warn("⚠️ Font loading completely failed, using fallbacks:",t,"FontManager"),this.fontsLoaded=!1}})}getFont(t,e,i="normal"){const s=this.fonts[t];return`${i} ${e}px ${s}`}setFont(t,e,i,s="normal"){t.font=this.getFont(e,i,s)}areFontsLoaded(){return this.fontsLoaded}preloadFonts(){return b(this,null,function*(){this.fontsLoaded||(yield this.loadFonts())})}getFontTypes(){return Object.keys(this.fonts)}isFontAvailable(t){return"fonts"in document?document.fonts.check(`12px ${t}`):!1}};l(D,"instance");let X=D;const m=X.getInstance();class ct{constructor(){l(this,"animationId",null);l(this,"lastTime",0);l(this,"accumulator",0);l(this,"timestep",1e3/60);l(this,"isRunning",!1);l(this,"isPaused",!1);l(this,"renderer",null);l(this,"physicsEngine",null);l(this,"game",null);l(this,"fpsUpdateTime",0);l(this,"frameCount",0);l(this,"currentFPS",60);l(this,"FPS_UPDATE_INTERVAL",1e3);o.info("🔄 GameLoop initialized",null,"GameLoop")}start(t,e,i,s){if(this.isRunning){o.warn("⚠️ Game loop is already running");return}this.renderer=e||null,this.physicsEngine=i||null,this.game=s||null,this.isRunning=!0,this.isPaused=!1,this.lastTime=performance.now(),this.accumulator=0,o.info("▶️ Game loop started",null,"GameLoop"),this.gameLoop(t)}gameLoop(t){if(!this.isRunning)return;const e=performance.now(),i=e-this.lastTime;this.lastTime=e,this.updateFPSTracking(e);let s=i;if(this.game&&this.game.getPowerUpManager){const a=this.game.getPowerUpManager().getPowerUpEffects();a.timeScale&&(s=i*a.timeScale,console.log(`⏰ GameLoop: timeScale=${a.timeScale}, deltaTime=${i}ms -> ${s}ms`))}for(this.accumulator+=s;this.accumulator>=this.timestep;)this.isPaused||this.update(t,this.timestep),this.accumulator-=this.timestep;this.render(t),this.animationId=requestAnimationFrame(()=>this.gameLoop(t))}update(t,e){this.game&&this.game.update&&this.game.update(e),this.physicsEngine&&this.physicsEngine.update(e)}render(t){if(this.renderer)if(this.renderer.clear(),t.isLoading())this.renderLoading(t);else if(t.isPlaying())this.renderGameplay(t),this.renderAchievementNotification();else if(t.isAttractMode())this.renderAttractMode(t);else if(t.isState(M.SETTINGS)){const e=this.game,i=this.renderer.getContext();if(!i||!e||typeof e.settingsMenu=="undefined"||!e.settingsMenu)return;e.settingsMenu.isFromPauseMenu?this.renderPaused():this.renderMenu(t),e.settingsMenu.draw(i)}else if(t.isState(M.SAVE_LOAD)){const e=this.game,i=this.renderer.getContext();if(!i||!e||typeof e.saveLoadMenu=="undefined"||!e.saveLoadMenu)return;this.renderMenu(t),e.saveLoadMenu.render(i)}else if(t.isState(M.STATS)){const e=this.game,i=this.renderer.getContext();if(!i||!e||typeof e.statsMenu=="undefined"||!e.statsMenu)return;this.renderMenu(t),e.statsMenu.render(i)}else t.isState(M.MENU)?this.renderMenu(t):t.isState(M.PAUSED)?this.renderPaused():t.isState(M.CONFIRM_MENU)?this.renderConfirmDialog(t):t.isState(M.GAME_OVER)&&this.renderGameOver(t)}renderGameplay(t){if(!this.renderer)return;const e=this.renderer.getContext();if(e){if(this.renderer.drawBackground(),this.physicsEngine){for(const i of this.physicsEngine.getObjects()){if(i.id==="game-ball"||i.id.includes("ball"))continue;e.beginPath();const s=i.position||{x:i.x||0,y:i.y||0},a=i.radius||10;e.arc(s.x,s.y,a,0,Math.PI*2),i.isStatic?(e.fillStyle="#ff0066",e.shadowColor="#ff0066"):(e.fillStyle="#00ffff",e.shadowColor="#00ffff"),e.shadowBlur=16,e.fill(),e.shadowBlur=0,e.closePath(),t.isDebugMode()&&this.physicsEngine.getDebug&&this.physicsEngine.getDebug()&&(!i.isStatic&&i.velocity&&(e.beginPath(),e.moveTo(s.x,s.y),e.lineTo(s.x+i.velocity.x*3,s.y+i.velocity.y*3),e.strokeStyle="#ffff00",e.lineWidth=1,e.stroke(),e.closePath()),e.fillStyle="#ffffff",e.font="8px Courier New",e.textAlign="center",e.fillText(i.id,s.x,s.y-a-5))}if(t.isDebugMode()&&this.physicsEngine.getDebug&&this.physicsEngine.getDebug()){if(this.physicsEngine.getCollisionManifolds){const i=this.physicsEngine.getCollisionManifolds();for(const s of i)e.beginPath(),e.arc(s.contactPoint.x,s.contactPoint.y,2,0,Math.PI*2),e.fillStyle="#ff0000",e.fill(),e.closePath()}if(this.physicsEngine.getConstraints){const i=this.physicsEngine.getConstraints();for(const s of i)s.type==="distance"&&s.objectB&&(e.beginPath(),e.moveTo(s.objectA.position.x,s.objectA.position.y),e.lineTo(s.objectB.position.x,s.objectB.position.y),e.strokeStyle="#00ff00",e.lineWidth=1,e.setLineDash([3,3]),e.stroke(),e.setLineDash([]),e.closePath())}}}if(t.isDebugMode()&&(e.fillStyle="#00ffff",e.font="20px Courier New",e.textAlign="center",e.fillText("Circuit Breaker",180,40),e.font="12px Courier New",e.fillText("Robust Physics System Active",180,60)),this.game&&this.game.renderGameplay&&this.game.renderGameplay(),this.physicsEngine){for(const i of this.physicsEngine.getObjects())if(i.id==="game-ball"||i.id.includes("ball")){if(this.renderer){const s=this.game&&this.game.getHoleAnimationState&&this.game.getHoleAnimationState()||void 0;this.renderer.drawChromeBall(i,s)}if(t.isDebugMode()&&this.physicsEngine.getDebug&&this.physicsEngine.getDebug()){const s=i.position||{x:i.x||0,y:i.y||0},a=i.radius||10;!i.isStatic&&i.velocity&&(e.beginPath(),e.moveTo(s.x,s.y),e.lineTo(s.x+i.velocity.x*3,s.y+i.velocity.y*3),e.strokeStyle="#ffff00",e.lineWidth=1,e.stroke(),e.closePath()),e.fillStyle="#ffffff",e.font="8px Courier New",e.textAlign="center",e.fillText(i.id,s.x,s.y-a-5)}}}if(t.isDebugMode()&&this.physicsEngine){const i=this.physicsEngine.getObjects(),s=i.filter(n=>!n.isStatic).length,a=i.filter(n=>n.isStatic).length;if(e.font="10px Courier New",e.textAlign="left",e.fillStyle="#00ffff",e.fillText(`Objects: ${s} dynamic, ${a} static`,10,610),e.fillText(`Gravity: ${this.physicsEngine.getGravity()}`,10,625),this.physicsEngine.getCollisionManifolds){const n=this.physicsEngine.getCollisionManifolds().length;e.fillText(`Collisions: ${n}`,200,610)}e.fillText("Physics: Optimized Verlet (1 substep)",10,595)}}}renderLoading(t){if(!this.renderer)return;const e=this.renderer.getContext();if(!e)return;this.renderer.drawBackground();const i=this.game&&this.game.getLoadingProgress?this.game.getLoadingProgress():0,s=this.game&&this.game.getLoadingStatus?this.game.getLoadingStatus():"Initializing...",a=this.game&&this.game.isLoadingComplete?this.game.isLoadingComplete():!1;e.save(),e.shadowColor="#00f0ff",e.shadowBlur=20,e.fillStyle="#b600f9",m.setFont(e,"display",72,"bold"),e.textAlign="center",e.fillText("CIRCUIT",180,120),e.fillText("BREAKER",180,180),e.restore();const n=Date.now(),r=.6+.4*Math.sin(n/600);e.save(),e.globalAlpha=r,e.fillStyle="#00f0ff",m.setFont(e,"primary",18,"bold"),e.textAlign="center",e.fillText("LOADING...",180,260),e.restore();const c=300,h=20,u=(360-c)/2,d=300;e.fillStyle="#222222",e.fillRect(u,d,c,h),e.strokeStyle="#00f0ff",e.lineWidth=2,e.strokeRect(u,d,c,h);const g=i/100*(c-4);if(g>0&&(e.fillStyle="#00f0ff",e.fillRect(u+2,d+2,g,h-4)),e.fillStyle="#ffffff",m.setFont(e,"primary",14),e.textAlign="center",e.fillText(`${Math.round(i)}%`,180,345),a){const p=.6+.4*Math.sin(n/400);e.save(),e.globalAlpha=p,e.shadowColor="#00ff99",e.shadowBlur=10,e.fillStyle="#00ff99",m.setFont(e,"primary",14,"bold"),e.textAlign="center",e.fillText(s,180,370),e.restore()}else{e.fillStyle="#888888",m.setFont(e,"primary",12),e.textAlign="center",e.fillText(s,180,370);const p=30,x=180,y=400,v=n/100%(Math.PI*2);e.save(),e.translate(x,y),e.rotate(v),e.strokeStyle="#00f0ff",e.lineWidth=3,e.beginPath(),e.arc(0,0,p/2,0,Math.PI*1.5),e.stroke(),e.restore()}e.fillStyle="#444444",m.setFont(e,"primary",8),e.fillText("Circuit Breaker v0.6.0",180,590),e.fillText("Created by Chris Van Doren in July of 2025",180,605)}renderAttractMode(t){if(!this.renderer)return;this.renderGameplay(t);const e=this.renderer.getContext();if(!e)return;e.save(),e.fillStyle="rgba(0, 0, 0, 0.3)",e.fillRect(0,0,360,640);const i=Date.now(),s=.5+.5*Math.sin(i/800);e.globalAlpha=s,e.shadowColor="#00f0ff",e.shadowBlur=15,e.fillStyle="#00f0ff",m.setFont(e,"display",48,"bold"),e.textAlign="center",e.fillText("ATTRACT MODE",180,80),e.restore(),e.fillStyle="#ffffff",m.setFont(e,"primary",14),e.textAlign="center",e.fillText("CIRCUIT BREAKER DEMO",180,120),e.fillText("Press any key to return to menu",180,140),e.fillStyle="#888888",m.setFont(e,"primary",10),e.fillText("A/Z - Left Side Up/Down",180,580),e.fillText("↑/↓ - Right Side Up/Down",180,595),e.fillText("SPACE - Start/Place Ball",180,610),e.fillText("D - Toggle Debug Mode",180,625),e.restore()}renderMenu(t){if(!this.renderer)return;const e=this.renderer.getContext();if(!e)return;this.renderer.drawBackground(),e.strokeStyle="#003366",e.lineWidth=1,e.globalAlpha=.3;for(let r=0;r<=360;r+=20)e.beginPath(),e.moveTo(r,0),e.lineTo(r,640),e.stroke();for(let r=0;r<=640;r+=20)e.beginPath(),e.moveTo(0,r),e.lineTo(360,r),e.stroke();e.globalAlpha=1,e.save(),e.shadowColor="#00f0ff",e.shadowBlur=20,e.fillStyle="#b600f9",m.setFont(e,"display",72,"bold"),e.textAlign="center",e.fillText("CIRCUIT",180,120),e.fillText("BREAKER",180,180),e.restore(),e.fillStyle="#b600f9",m.setFont(e,"primary",16),e.textAlign="center",e.fillText("NEON CYBERPUNK PINBALL",180,280),e.fillStyle="#ffffff",m.setFont(e,"primary",12),e.fillText("Navigate the ball through cyber holes",180,320),e.fillText("to reach all goals and break the circuit",180,340);const i=Date.now(),s=.5+.5*Math.sin(i/500);e.save(),e.globalAlpha=s,e.shadowColor="#00ff99",e.shadowBlur=10,e.fillStyle="#00ff99",m.setFont(e,"primary",14,"bold"),e.fillText("CLICK OR PRESS SPACE TO START",180,420),e.restore(),e.fillStyle="#888888",m.setFont(e,"primary",10),e.fillText("CONTROLS:",180,480),e.fillText("A/Z - Left Side Up/Down",180,500),e.fillText("↑/↓ - Right Side Up/Down",180,520),e.fillText("SPACE - Start/Place Ball",180,540),e.fillText("S - Settings Menu",180,555),e.fillText("L - Save/Load Menu",180,570),e.fillText("T - Statistics Menu",180,585),e.fillText("D - Toggle Debug Mode",180,600);const a=t.isDebugMode()?"ON":"OFF",n=t.isDebugMode()?"#00ff99":"#b600f9";e.fillStyle=n,m.setFont(e,"primary",12),e.fillText(`DEBUG MODE: ${a}`,180,460),e.fillStyle="#444444",m.setFont(e,"primary",8),e.fillText("Circuit Breaker v0.6.0",180,615),e.fillText("Created by Chris Van Doren in July of 2025",180,630)}renderPaused(){if(!this.renderer)return;const t=this.renderer.getContext();t&&(t.fillStyle="rgba(0, 0, 0, 0.7)",t.fillRect(0,0,360,640),t.fillStyle="#00f0ff",m.setFont(t,"display",24,"bold"),t.textAlign="center",t.fillText("PAUSED",180,280),t.fillStyle="#ffffff",m.setFont(t,"primary",14),t.fillText("Press ESC to resume",180,320),t.fillText("Press S for Settings",180,340),t.fillText("Press Y to return to menu",180,360))}renderConfirmDialog(t){if(!this.renderer)return;const e=this.renderer.getContext();if(!e)return;this.renderGameplay(t),e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(0,0,360,640);const i=280,s=160,a=(360-i)/2,n=(640-s)/2;e.fillStyle="#1a1a1a",e.fillRect(a,n,i,s),e.strokeStyle="#b600f9",e.lineWidth=3,e.shadowColor="#b600f9",e.shadowBlur=10,e.strokeRect(a,n,i,s),e.shadowBlur=0,e.fillStyle="#b600f9",m.setFont(e,"primary",18,"bold"),e.textAlign="center",e.fillText("RETURN TO MENU?",180,n+40),e.fillStyle="#ffffff",m.setFont(e,"primary",12),e.fillText("Your progress will be lost.",180,n+70),e.fillText("Are you sure?",180,n+90);const r=n+120;e.fillStyle="#00f0ff",e.shadowColor="#00f0ff",e.shadowBlur=8,m.setFont(e,"primary",14,"bold"),e.fillText("[Y] YES",130,r),e.fillStyle="#00ff99",e.shadowColor="#00ff99",e.shadowBlur=8,e.fillText("[N] NO",230,r),e.shadowBlur=0,e.fillStyle="#888888",m.setFont(e,"primary",10),e.fillText("Press Y to confirm, N or ESC to cancel",180,n+145)}renderAchievementNotification(){var i;const t=this.game,e=(i=this.renderer)==null?void 0:i.getContext();!e||!t||typeof t.achievementNotification=="undefined"||!t.achievementNotification||t.achievementNotification.render(e)}renderGameOver(t){if(!this.renderer)return;const e=this.renderer.getContext();if(!e)return;this.renderer.drawBackground(),e.strokeStyle="#330000",e.lineWidth=1,e.globalAlpha=.3;for(let n=0;n<=360;n+=30)e.beginPath(),e.moveTo(n,0),e.lineTo(n,640),e.stroke();for(let n=0;n<=640;n+=30)e.beginPath(),e.moveTo(0,n),e.lineTo(360,n),e.stroke();e.globalAlpha=1,e.save(),e.shadowColor="#b600f9",e.shadowBlur=25,e.fillStyle="#b600f9",m.setFont(e,"display",28,"bold"),e.textAlign="center",e.fillText("GAME OVER",180,200),e.restore(),e.fillStyle="#ff6666",m.setFont(e,"primary",14),e.textAlign="center",e.fillText("CIRCUIT BREAKER MALFUNCTION",180,230);const i=t.getStateData();e.fillStyle="#ffffff",m.setFont(e,"primary",16),e.fillText(`FINAL SCORE: ${i.score}`,180,280),e.fillText(`LEVEL REACHED: ${i.currentLevel}`,180,310);const s=Date.now(),a=.5+.5*Math.sin(s/400);e.save(),e.globalAlpha=a,e.shadowColor="#00ff99",e.shadowBlur=10,e.fillStyle="#00ff99",m.setFont(e,"primary",12,"bold"),e.fillText("CLICK OR PRESS SPACE TO RETURN TO MENU",180,400),e.restore(),e.fillStyle="#666666",m.setFont(e,"primary",10),e.fillText("SYSTEM: Preparing for circuit restart...",180,480)}pause(){this.isPaused=!0,o.info("⏸️ Game loop paused",null,"GameLoop")}resume(){this.isPaused=!1,o.info("▶️ Game loop resumed",null,"GameLoop")}stop(){this.isRunning=!1,this.animationId!==null&&(cancelAnimationFrame(this.animationId),this.animationId=null),o.info("⏹️ Game loop stopped",null,"GameLoop")}isGameLoopRunning(){return this.isRunning}isGameLoopPaused(){return this.isPaused}updateFPSTracking(t){this.frameCount++,t-this.fpsUpdateTime>=this.FPS_UPDATE_INTERVAL&&(this.currentFPS=Math.round(this.frameCount*1e3/(t-this.fpsUpdateTime)),this.frameCount=0,this.fpsUpdateTime=t,this.game&&this.game.statsManager&&this.game.statsManager.recordEvent({type:"fps_update",timestamp:Date.now(),data:{fps:this.currentFPS}}))}getFPS(){return this.currentFPS}}class S{static setEnabled(t){this.isEnabled=t}static log(t,...e){if(!this.isEnabled)return;const s=`[${new Date().toISOString()}] ${t}`;o.info(s,e.length>0?e:null,"Debug"),this.addToLogs(s)}static warn(t,...e){if(!this.isEnabled)return;const s=`[${new Date().toISOString()}] WARNING: ${t}`;o.warn(s,e.length>0?e:null,"Debug"),this.addToLogs(s)}static error(t,...e){if(!this.isEnabled)return;const s=`[${new Date().toISOString()}] ERROR: ${t}`;o.error(s,e.length>0?e:null,"Debug"),this.addToLogs(s)}static addToLogs(t){this.logs.push(t),this.logs.length>this.maxLogs&&this.logs.shift()}static getLogs(){return[...this.logs]}static clearLogs(){this.logs=[]}static measurePerformance(t,e){if(!this.isEnabled)return e();const i=performance.now(),s=e(),a=performance.now();return this.log(`Performance [${t}]: ${(a-i).toFixed(2)}ms`),s}static createTimer(t){const e=performance.now();return()=>{const i=performance.now();this.log(`Timer [${t}]: ${(i-e).toFixed(2)}ms`)}}static assert(t,e){if(this.isEnabled&&!t)throw this.error(`Assertion failed: ${e}`),new Error(`Assertion failed: ${e}`)}static getMemoryInfo(){return this.isEnabled?{logsCount:this.logs.length,timestamp:new Date().toISOString()}:{}}static exportDebugInfo(){return{enabled:this.isEnabled,logs:this.getLogs(),memory:this.getMemoryInfo()}}}l(S,"isEnabled",!0),l(S,"logs",[]),l(S,"maxLogs",100);const I=class I{constructor(){l(this,"atlases",new Map);l(this,"isLoaded",!1);l(this,"offscreenCanvases",new Map)}static getInstance(){return I.instance||(I.instance=new I),I.instance}load(){return b(this,null,function*(){try{S.log("🚀 Starting sprite atlas loading process..."),yield this.loadAtlas("main","./assets/sprites/atlas_01.json","./assets/sprites/atlas_01.png"),yield this.loadAtlas("powerup","./assets/sprites/powerup_atlas_01.json","./assets/sprites/powerup_atlas_01.png"),this.isLoaded=!0;let t=0;this.atlases.forEach((e,i)=>{const s=Object.keys(e.data.frames).length;t+=s,S.log(`📊 Atlas '${i}' contains ${s} sprites`)}),S.log("🎨 All sprite atlases loaded successfully with",t,"total sprites")}catch(t){S.log("❌ Failed to load sprite atlases:",t),this.isLoaded=!1}})}loadAtlas(t,e,i){return b(this,null,function*(){S.log(`🔄 Loading ${t} atlas from ${e} and ${i}`);const s=yield fetch(e);if(!s.ok)throw new Error(`Failed to load ${t} atlas JSON: ${s.status}`);const a=yield s.json();S.log(`📄 ${t} atlas JSON loaded with ${Object.keys(a.frames).length} sprites`);const n=new Image;n.src=i,yield new Promise((r,c)=>{n.onload=()=>{S.log(`🖼️ ${t} atlas image loaded successfully`),r()},n.onerror=h=>{S.log(`❌ Failed to load ${t} atlas image:`,h),c(h)}}),this.atlases.set(t,{image:n,data:a}),S.log(`🎨 ${t} atlas loaded with`,Object.keys(a.frames).length,"sprites:",Object.keys(a.frames).join(", "))})}getFrame(t){for(const[e,i]of this.atlases)if(i.data.frames[t])return S.log(`✅ Found sprite ${t} in atlas ${e}`),{frame:i.data.frames[t],atlas:e};return S.log(`❌ Sprite ${t} not found in any atlas`),null}drawSprite(t,e,i,s,a=1){if(!this.isLoaded)return S.log(`⚠️ Cannot draw sprite ${e}: atlases not loaded`),!1;const n=this.getFrame(e);if(!n)return S.log(`⚠️ Sprite not found: ${e}`),!1;const r=this.atlases.get(n.atlas);return r?(t.drawImage(r.image,n.frame.x,n.frame.y,n.frame.w,n.frame.h,i,s,n.frame.w*a,n.frame.h*a),!0):(S.log(`⚠️ Atlas not found: ${n.atlas}`),!1)}getSpriteCanvas(t,e=1){const i=`${t}_${e}`;if(this.offscreenCanvases.has(i)){const c=this.offscreenCanvases.get(i);if(c)return c}if(!this.isLoaded)return null;const s=this.getFrame(t);if(!s)return null;const a=this.atlases.get(s.atlas);if(!a)return null;const n=document.createElement("canvas");n.width=s.frame.w*e,n.height=s.frame.h*e;const r=n.getContext("2d");return r?(r.drawImage(a.image,s.frame.x,s.frame.y,s.frame.w,s.frame.h,0,0,s.frame.w*e,s.frame.h*e),this.offscreenCanvases.set(i,n),n):null}getSpriteNames(){const t=[];return this.atlases.forEach(e=>{t.push(...Object.keys(e.data.frames))}),t}isAtlasLoaded(){return this.isLoaded}getAtlasDimensions(t="main"){const e=this.atlases.get(t);return e?{width:e.data.meta.size.w,height:e.data.meta.size.h}:null}clearCache(){this.offscreenCanvases.clear()}};l(I,"instance");let Z=I;const C=Z.getInstance();class ut{constructor(){l(this,"canvas",null);l(this,"ctx",null);l(this,"width",800);l(this,"height",600);l(this,"backgroundSprite",null);l(this,"spritesLoaded",!1);l(this,"currentTint",null);S.log("🎨 Renderer initialized")}loadSprites(){return b(this,null,function*(){try{this.backgroundSprite=new Image,this.backgroundSprite.src="./assets/sprites/playfield_background_02.png";const t=C.load(),e=[new Promise((a,n)=>{this.backgroundSprite?(this.backgroundSprite.onload=()=>a("background"),this.backgroundSprite.onerror=r=>n({sprite:"background",error:r})):n({sprite:"background",error:new Error("Background sprite not initialized")})}),t.then(()=>"atlas").catch(a=>Promise.reject({sprite:"atlas",error:a}))],i=yield Promise.allSettled(e);let s=0;i.forEach((a,n)=>{if(a.status==="fulfilled")s++,S.log(`✅ ${a.value} loaded successfully`);else{const{sprite:r,error:c}=a.reason;S.log(`❌ Failed to load ${r}:`,c)}}),this.spritesLoaded=s>0,s===2?S.log("🎨 All sprites and atlas loaded successfully"):s===1?S.log("⚠️ Some sprites loaded, game will use fallbacks where needed"):S.log("❌ No sprites loaded, game will use fallbacks")}catch(t){S.log("❌ Sprite loading system failed:",t),this.spritesLoaded=!1}})}init(t){if(this.canvas=t,this.ctx=t.getContext("2d"),!this.ctx)throw new Error("Failed to get 2D context from canvas");const e=window.devicePixelRatio||1,i=540,s=960;t.style.width=i+"px",t.style.height=s+"px",t.width=i*e,t.height=s*e,this.ctx.setTransform(e,0,0,e,0,0),this.ctx.scale(1.5,1.5),this.width=t.width,this.height=t.height,S.log(`Renderer initialized with canvas: ${this.width}x${this.height} (dpr: ${e}, scale: 1.5x)`)}clear(){this.ctx&&this.ctx.clearRect(0,0,this.width,this.height)}drawBackground(){this.ctx&&(this.backgroundSprite&&this.spritesLoaded?this.ctx.drawImage(this.backgroundSprite,0,0,360,640):(this.ctx.fillStyle="#1a1a1a",this.ctx.fillRect(0,0,360,640)))}render(){this.ctx}drawTiltingBar(t){if(!this.ctx)return;const e=t.getEndpoints();this.ctx.save(),this.ctx.shadowColor=t.glowColor,this.ctx.shadowBlur=20,this.ctx.lineWidth=t.thickness+4,this.ctx.strokeStyle=t.glowColor,this.ctx.globalAlpha=.3,this.ctx.beginPath(),this.ctx.moveTo(e.start.x,e.start.y),this.ctx.lineTo(e.end.x,e.end.y),this.ctx.stroke(),this.ctx.shadowBlur=0,this.ctx.shadowColor="transparent",this.ctx.globalAlpha=1;const i=C.isAtlasLoaded();if(this.spritesLoaded&&i){const s=C.getFrame("bar_normal");if(s){const a=Math.sqrt(Math.pow(e.end.x-e.start.x,2)+Math.pow(e.end.y-e.start.y,2)),n=Math.atan2(e.end.y-e.start.y,e.end.x-e.start.x),r=t.thickness/s.frame.h,c=s.frame.w*r,h=Math.ceil(a/c),u=(e.start.x+e.end.x)/2,d=(e.start.y+e.end.y)/2;this.ctx.translate(u,d),this.ctx.rotate(n);for(let g=0;g<h;g++){const p=g*c-a/2,x=-t.thickness/2,y=a-g*c,v=Math.min(c,y);v>0&&(this.ctx.save(),v<c&&(this.ctx.beginPath(),this.ctx.rect(p,x,v,t.thickness),this.ctx.clip()),C.drawSprite(this.ctx,"bar_normal",p,x,r),this.ctx.restore())}this.ctx.setTransform(1,0,0,1,0,0)}else this.renderBarFallback(e,t)}else this.renderBarFallback(e,t);this.ctx.fillStyle=t.color,this.ctx.beginPath(),this.ctx.arc(t.position.x,t.position.y,6,0,Math.PI*2),this.ctx.fill(),this.ctx.restore()}renderBarFallback(t,e){this.ctx&&(this.ctx.lineWidth=e.thickness,this.ctx.strokeStyle=e.color,this.ctx.beginPath(),this.ctx.moveTo(t.start.x,t.start.y),this.ctx.lineTo(t.end.x,t.end.y),this.ctx.stroke())}drawObstacle(t){if(!this.ctx)return;this.ctx.save();const e=t.position.x+t.size.x/2,i=t.position.y+t.size.y/2;switch(t.type){case"electrical_hazard":this.ctx.shadowColor="#b600f9",this.ctx.shadowBlur=t.isActive?15:5,this.ctx.fillStyle=t.isActive?"#b600f9":"#660066",this.ctx.strokeStyle="#d466ff",this.ctx.lineWidth=2,this.ctx.fillRect(t.position.x,t.position.y,t.size.x,t.size.y),this.ctx.strokeRect(t.position.x,t.position.y,t.size.x,t.size.y),t.isActive&&this.drawElectricalSparks(e,i,t.size.x),this.ctx.fillStyle="#00ff99",this.ctx.font="12px monospace",this.ctx.textAlign="center",this.ctx.fillText("⚡",e,i+4);break;case"barrier":this.ctx.shadowColor="#00f0ff",this.ctx.shadowBlur=10,this.ctx.fillStyle="#006677",this.ctx.strokeStyle="#00f0ff",this.ctx.lineWidth=2,this.ctx.fillRect(t.position.x,t.position.y,t.size.x,t.size.y),this.ctx.strokeRect(t.position.x,t.position.y,t.size.x,t.size.y);break;case"hole":this.ctx.shadowColor="#b600f9",this.ctx.shadowBlur=8,this.ctx.fillStyle="#220000",this.ctx.strokeStyle="#b600f9",this.ctx.lineWidth=2,this.ctx.fillRect(t.position.x,t.position.y,t.size.x,t.size.y),this.ctx.strokeRect(t.position.x,t.position.y,t.size.x,t.size.y);break;default:this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=2,this.ctx.strokeRect(t.position.x,t.position.y,t.size.x,t.size.y);break}this.ctx.restore()}drawElectricalSparks(t,e,i){if(this.ctx){this.ctx.save(),this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=1,this.ctx.globalAlpha=.8;for(let s=0;s<5;s++){const a=Math.random()*Math.PI*2,n=Math.random()*i*.5,r=t+Math.cos(a)*5,c=e+Math.sin(a)*5,h=r+Math.cos(a)*n,u=c+Math.sin(a)*n;this.ctx.beginPath(),this.ctx.moveTo(r,c),this.ctx.lineTo(h,u),this.ctx.stroke()}this.ctx.restore()}}drawTargetPort(t){if(!this.ctx)return;this.ctx.save();const e=t.position.x,i=t.position.y;this.ctx.shadowColor=t.color,this.ctx.shadowBlur=20,this.ctx.fillStyle=t.color,this.ctx.globalAlpha=.3,this.ctx.beginPath(),this.ctx.arc(e,i,t.radius+10,0,Math.PI*2),this.ctx.fill(),this.ctx.globalAlpha=1,this.ctx.shadowBlur=0,this.ctx.fillStyle=t.isCompleted?"#333333":t.color,this.ctx.beginPath(),this.ctx.arc(e,i,t.radius,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle=t.isCompleted?"#666666":t.color,this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.arc(e,i,t.radius,0,Math.PI*2),this.ctx.stroke(),this.ctx.fillStyle="#ffffff",this.ctx.font="16px monospace",this.ctx.textAlign="center",this.ctx.fillText(t.isCompleted?"✓":"○",e,i+6),this.ctx.restore()}drawHole(t,e=!1,i=!1){var x;if(!this.ctx)return;this.ctx.save();const s=t.position.x,a=t.position.y,n=t.isGoal,r=t.powerUpType!==void 0,c=((x=t.saucerState)==null?void 0:x.isActive)||!1,h=t.radius*1.2;let u,d,g;if(n)u="#ff6600",d="#441100",g="#220000";else if(r){const y={SLOW_MO_SURGE:{active:"#00ffff",dark:"#004444",darker:"#002222"},MAGNETIC_GUIDE:{active:"#ff00ff",dark:"#440044",darker:"#220022"},CIRCUIT_PATCH:{active:"#00ff00",dark:"#004400",darker:"#002200"},OVERCLOCK_BOOST:{active:"#ff6600",dark:"#441100",darker:"#220000"},SCAN_REVEAL:{active:"#ffff00",dark:"#444400",darker:"#222200"}},v=y[t.powerUpType]||y.SLOW_MO_SURGE;u=v.active,d=v.dark,g=v.darker}else u="#00ff99",d="#004400",g="#002200";const p=C.isAtlasLoaded();if(S.log(`🔍 Checking hole sprite: spritesLoaded=${this.spritesLoaded}, atlasLoaded=${p}`),this.spritesLoaded&&p){let y;n?y="ball_whole_powerup":r?y={SLOW_MO_SURGE:"hourglass",MAGNETIC_GUIDE:"magnet",CIRCUIT_PATCH:"chip",OVERCLOCK_BOOST:"cross",SCAN_REVEAL:"eye"}[t.powerUpType]||"hourglass":y="ball_whole_normal";const v=C.getFrame(y);if(v){S.log(`🎯 Drawing sprite: ${y} from atlas: ${v.atlas}`);const A=h*2/Math.max(v.frame.w,v.frame.h);i&&(this.ctx.strokeStyle=u,this.ctx.lineWidth=3,this.ctx.globalAlpha=.5,this.ctx.beginPath(),this.ctx.arc(s,a,h+5,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1),e&&(this.ctx.globalAlpha=.6),C.drawSprite(this.ctx,y,s-v.frame.w*A/2,a-v.frame.h*A/2,A),this.ctx.globalAlpha=1,e&&(this.ctx.fillStyle=u,this.ctx.globalAlpha=.3,this.ctx.beginPath(),this.ctx.arc(s,a,h-2,0,Math.PI*2),this.ctx.fill(),this.ctx.globalAlpha=1,this.ctx.fillStyle=u,this.ctx.font="12px monospace",this.ctx.textAlign="center",this.ctx.fillText("✓",s,a+4))}else S.log(`⚠️ Sprite not found: ${y}, using fallback rendering`),this.renderHoleFallback(t,e,s,a,n,u,d,g,i,h);c&&r&&this.drawSaucerEffects(s,a,h,u,t)}else this.renderHoleFallback(t,e,s,a,n,u,d,g,i,h),c&&r&&this.drawSaucerEffects(s,a,h,u,t);this.ctx.restore()}renderHoleFallback(t,e,i,s,a,n,r,c,h,u){if(this.ctx){if(h&&(this.ctx.strokeStyle=n,this.ctx.lineWidth=3,this.ctx.globalAlpha=.5,this.ctx.beginPath(),this.ctx.arc(i,s,u+5,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1),e)this.ctx.shadowColor=n,this.ctx.shadowBlur=15,this.ctx.fillStyle=c,this.ctx.beginPath(),this.ctx.arc(i,s,u-2,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle=c,this.ctx.beginPath(),this.ctx.arc(i,s,u/2,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle=n,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(i,s,u-2,0,Math.PI*2),this.ctx.stroke(),this.ctx.fillStyle=n,this.ctx.font="12px monospace",this.ctx.textAlign="center",this.ctx.fillText("✓",i,s+4);else if(this.ctx.shadowColor=n,this.ctx.shadowBlur=a?15:10,this.ctx.fillStyle=n,this.ctx.globalAlpha=a?.8:.6,this.ctx.beginPath(),this.ctx.arc(i,s,u-2,0,Math.PI*2),this.ctx.fill(),this.ctx.globalAlpha=1,this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(i,s,u/2,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle=n,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(i,s,u-2,0,Math.PI*2),this.ctx.stroke(),this.ctx.fillStyle="#ffffff",this.ctx.font="10px monospace",this.ctx.textAlign="center",this.ctx.fillText(a?"🎯":"●",i,s+3),t.powerUpType){const g={SLOW_MO_SURGE:"⏰",MAGNETIC_GUIDE:"🧲",CIRCUIT_PATCH:"🛡️",OVERCLOCK_BOOST:"⚡",SCAN_REVEAL:"🔍"}[t.powerUpType]||"?";this.ctx.shadowColor=n,this.ctx.shadowBlur=8,this.ctx.fillStyle="#ffffff",this.ctx.font="14px Interceptor",this.ctx.textAlign="center",this.ctx.fillText(g,i,s+5),this.ctx.shadowBlur=0}}}drawSaucerEffects(t,e,i,s,a){if(!this.ctx||!a.saucerState)return;this.ctx.save();const n=a.saucerState,r=Date.now()*.01;if(n.phase==="sinking"){const c=.7+.3*Math.sin(r*4);this.ctx.shadowColor=s,this.ctx.shadowBlur=25*c,this.ctx.globalAlpha=.8*c;const h=n.sinkDepth;for(let u=0;u<3;u++){const d=i+4+u*4,g=.6*(1-u*.3)*(1-h*.5);this.ctx.globalAlpha=g,this.ctx.strokeStyle=s,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t,e+h*4,d,0,Math.PI*2),this.ctx.stroke()}this.ctx.fillStyle=s,this.ctx.font="8px Interceptor",this.ctx.textAlign="center",this.ctx.globalAlpha=.9,this.ctx.fillText("SINKING",t,e+i+20)}else if(n.phase==="waiting"){const c=.6+.2*Math.sin(r*2);this.ctx.shadowColor=s,this.ctx.shadowBlur=20*c,this.ctx.globalAlpha=.7*c,this.ctx.strokeStyle=s,this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.arc(t,e,i+8,0,Math.PI*2),this.ctx.stroke(),this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t,e,i+4,0,Math.PI*2),this.ctx.stroke();const h=r*1.5,u=i+6;this.ctx.strokeStyle=s,this.ctx.lineWidth=1,this.ctx.globalAlpha=.8;for(let d=0;d<4;d++){const g=h+d*Math.PI/2,p=t+Math.cos(g)*u,x=e+Math.sin(g)*u,y=t+Math.cos(g)*(u+6),v=e+Math.sin(g)*(u+6);this.ctx.beginPath(),this.ctx.moveTo(p,x),this.ctx.lineTo(y,v),this.ctx.stroke()}this.ctx.fillStyle=s,this.ctx.font="8px Interceptor",this.ctx.textAlign="center",this.ctx.globalAlpha=.9,this.ctx.fillText("WAITING",t,e+i+20)}else if(n.phase==="ejecting"){const c=Math.min((Date.now()-n.startTime)/200,1),h=.8+.4*Math.sin(r*6);this.ctx.shadowColor=s,this.ctx.shadowBlur=30*h,this.ctx.globalAlpha=.9*h;for(let u=0;u<3;u++){const d=i+2+u*3,g=e-c*10*(u+1),p=.7*(1-u*.3)*(1-c*.3);this.ctx.globalAlpha=p,this.ctx.strokeStyle=s,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t,g,d,0,Math.PI*2),this.ctx.stroke()}this.ctx.fillStyle=s,this.ctx.font="8px Interceptor",this.ctx.textAlign="center",this.ctx.globalAlpha=.9,this.ctx.fillText("EJECTING",t,e+i+20)}this.ctx.restore()}drawDangerZone(t){if(!this.ctx)return;this.ctx.save();const e=t.position.x+(t.width||t.radius*2)/2,i=t.position.y+(t.height||t.radius*2)/2;this.ctx.shadowColor="#b600f9",this.ctx.shadowBlur=20,this.ctx.fillStyle="#220000",this.ctx.globalAlpha=.7,this.ctx.fillRect(t.position.x,t.position.y,t.width||t.radius*2,t.height||t.radius*2),this.ctx.globalAlpha=1,this.ctx.strokeStyle="#b600f9",this.ctx.lineWidth=3,this.ctx.strokeRect(t.position.x,t.position.y,t.width||t.radius*2,t.height||t.radius*2),this.ctx.fillStyle="#000000",this.ctx.font="20px monospace",this.ctx.textAlign="center",this.ctx.fillText("⚠",e,i+8),this.ctx.restore()}drawChromeBall(t,e){if(!this.ctx)return;this.ctx.save();const i=t.position.x,s=t.position.y,a=t.radius,n=(e==null?void 0:e.scale)||1,r=(e==null?void 0:e.opacity)||1;this.ctx.globalAlpha=r;const c=C.isAtlasLoaded();if(this.spritesLoaded&&c){const h=a*2*n,u=C.getFrame("ball_normal");if(u){const d=h/u.frame.w;this.ctx.fillStyle="rgba(0, 0, 0, 0.3)",this.ctx.beginPath(),this.ctx.arc(i+a*n*.1,s+a*n*.1,a*n,0,Math.PI*2),this.ctx.fill(),C.drawSprite(this.ctx,"ball_normal",i-h/2,s-h/2,d)}else{const d=a*n,g=this.ctx.createRadialGradient(i-d*.3,s-d*.3,0,i,s,d);g.addColorStop(0,"#ffffff"),g.addColorStop(.1,"#e6e6e6"),g.addColorStop(.3,"#cccccc"),g.addColorStop(.6,"#999999"),g.addColorStop(.8,"#666666"),g.addColorStop(1,"#333333"),this.ctx.fillStyle="rgba(0, 0, 0, 0.3)",this.ctx.beginPath(),this.ctx.arc(i+d*.1,s+d*.1,d,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle=g,this.ctx.beginPath(),this.ctx.arc(i,s,d,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="rgba(255, 255, 255, 1)",this.ctx.beginPath(),this.ctx.arc(i-d*.35,s-d*.35,d*.08,0,Math.PI*2),this.ctx.fill()}}else{const h=a*n,u=this.ctx.createRadialGradient(i-h*.3,s-h*.3,0,i,s,h);u.addColorStop(0,"#ffffff"),u.addColorStop(.1,"#e6e6e6"),u.addColorStop(.3,"#cccccc"),u.addColorStop(.6,"#999999"),u.addColorStop(.8,"#666666"),u.addColorStop(1,"#333333"),this.ctx.fillStyle="rgba(0, 0, 0, 0.3)",this.ctx.beginPath(),this.ctx.arc(i+h*.1,s+h*.1,h,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle=u,this.ctx.beginPath(),this.ctx.arc(i,s,h,0,Math.PI*2),this.ctx.fill();const d=this.ctx.createRadialGradient(i-h*.4,s-h*.4,0,i-h*.2,s-h*.2,h*.6);d.addColorStop(0,"rgba(255, 255, 255, 0.9)"),d.addColorStop(.3,"rgba(255, 255, 255, 0.3)"),d.addColorStop(1,"rgba(255, 255, 255, 0)"),this.ctx.fillStyle=d,this.ctx.beginPath(),this.ctx.arc(i-h*.2,s-h*.2,h*.6,0,Math.PI*2),this.ctx.fill();const g=this.ctx.createRadialGradient(i-h*.3,s-h*.3,0,i-h*.3,s-h*.3,h*.4);g.addColorStop(0,"rgba(255, 255, 255, 1)"),g.addColorStop(.5,"rgba(255, 255, 255, 0.8)"),g.addColorStop(1,"rgba(255, 255, 255, 0)"),this.ctx.fillStyle=g,this.ctx.beginPath(),this.ctx.arc(i-h*.3,s-h*.3,h*.4,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="rgba(255, 255, 255, 0.9)",this.ctx.beginPath(),this.ctx.arc(i-h*.4,s-h*.4,h*.15,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="rgba(255, 255, 255, 1)",this.ctx.beginPath(),this.ctx.arc(i-h*.35,s-h*.35,h*.08,0,Math.PI*2),this.ctx.fill();const p=this.ctx.createRadialGradient(i+h*.3,s+h*.2,0,i+h*.3,s+h*.2,h*.5);p.addColorStop(0,"rgba(0, 255, 255, 0.2)"),p.addColorStop(.3,"rgba(255, 0, 102, 0.1)"),p.addColorStop(1,"rgba(0, 0, 0, 0)"),this.ctx.fillStyle=p,this.ctx.beginPath(),this.ctx.arc(i+h*.3,s+h*.2,h*.5,0,Math.PI*2),this.ctx.fill()}this.ctx.restore()}drawAtlasSprite(t,e,i,s=1,a=!0){if(!this.ctx||!C.isAtlasLoaded())return!1;const n=C.getFrame(t);if(!n)return!1;const r=a?e-n.frame.w*s/2:e,c=a?i-n.frame.h*s/2:i;this.currentTint&&(this.ctx.save(),this.ctx.globalCompositeOperation="multiply",this.ctx.fillStyle=this.currentTint,this.ctx.globalAlpha=.3);const h=C.drawSprite(this.ctx,t,r,c,s);return this.currentTint&&this.ctx.restore(),h}setTint(t){this.currentTint=t}clearTint(){this.currentTint=null}drawFlipper(t,e){if(!this.ctx)return;const i=e?"flipper_left_down":"flipper_right_down";this.drawAtlasSprite(i,t.position.x,t.position.y,2)}drawBumper(t,e=!1){if(!this.ctx)return;const i=e?"round_bumper_active":"round_bumper_idle";this.drawAtlasSprite(i,t.position.x,t.position.y,1.5)}drawSpinner(t,e=1){if(!this.ctx)return;const s=`spinner_${Math.max(1,Math.min(4,e))}`;this.drawAtlasSprite(s,t.position.x,t.position.y,2)}getContext(){return this.ctx}getDimensions(){return{width:this.width,height:this.height}}resize(t,e){this.canvas&&(this.width=t,this.height=e,this.canvas.width=t,this.canvas.height=e,S.log(`Renderer resized to: ${t}x${e}`))}}class dt{constructor(){l(this,"gravity",{x:0,y:400});l(this,"airResistance",.999);l(this,"objects",[]);l(this,"constraints",[]);l(this,"spatialGrid",new Map);l(this,"gridSize",60);l(this,"tiltingBar",null);l(this,"bounds",{width:360,height:640});l(this,"deltaTime",1/60);l(this,"debug",!1);l(this,"collisionManifolds",[]);l(this,"audioCallback",null);l(this,"audioTimeouts",new Map);l(this,"AUDIO_COOLDOWN_MS",150);S.log("⚡ Advanced PhysicsEngine initialized with Verlet integration")}setTiltingBar(t){this.tiltingBar=t}setAudioCallback(t){this.audioCallback=t}playAudioWithCooldown(t,e,i){if(!this.audioCallback)return;const s=Date.now(),a=`${i}_${e}`,n=this.audioTimeouts.get(a)||0;s-n>=this.AUDIO_COOLDOWN_MS&&(this.audioCallback(t,e),this.audioTimeouts.set(a,s))}createObject(t){const e=t.mass||1;return{id:t.id,position:{x:t.x,y:t.y},previousPosition:{x:t.x,y:t.y},acceleration:{x:0,y:0},velocity:{x:0,y:0},radius:t.radius,mass:e,inverseMass:t.isStatic?0:1/e,restitution:t.restitution||.7,friction:t.friction||.3,isStatic:t.isStatic||!1,constraints:[],x:t.x,y:t.y,vx:0,vy:0}}addObject(t){var e,i;t.previousPosition||(t.previousPosition={x:((e=t.position)==null?void 0:e.x)||t.x||0,y:((i=t.position)==null?void 0:i.y)||t.y||0}),t.acceleration||(t.acceleration={x:0,y:0}),t.velocity||(t.velocity={x:0,y:0}),t.inverseMass||(t.inverseMass=t.isStatic?0:1/(t.mass||1)),t.constraints||(t.constraints=[]),this.objects.push(t),this.updateSpatialGrid(),S.log(`Added physics object: ${t.id}`)}removeObject(t){this.objects=this.objects.filter(e=>e.id!==t),this.updateSpatialGrid(),S.log(`Removed physics object: ${t}`)}addConstraint(t){this.constraints.push(t),S.log(`Added constraint: ${t.type}`)}update(t){const e=t/1e3;this.simulateStep(e),this.updateBackwardCompatibility()}simulateStep(t){this.collisionManifolds=[];for(const e of this.objects)e.isRollingOnBar=!1;this.objects.length>0&&this.updateSpatialGrid(),this.integratePositions(t),this.solveConstraints(),this.detectAndResolveCollisions(),this.handleTiltingBarCollisions(),this.handleBoundaryCollisions(),this.updateVelocities(t)}integratePositions(t){for(const e of this.objects){if(e.isStatic)continue;if(this.isBallHeld(e.id)){const r=this.getHeldBallTarget(e.id);r&&(e.position.x+=(r.x-e.position.x)*.1,e.position.y+=(r.y-e.position.y)*.1),e.previousPosition.x=e.position.x,e.previousPosition.y=e.position.y;continue}const i=e.position.x-e.previousPosition.x,s=e.position.y-e.previousPosition.y;e.previousPosition.x=e.position.x,e.previousPosition.y=e.position.y;const a=this.gravity.x*t*t,n=this.gravity.y*t*t;e.position.x+=i*this.airResistance+a,e.position.y+=s*this.airResistance+n}}updateVelocities(t){for(const e of this.objects)e.isStatic||(e.velocity.x=(e.position.x-e.previousPosition.x)/t,e.velocity.y=(e.position.y-e.previousPosition.y)/t)}solveConstraints(){for(const t of this.constraints)this.solveConstraint(t)}solveConstraint(t){switch(t.type){case"distance":this.solveDistanceConstraint(t);break;case"position":this.solvePositionConstraint(t);break;case"angle":this.solveAngleConstraint(t);break}}solveDistanceConstraint(t){if(!t.objectB||!t.targetDistance)return;const e=t.objectA,i=t.objectB,s=i.position.x-e.position.x,a=i.position.y-e.position.y,n=Math.sqrt(s*s+a*a);if(n===0)return;const c=(t.targetDistance-n)/n/2,h=s*c*t.stiffness,u=a*c*t.stiffness;e.isStatic||(e.position.x-=h*e.inverseMass,e.position.y-=u*e.inverseMass),i.isStatic||(i.position.x+=h*i.inverseMass,i.position.y+=u*i.inverseMass)}solvePositionConstraint(t){if(!t.targetPosition)return;const e=t.objectA;if(e.isStatic)return;const i=t.targetPosition.x-e.position.x,s=t.targetPosition.y-e.position.y;e.position.x+=i*t.stiffness,e.position.y+=s*t.stiffness}solveAngleConstraint(t){}detectAndResolveCollisions(){if(!(this.objects.length<2))for(let t=0;t<this.objects.length;t++){const e=this.objects[t];if(!e.isStatic)for(let i=t+1;i<this.objects.length;i++){const s=this.objects[i],a=s.position.x-e.position.x,n=s.position.y-e.position.y,r=e.radius+s.radius+5;if(a*a+n*n<r*r){const c=this.detectCollision(e,s);c&&(this.collisionManifolds.push(c),this.resolveCollisionSimple(c))}}}}detectCollision(t,e){const i=e.position.x-t.position.x,s=e.position.y-t.position.y,a=Math.sqrt(i*i+s*s),n=t.radius+e.radius;if(a<n){const r=n-a,c=a>0?{x:i/a,y:s/a}:{x:1,y:0};return{objectA:t,objectB:e,normal:c,penetration:r,contactPoint:{x:t.position.x+c.x*t.radius,y:t.position.y+c.y*t.radius}}}return null}resolveCollisionSimple(t){const e=t.objectA,i=t.objectB,s=t.normal.x*t.penetration*.5,a=t.normal.y*t.penetration*.5;e.isStatic||(e.position.x-=s,e.position.y-=a),i.isStatic||(i.position.x+=s,i.position.y+=a);const n={x:i.velocity.x-e.velocity.x,y:i.velocity.y-e.velocity.y},r=n.x*t.normal.x+n.y*t.normal.y;if(r>0)return;const c=Math.min(e.restitution,i.restitution)*.8,h=r*c;e.isStatic||(e.previousPosition.x+=t.normal.x*h*.5,e.previousPosition.y+=t.normal.y*h*.5),i.isStatic||(i.previousPosition.x-=t.normal.x*h*.5,i.previousPosition.y-=t.normal.y*h*.5)}handleTiltingBarCollisions(){if(this.tiltingBar)for(const t of this.objects){if(t.isStatic||this.isBallHeld(t.id))continue;const e=this.tiltingBar.getEndpoints(),i=this.getClosestPointOnLineSegment(t.position,e.start,e.end),s=Math.sqrt(k(t.position.x-i.x,2)+k(t.position.y-i.y,2)),n=(this.tiltingBar.thickness||12)/2,r=t.radius+n;if(s<r){const c={x:e.end.x-e.start.x,y:e.end.y-e.start.y},h=Math.sqrt(c.x*c.x+c.y*c.y),u={x:c.x/h,y:c.y/h},d={x:-c.y/h,y:c.x/h};d.y>0&&(d.x=-d.x,d.y=-d.y);const g={x:i.x+d.x*n,y:i.y+d.y*n};t.position.x=g.x+d.x*t.radius,t.position.y=g.y+d.y*t.radius;const p={x:t.position.x-t.previousPosition.x,y:t.position.y-t.previousPosition.y},x=p.x*d.x+p.y*d.y,y=p.x*u.x+p.y*u.y;if(x<-.5){const v=t.restitution*.8,L=this.tiltingBar.friction||.3,A={x:p.x-2*x*d.x,y:p.y-2*x*d.y};A.x*=v*(1-L),A.y*=v,t.previousPosition.x=t.position.x-A.x,t.previousPosition.y=t.position.y-A.y;const K=Math.sqrt(p.x*p.x+p.y*p.y);this.playAudioWithCooldown(K,"bounce",t.id)}else this.applyRollingPhysics(t,u,d,y,this.deltaTime)}}}applyRollingPhysics(t,e,i,s,a){var g;const n=this.gravity.x*e.x+this.gravity.y*e.y,r=((g=this.tiltingBar)==null?void 0:g.friction)||.05,c=.01;let h=n;if(Math.abs(s)>.5){const p=-Math.sign(s)*c*Math.abs(this.gravity.y);h+=p}if(Math.abs(s)>.5){const p=-Math.sign(s)*r*Math.abs(this.gravity.y);h+=p}const u=s+h*a,d={x:u*e.x,y:u*e.y};t.previousPosition.x=t.position.x-d.x,t.previousPosition.y=t.position.y-d.y,t.velocity.x=d.x,t.velocity.y=d.y,t.isRollingOnBar=!0}isBallOnBar(t){const e=this.objects.find(c=>c.id===t);if(!e||!this.tiltingBar)return!1;const i=this.tiltingBar.getEndpoints(),s=this.getClosestPointOnLineSegment(e.position,i.start,i.end),a=Math.sqrt(k(e.position.x-s.x,2)+k(e.position.y-s.y,2)),n=this.tiltingBar.thickness||12,r=e.radius+n/2;return a<=r+2}handleBoundaryCollisions(){for(const t of this.objects)if(!t.isStatic&&!this.isBallHeld(t.id)){if(t.position.y+t.radius>this.bounds.height){t.position.y=this.bounds.height-t.radius;const e={x:t.position.x-t.previousPosition.x,y:t.position.y-t.previousPosition.y};e.y>0&&(t.previousPosition.y=t.position.y+e.y*t.restitution,t.previousPosition.x=t.position.x-e.x*.8)}if(t.position.x-t.radius<0){t.position.x=t.radius;const e={x:t.position.x-t.previousPosition.x,y:t.position.y-t.previousPosition.y};e.x<0&&(t.previousPosition.x=t.position.x+e.x*t.restitution)}if(t.position.x+t.radius>this.bounds.width){t.position.x=this.bounds.width-t.radius;const e={x:t.position.x-t.previousPosition.x,y:t.position.y-t.previousPosition.y};e.x>0&&(t.previousPosition.x=t.position.x+e.x*t.restitution)}}}isBallHeld(t){return!1}getHeldBallTarget(t){return null}updateBackwardCompatibility(){for(const t of this.objects)t.x=t.position.x,t.y=t.position.y,t.vx=t.velocity.x,t.vy=t.velocity.y}updateSpatialGrid(){if(!(this.objects.length<=3)){this.spatialGrid.clear();for(const t of this.objects){const e=this.getObjectCells(t);for(const i of e){this.spatialGrid.has(i)||this.spatialGrid.set(i,{objects:[]});const s=this.spatialGrid.get(i);s&&s.objects.push(t)}}}}getObjectCells(t){const e=[],i=t.radius,s=Math.floor((t.position.x-i)/this.gridSize),a=Math.floor((t.position.x+i)/this.gridSize),n=Math.floor((t.position.y-i)/this.gridSize),r=Math.floor((t.position.y+i)/this.gridSize);for(let c=s;c<=a;c++)for(let h=n;h<=r;h++)e.push(`${c},${h}`);return e}getClosestPointOnLineSegment(t,e,i){const s=i.x-e.x,a=i.y-e.y,n=Math.sqrt(s*s+a*a);if(n===0)return e;const r=Math.max(0,Math.min(1,((t.x-e.x)*s+(t.y-e.y)*a)/(n*n)));return{x:e.x+r*s,y:e.y+r*a}}getObjects(){return this.objects}setGravity(t,e){this.gravity.x=t,this.gravity.y=e,S.log(`Gravity set to: (${t}, ${e})`)}setAirResistance(t){this.airResistance=Math.max(0,Math.min(1,t)),S.log(`Air resistance set to: ${this.airResistance}`)}setBounds(t,e){this.bounds.width=t,this.bounds.height=e,S.log(`Physics bounds set to: ${t}x${e}`)}setDebug(t){this.debug=t}getDebug(){return this.debug}getCollisionManifolds(){return this.collisionManifolds}getConstraints(){return this.constraints}getFriction(){return .98}getBounceEnergy(){return .7}getGravity(){return this.gravity.y}setFriction(t){S.log("Legacy friction setting ignored - use per-object friction instead")}setBounceEnergy(t){S.log("Legacy bounce energy setting ignored - use per-object restitution instead")}}class ft{constructor(t){l(this,"position");l(this,"rotation",0);l(this,"targetRotation",0);l(this,"leftSideHeight",590);l(this,"rightSideHeight",590);l(this,"minSideHeight",50);l(this,"maxSideHeight",590);l(this,"sideSpeed",100);l(this,"width");l(this,"height");l(this,"maxRotation");l(this,"rotationSpeed");l(this,"friction");l(this,"speedMultiplier",1);l(this,"color","#00f0ff");l(this,"glowColor","#b600f9");l(this,"thickness",12);this.position=w({},t.position),this.width=t.width,this.height=t.height,this.maxRotation=t.maxRotation,this.rotationSpeed=t.rotationSpeed,this.friction=t.friction}setTargetRotation(t){this.targetRotation=Math.max(-this.maxRotation,Math.min(this.maxRotation,t))}moveLeftSide(t){t!==0&&(this.leftSideHeight-=t*this.sideSpeed*this.speedMultiplier*(1/60),this.leftSideHeight=Math.max(this.minSideHeight,Math.min(this.maxSideHeight,this.leftSideHeight)))}moveRightSide(t){t!==0&&(this.rightSideHeight-=t*this.sideSpeed*this.speedMultiplier*(1/60),this.rightSideHeight=Math.max(this.minSideHeight,Math.min(this.maxSideHeight,this.rightSideHeight)))}getTiltPercentage(){return this.rotation/this.maxRotation}update(t){const e=this.rightSideHeight-this.leftSideHeight,i=this.maxSideHeight-this.minSideHeight;this.rotation=e/i*this.maxRotation,this.targetRotation=this.rotation}getEndpoints(){const t=this.width/2;return{start:{x:this.position.x-t,y:this.leftSideHeight},end:{x:this.position.x+t,y:this.rightSideHeight}}}getNormal(){const t=this.getEndpoints(),e=t.end.x-t.start.x,i=t.end.y-t.start.y,s=Math.sqrt(e*e+i*i);return s===0?{x:0,y:-1}:{x:-i/s,y:e/s}}isPointNearBar(t,e){const i=this.getEndpoints(),s=this.distanceToLineSegment(t,i.start,i.end),a=e+this.thickness/2+2;return s<=a}distanceToLineSegment(t,e,i){const s=i.x-e.x,a=i.y-e.y,n=Math.sqrt(s*s+a*a);if(n===0)return Math.sqrt(k(t.x-e.x,2)+k(t.y-e.y,2));const r=Math.max(0,Math.min(1,((t.x-e.x)*s+(t.y-e.y)*a)/(n*n))),c={x:e.x+r*s,y:e.y+r*a};return Math.sqrt(k(t.x-c.x,2)+k(t.y-c.y,2))}getCollisionResponse(t,e,i){const s=this.getEndpoints(),a=this.getNormal(),n=this.distanceToLineSegment(t,s.start,s.end),r=i+this.thickness/2-n,c={x:t.x+a.x*r,y:t.y+a.y*r},h=e.x*a.x+e.y*a.y;let u=e;if(h<0){const d={x:e.x-2*h*a.x,y:e.y-2*h*a.y},g=1-this.friction,p=.8;u={x:d.x*g*p,y:d.y*p}}return{velocity:u,position:c}}setSpeedMultiplier(t){this.speedMultiplier=t}getSpeedMultiplier(){return this.speedMultiplier}reset(){this.leftSideHeight=this.maxSideHeight,this.rightSideHeight=this.maxSideHeight,this.rotation=0,this.targetRotation=0,this.speedMultiplier=1,o.info("🔄 Tilting bar reset to starting position",null,"TiltingBar")}}class gt{constructor(){l(this,"inputState",{keys:{},mouse:{x:0,y:0,isDown:!1,button:-1},tiltInput:0});l(this,"previousKeys",{});l(this,"canvas",null);l(this,"keyBindings",{leftSideUp:["KeyA"],leftSideDown:["KeyZ"],rightSideUp:["ArrowUp"],rightSideDown:["ArrowDown"],start:["Space"],reset:["KeyR"],pause:["KeyP","Escape"]});l(this,"previousMouseState",!1);this.setupEventListeners()}init(t){this.canvas=t,this.setupCanvasListeners()}getInputState(){return w({},this.inputState)}getTiltInput(){return this.inputState.tiltInput}getLeftSideInput(){let t=0;return this.isActionPressed("leftSideUp")&&(t=1),this.isActionPressed("leftSideDown")&&(t=-1),t}getRightSideInput(){let t=0;return this.isActionPressed("rightSideUp")&&(t=1),this.isActionPressed("rightSideDown")&&(t=-1),t}isActionPressed(t){return this.keyBindings[t].some(e=>this.inputState.keys[e])}isActionJustPressed(t){const e=this.keyBindings[t].some(i=>this.inputState.keys[i]&&!this.previousKeys[i]);return t==="start"&&e&&o.debug("🔑 Start key (SPACE) just pressed!",null,"InputManager"),e}isKeyJustPressed(t){return this.inputState.keys[t]&&!this.previousKeys[t]}getJustPressedKeys(){const t=[];for(const e in this.inputState.keys)this.inputState.keys[e]&&!this.previousKeys[e]&&t.push(e);return t}isMouseJustPressed(){return this.inputState.mouse.isDown&&!this.previousMouseState}isMouseJustReleased(){return!this.inputState.mouse.isDown&&this.previousMouseState}getMousePosition(){if(!this.canvas)return null;const t=this.canvas.getBoundingClientRect();return{x:this.inputState.mouse.x-t.left,y:this.inputState.mouse.y-t.top}}update(){let t=0,e=0;this.isActionPressed("leftSideUp")&&(t=1),this.isActionPressed("leftSideDown")&&(t=-1),this.isActionPressed("rightSideUp")&&(e=1),this.isActionPressed("rightSideDown")&&(e=-1);const i=(e-t)*.5;if(this.canvas&&this.inputState.mouse.isDown){const s=this.canvas.getBoundingClientRect(),a=s.width/2,r=(this.inputState.mouse.x-s.left-a)/a;this.inputState.tiltInput=Math.max(-1,Math.min(1,r))}else this.inputState.tiltInput=Math.max(-1,Math.min(1,i))}endFrame(){this.previousKeys=w({},this.inputState.keys),this.previousMouseState=this.inputState.mouse.isDown}setupEventListeners(){document.addEventListener("keydown",this.handleKeyDown.bind(this)),document.addEventListener("keyup",this.handleKeyUp.bind(this)),document.addEventListener("keydown",t=>{Object.values(this.keyBindings).flat().includes(t.code)&&t.preventDefault()})}setupCanvasListeners(){this.canvas&&(this.canvas.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.canvas.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.canvas.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.canvas.addEventListener("mouseleave",this.handleMouseLeave.bind(this)),this.canvas.addEventListener("touchstart",this.handleTouchStart.bind(this)),this.canvas.addEventListener("touchend",this.handleTouchEnd.bind(this)),this.canvas.addEventListener("touchmove",this.handleTouchMove.bind(this)))}handleKeyDown(t){this.inputState.keys[t.code]=!0}handleKeyUp(t){this.inputState.keys[t.code]=!1}handleMouseDown(t){this.inputState.mouse.isDown=!0,this.inputState.mouse.button=t.button,this.updateMousePosition(t)}handleMouseUp(t){this.inputState.mouse.isDown=!1,this.inputState.mouse.button=-1}handleMouseMove(t){this.updateMousePosition(t)}handleMouseLeave(){this.inputState.mouse.isDown=!1,this.inputState.mouse.button=-1}handleTouchStart(t){t.preventDefault(),t.touches.length>0&&(this.inputState.mouse.isDown=!0,this.updateTouchPosition(t.touches[0]))}handleTouchEnd(t){t.preventDefault(),this.inputState.mouse.isDown=!1}handleTouchMove(t){t.preventDefault(),t.touches.length>0&&this.updateTouchPosition(t.touches[0])}updateMousePosition(t){this.inputState.mouse.x=t.clientX,this.inputState.mouse.y=t.clientY}updateTouchPosition(t){this.inputState.mouse.x=t.clientX,this.inputState.mouse.y=t.clientY}dispose(){document.removeEventListener("keydown",this.handleKeyDown.bind(this)),document.removeEventListener("keyup",this.handleKeyUp.bind(this)),this.canvas&&(this.canvas.removeEventListener("mousedown",this.handleMouseDown.bind(this)),this.canvas.removeEventListener("mouseup",this.handleMouseUp.bind(this)),this.canvas.removeEventListener("mousemove",this.handleMouseMove.bind(this)),this.canvas.removeEventListener("mouseleave",this.handleMouseLeave.bind(this)),this.canvas.removeEventListener("touchstart",this.handleTouchStart.bind(this)),this.canvas.removeEventListener("touchend",this.handleTouchEnd.bind(this)),this.canvas.removeEventListener("touchmove",this.handleTouchMove.bind(this)))}}class pt{constructor(t){l(this,"levelData");l(this,"isCompleted",!1);l(this,"elapsedTime",0);l(this,"completedGoals",new Set);this.levelData=t,o.info(`📋 Level ${t.id} loaded: ${t.name} (${t.goalHoles.length} goals)`,null,"Level")}start(){this.elapsedTime=0,this.isCompleted=!1,o.info(`🏁 Level ${this.levelData.id} started`,null,"Level")}update(t){this.elapsedTime+=t,this.levelData.holes.forEach(e=>{e.isGoal,e.isActive=!0})}checkHoleCollision(t,e,i){var s,a;for(const n of this.levelData.holes){if(!n.isActive||n.isGoal&&this.completedGoals.has(n.id)||(s=n.saucerState)!=null&&s.isActive||i&&((a=n.recentlyKickedBalls)!=null&&a.has(i)))continue;const r=t.x-n.position.x,c=t.y-n.position.y;if(Math.sqrt(r*r+c*c)<=n.radius)return o.info(`🕳️ Ball fell into hole: ${n.id}`,null,"Level"),n}return null}checkGoalReached(t,e){for(const i of this.levelData.goalHoles){if(this.completedGoals.has(i.id))continue;const s=t.x-i.position.x,a=t.y-i.position.y;if(Math.sqrt(s*s+a*a)<=i.radius)return o.info(`🎯 Ball reached goal hole: ${i.id}`,null,"Level"),this.completedGoals.add(i.id),!0}return!1}checkBallFallOff(t,e){return t.y>e.y+50}checkLevelComplete(){return!this.isCompleted&&this.completedGoals.size>=this.levelData.requiredGoals?(this.markComplete(),!0):this.isCompleted}getCompletedGoals(){return this.completedGoals.size}getRequiredGoals(){return this.levelData.requiredGoals}areAllGoalsCompleted(){return this.completedGoals.size>=this.levelData.requiredGoals}isGoalCompleted(t){return this.completedGoals.has(t)}getGoalHoleAtPosition(t){for(const e of this.levelData.goalHoles){const i=t.x-e.position.x,s=t.y-e.position.y;if(Math.sqrt(i*i+s*s)<=e.radius)return e}return null}markComplete(){this.isCompleted||(this.isCompleted=!0,o.info(`🏆 Level ${this.levelData.id} completed!`,null,"Level"))}calculateScore(){const e=Math.max(0,(6e4-this.elapsedTime)/100);return Math.floor((1e3+e)*this.levelData.bonusMultiplier)}getProgress(){return this.isCompleted?1:0}getLevelData(){return this.levelData}startSaucerBehavior(t,e,i){const s=this.levelData.holes.find(r=>r.id===t);if(!s||!s.powerUpType)return;const a=Math.PI*.75+(Math.random()-.5)*.5,n={x:Math.cos(a),y:Math.sin(a)};s.saucerState={isActive:!0,ballId:e,startTime:i,phase:"sinking",sinkDuration:500,waitDuration:2e3+Math.random()*2e3,kickDirection:n,kickForce:200+Math.random()*150,sinkDepth:0},o.info(`🛸 Started saucer behavior for hole: ${t}`,null,"Level")}getSaucerBallPosition(t){var a;const e=this.levelData.holes.find(n=>n.id===t);if(!e||!((a=e.saucerState)!=null&&a.isActive))return null;const s=e.saucerState.sinkDepth*8;return{x:e.position.x,y:e.position.y+s}}updateSaucerBehavior(t){var e;for(const i of this.levelData.holes){if(!((e=i.saucerState)!=null&&e.isActive))continue;const s=t-i.saucerState.startTime,a=i.saucerState;if(a.phase==="sinking"){const n=Math.min(s/a.sinkDuration,1);a.sinkDepth=n,n>=1&&(a.phase="waiting",a.startTime=t,o.info(`⏳ Saucer waiting phase started for hole: ${i.id}`,null,"Level"))}else if(a.phase==="waiting")t-a.startTime>=a.waitDuration&&(a.phase="ejecting",a.startTime=t,o.info(`🚀 Saucer ejecting phase started for hole: ${i.id}`,null,"Level"));else if(a.phase==="ejecting"&&t-a.startTime>=200){const r={ballId:a.ballId,direction:a.kickDirection,force:a.kickForce,holeId:i.id};return i.saucerState=void 0,i.isActive=!1,i.recentlyKickedBalls||(i.recentlyKickedBalls=new Set),i.recentlyKickedBalls.add(a.ballId),setTimeout(()=>{i.recentlyKickedBalls&&i.recentlyKickedBalls.delete(a.ballId)},1e3),o.info(`🚀 Saucer removed from playfield after ejecting ball from hole: ${i.id}`,null,"Level"),r}}return null}isBallInSaucer(t){return this.levelData.holes.some(e=>{var i;return((i=e.saucerState)==null?void 0:i.isActive)&&e.saucerState.ballId===t})}deactivateHole(t){const e=this.levelData.holes.find(i=>i.id===t);e&&(e.isActive=!1,o.info(`🚫 Deactivated hole: ${t}`,null,"Level"))}reset(){this.isCompleted=!1,this.elapsedTime=0,this.completedGoals.clear(),this.levelData.holes.forEach(t=>{t.isActive=!0}),o.info(`🔄 Level ${this.levelData.id} reset`,null,"Level")}}class mt{constructor(){l(this,"levels",new Map);l(this,"currentLevel",null);l(this,"unlockedLevels",new Set([1]));o.info("📚 LevelManager initialized",null,"LevelManager"),this.loadLevels()}generateHoles(t){const e=[],d=Math.min(2,Math.max(1,Math.floor(t/2))),g=[{type:"slow_mo_surge",spawnChance:.15,color:"#00ffff"},{type:"magnetic_guide",spawnChance:.12,color:"#ff00ff"},{type:"circuit_patch",spawnChance:.08,color:"#00ff00"},{type:"overclock_boost",spawnChance:.1,color:"#ff6600"},{type:"scan_reveal",spawnChance:.06,color:"#ffff00"}],p=[],x=t+1;for(let E=0;E<x;E++){let H=0,_=!1;for(;!_&&H<100;){const V=50+Math.random()*260,B=50+Math.random()*100;_=!0;for(const O of p){const R=V-O.position.x,U=B-O.position.y;if(Math.sqrt(R*R+U*U)<14*3+8){_=!1;break}}_&&p.push({id:`goal-${t}-${E}`,position:{x:V,y:B},radius:14,isGoal:!0,isActive:!0}),H++}}e.push(...p);const y=10,L=(580-(50+100))/y,A=.05+(t-1)*.01,K=.3+(t-1)*.08;let W=0;for(let E=0;E<y;E++){const H=580-(E+1)*L,_=A+E/y*K,V=Math.floor(_*12);for(let B=0;B<V;B++){let O=0,R=!1;for(;!R&&O<50;){const U=14+Math.random()*332,Y=H+Math.random()*L;R=!0;for(const F of e){const $=U-F.position.x,Q=Y-F.position.y;if(Math.sqrt($*$+Q*Q)<14*2+8){R=!1;break}}if(R){let F;if(W<d){for(const $ of g)if(Math.random()<$.spawnChance){F=$.type,W++;break}}e.push({id:`hole-${t}-${E}-${B}`,position:{x:U,y:Y},radius:14,isGoal:!1,isActive:!0,powerUpType:F})}O++}}}return o.info(`🕳️ Generated ${e.length} holes for level ${t} (${W} power-up holes, sparse at bottom, dense at top)`,null,"Level"),{holes:e,goalHoles:p}}loadLevels(){for(let t=1;t<=5;t++){const{holes:e,goalHoles:i}=this.generateHoles(t),s={id:t,name:`Circuit Level ${t}`,description:`Navigate through the holes to reach the goal circuit. Difficulty: ${t}/5`,holes:e,goalHoles:i,ballStartPosition:{x:343,y:584},difficulty:t,bonusMultiplier:1+(t-1)*.2,requiredGoals:i.length};this.levels.set(t,s)}o.info(`📚 Loaded ${this.levels.size} levels`,null,"LevelManager")}loadLevel(t){const e=this.levels.get(t);return e?this.isLevelUnlocked(t)?(this.currentLevel=new pt(e),this.currentLevel):(o.warn(`🔒 Level ${t} is locked`,null,"Level"),null):(o.warn(`⚠️ Level ${t} not found`,null,"Level"),null)}isLevelUnlocked(t){return this.unlockedLevels.has(t)}unlockLevel(t){this.unlockedLevels.has(t)||(this.unlockedLevels.add(t),o.info(`🔓 Level ${t} unlocked`,null,"Level"))}getCurrentLevel(){return this.currentLevel}getAvailableLevels(){return Array.from(this.levels.keys())}getUnlockedLevels(){return Array.from(this.unlockedLevels)}getLevelData(t){return this.levels.get(t)||null}}class St{constructor(){l(this,"audioContext",null);l(this,"masterGain",null);l(this,"sfxGain",null);l(this,"musicGain",null);l(this,"config",{masterVolume:.7,sfxVolume:.8,musicVolume:.4,enabled:!0});l(this,"soundEffects",new Map);l(this,"loadedSounds",new Map);l(this,"currentMusic",null);l(this,"currentMusicGain",null);l(this,"isInitialized",!1);o.info("🔊 AudioManager initialized",null,"AudioManager")}init(){return b(this,null,function*(){if(!this.isInitialized)try{const t=window.AudioContext||window.webkitAudioContext;this.audioContext=new t,this.masterGain=this.audioContext.createGain(),this.sfxGain=this.audioContext.createGain(),this.musicGain=this.audioContext.createGain(),this.sfxGain.connect(this.masterGain),this.musicGain.connect(this.masterGain),this.masterGain.connect(this.audioContext.destination),this.masterGain.gain.value=this.config.masterVolume,this.sfxGain.gain.value=this.config.sfxVolume,this.musicGain.gain.value=this.config.musicVolume,yield this.createProceduralSounds(),this.isInitialized=!0,o.info("✅ Audio system initialized",null,"AudioManager")}catch(t){o.error("❌ Failed to initialize audio system:",t,"AudioManager"),this.config.enabled=!1}})}createProceduralSounds(){return b(this,null,function*(){if(!this.audioContext)return;const t=this.createBounceSound();this.soundEffects.set("bounce",{id:"bounce",buffer:t,volume:.6,loop:!1,pitch:1});const e=this.createRollingSound();this.soundEffects.set("roll",{id:"roll",buffer:e,volume:.3,loop:!0,pitch:1});const i=this.createElectricalZap();this.soundEffects.set("zap",{id:"zap",buffer:i,volume:.7,loop:!1,pitch:1});const s=this.createTargetSound();this.soundEffects.set("target",{id:"target",buffer:s,volume:.8,loop:!1,pitch:1});const a=this.createLevelCompleteSound();this.soundEffects.set("level_complete",{id:"level_complete",buffer:a,volume:.9,loop:!1,pitch:1});const n=this.createUIClickSound();this.soundEffects.set("ui_click",{id:"ui_click",buffer:n,volume:.5,loop:!1,pitch:1});const r=this.createUIHoverSound();this.soundEffects.set("ui_hover",{id:"ui_hover",buffer:r,volume:.3,loop:!1,pitch:1});const c=this.createUISlideSound();this.soundEffects.set("ui_slide",{id:"ui_slide",buffer:c,volume:.4,loop:!1,pitch:1});const h=this.createGameOverSound();this.soundEffects.set("game_over",{id:"game_over",buffer:h,volume:.8,loop:!1,pitch:1});const u=this.createPowerupCollectSound();this.soundEffects.set("powerup_collect",{id:"powerup_collect",buffer:u,volume:.7,loop:!1,pitch:1});const d=this.createPowerupActivateSound();this.soundEffects.set("powerup_activate",{id:"powerup_activate",buffer:d,volume:.6,loop:!1,pitch:1});const g=this.createShieldBreakSound();this.soundEffects.set("shield_break",{id:"shield_break",buffer:g,volume:.8,loop:!1,pitch:1});const p=this.createShieldActivateSound();this.soundEffects.set("shield_activate",{id:"shield_activate",buffer:p,volume:.6,loop:!1,pitch:1}),o.info(`🎵 Created ${this.soundEffects.size} procedural sound effects`,null,"AudioManager")})}createBounceSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.2,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*8),h=Math.sin(2*Math.PI*800*r)*.5,u=Math.sin(2*Math.PI*1600*r)*.3,d=Math.sin(2*Math.PI*2400*r)*.2,g=(Math.random()-.5)*.1;a[n]=(h+u+d+g)*c}return s}createRollingSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*1,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.sin(2*Math.PI*60*r)*.3,h=Math.sin(2*Math.PI*200*r)*.1,u=(Math.random()-.5)*.2;a[n]=c+h+u}return s}createElectricalZap(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.3,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*6),h=Math.sin(2*Math.PI*1200*r)*.4,u=Math.sin(2*Math.PI*3e3*r)*.3,d=(Math.random()-.5)*.5;a[n]=(h+u+d)*c}return s}createTargetSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.5,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*4),h=Math.sin(2*Math.PI*523*r)*.5,u=Math.sin(2*Math.PI*659*r)*.3,d=Math.sin(2*Math.PI*784*r)*.2;a[n]=(h+u+d)*c}return s}createLevelCompleteSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*1,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0),n=[523,659,784,1047],r=i/n.length;for(let c=0;c<i;c++){const h=Math.floor(c/r),u=c%r/t,d=Math.exp(-u*2),g=n[h]||n[n.length-1],p=Math.sin(2*Math.PI*g*u)*d*.5;a[c]=p}return s}createUIClickSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.1,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*20),h=Math.sin(2*Math.PI*1e3*r)*c*.3;a[n]=h}return s}createUIHoverSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.05,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*30),h=Math.sin(2*Math.PI*800*r)*c*.2;a[n]=h}return s}createUISlideSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.15,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*8),h=600+Math.sin(r*10)*100,u=Math.sin(2*Math.PI*h*r)*c*.25;a[n]=u}return s}createGameOverSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*1.5,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*2),h=400-r*200,u=Math.sin(2*Math.PI*Math.max(50,h)*r)*.4,d=(Math.random()-.5)*.3,g=Math.sin(2*Math.PI*100*r)*.2;a[n]=(u+d+g)*c}return s}createPowerupCollectSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.4,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*5),h=800+r*400,u=Math.sin(2*Math.PI*h*r)*.4,d=Math.sin(2*Math.PI*(h*1.5)*r)*.2,g=Math.sin(2*Math.PI*2e3*r)*.1;a[n]=(u+d+g)*c}return s}createPowerupActivateSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.3,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*8),h=Math.sin(2*Math.PI*600*r)*.3,u=Math.sin(2*Math.PI*1800*r)*.2,d=(Math.random()-.5)*.2;a[n]=(h+u+d)*c}return s}createShieldBreakSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.5,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*4),h=Math.sin(2*Math.PI*1200*r)*.3,u=Math.sin(2*Math.PI*800*r)*.2,d=(Math.random()-.5)*.4,g=Math.sin(2*Math.PI*400*r)*.1;a[n]=(h+u+d+g)*c}return s}createShieldActivateSound(){if(!this.audioContext)return null;const t=this.audioContext.sampleRate,i=t*.6,s=this.audioContext.createBuffer(1,i,t),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/t,c=Math.exp(-r*3),h=Math.sin(2*Math.PI*200*r)*.3,u=Math.sin(2*Math.PI*400*r)*.2,d=Math.sin(2*Math.PI*100*r)*.1;a[n]=(h+u+d)*c}return s}playSound(t,e=1,i=1){if(!this.config.enabled||!this.audioContext||!this.isInitialized)return;const s=this.soundEffects.get(t);if(!s||!s.buffer){o.warn(`🔇 Sound not found: ${t}`);return}try{const a=this.audioContext.createBufferSource(),n=this.audioContext.createGain();a.buffer=s.buffer,a.loop=s.loop,a.playbackRate.value=i,n.gain.value=s.volume*e,a.connect(n),this.sfxGain&&n.connect(this.sfxGain),a.start(),s.loop||a.addEventListener("ended",()=>{a.disconnect(),n.disconnect()})}catch(a){o.error(`❌ Error playing sound ${t}:`,a)}}playBounceSound(t){const e=Math.min(t/500,1),i=.3+e*.7,s=.8+e*.4;this.playSound("bounce",i,s)}playRollingSound(){this.playSound("roll",.5)}stopAllSounds(){if(this.audioContext)try{this.currentMusic&&(this.currentMusic.stop(),this.currentMusic=null),o.info("🔇 All sounds stopped")}catch(t){o.error("❌ Error stopping sounds:",t)}}setMasterVolume(t){this.config.masterVolume=Math.max(0,Math.min(1,t)),this.masterGain&&(this.masterGain.gain.value=this.config.masterVolume)}setSFXVolume(t){this.config.sfxVolume=Math.max(0,Math.min(1,t)),this.sfxGain&&(this.sfxGain.gain.value=this.config.sfxVolume)}setMusicVolume(t){this.config.musicVolume=Math.max(0,Math.min(1,t)),this.musicGain&&(this.musicGain.gain.value=this.config.musicVolume)}setEnabled(t){this.config.enabled=t,t||this.stopAllSounds()}getConfig(){return w({},this.config)}resumeContext(){return b(this,null,function*(){this.audioContext&&this.audioContext.state==="suspended"&&(yield this.audioContext.resume(),o.info("🔊 Audio context resumed",null,"AudioManager"))})}isContextSuspended(){var t;return((t=this.audioContext)==null?void 0:t.state)==="suspended"}isAvailable(){return this.isInitialized&&this.config.enabled}getBaseUrl(){return window.location.pathname.includes("/circuit-breaker/")?"/circuit-breaker/":"/"}loadMusic(t){return b(this,null,function*(){if(!this.audioContext)return null;try{const i=`${this.getBaseUrl()}assets/audio/${t}`;o.info(`🎵 Attempting to load audio from: ${i}`);const s=yield fetch(i);if(!s.ok)throw new Error(`Failed to load ${t}: ${s.status}`);const a=yield s.arrayBuffer(),n=yield this.audioContext.decodeAudioData(a);return this.loadedSounds.set(t,n),o.info(`🎵 Loaded music: ${t}`),n}catch(e){return o.error(`❌ Error loading music ${t}:`,e),null}})}playMusic(t,e=!0,i=1){return b(this,null,function*(){if(!(!this.config.enabled||!this.audioContext||!this.isInitialized)){this.stopMusic();try{let s=this.loadedSounds.get(t);if(!s){const r=yield this.loadMusic(t);if(!r)return;s=r}const a=this.audioContext.createBufferSource(),n=this.audioContext.createGain();a.buffer=s,a.loop=e,n.gain.value=i,a.connect(n),this.musicGain&&n.connect(this.musicGain),this.currentMusic=a,this.currentMusicGain=n,a.start(),e||a.addEventListener("ended",()=>{this.currentMusic=null,this.currentMusicGain=null}),o.info(`🎵 Playing music: ${t} (loop: ${e})`)}catch(s){o.error(`❌ Error playing music ${t}:`,s)}}})}stopMusic(){if(this.currentMusic){try{this.currentMusic.stop(),this.currentMusic.disconnect(),this.currentMusicGain&&this.currentMusicGain.disconnect()}catch(t){}this.currentMusic=null,this.currentMusicGain=null,o.info("🔇 Music stopped")}}fadeToMusic(t=null,e=1){return b(this,null,function*(){if(!this.currentMusicGain||!this.audioContext){t&&(yield this.playMusic(t));return}const i=60,s=e*1e3/i,a=this.currentMusicGain.gain.value/i;for(let n=0;n<i;n++)setTimeout(()=>{this.currentMusicGain&&(this.currentMusicGain.gain.value=Math.max(0,this.currentMusicGain.gain.value-a))},n*s);setTimeout(()=>{this.stopMusic(),t&&this.playMusic(t)},e*1e3)})}isMusicPlaying(){return this.currentMusic!==null}}class j{constructor(t){l(this,"config");l(this,"isHovered",!1);l(this,"isPressed",!1);this.config=t}draw(t){const{x:e,y:i,width:s,height:a,label:n,nineSlice:r}=this.config;r?t.drawImage(r,e,i,s,a):(t.save(),t.fillStyle=this.isPressed?"#00f0ff":this.isHovered?"#b600f9":"#222",t.strokeStyle="#00f0ff",t.lineWidth=2,t.beginPath(),t.roundRect(e,i,s,a,8),t.fill(),t.stroke(),t.restore()),t.save(),t.fillStyle="#fff",t.font="18px Interceptor, monospace",t.textAlign="center",t.textBaseline="middle",t.fillText(n,e+s/2,i+a/2),t.restore()}handlePointerMove(t,e){const{x:i,y:s,width:a,height:n,audioManager:r}=this.config,c=this.isHovered;this.isHovered=t>=i&&t<=i+a&&e>=s&&e<=s+n,this.isHovered&&!c&&r.playSound(this.config.soundKey||"ui_hover")}handlePointerDown(t,e){this.isHovered&&(this.isPressed=!0)}handlePointerUp(t,e){this.isHovered&&this.isPressed&&(this.config.audioManager.playSound(this.config.soundKey||"ui_click"),this.config.onClick()),this.isPressed=!1}setLabel(t){this.config.label=t}}class J{constructor(t){l(this,"config");l(this,"isDragging",!1);this.config=t}draw(t){const{x:e,y:i,width:s,min:a,max:n,value:r,nineSlice:c}=this.config;c?t.drawImage(c,e,i,s,16):(t.save(),t.fillStyle="#222",t.strokeStyle="#00f0ff",t.lineWidth=2,t.beginPath(),t.roundRect(e,i,s,16,8),t.fill(),t.stroke(),t.restore());const h=(r-a)/(n-a),u=e+h*s;t.save(),t.fillStyle="#b600f9",t.beginPath(),t.arc(u,i+8,10,0,Math.PI*2),t.fill(),t.restore()}handlePointerDown(t,e){const{x:i,y:s,width:a}=this.config;e>=s&&e<=s+16&&t>=i&&t<=i+a&&(this.isDragging=!0,this.updateValueFromPointer(t))}handlePointerMove(t,e){this.isDragging&&this.updateValueFromPointer(t)}handlePointerUp(t,e){this.isDragging&&(this.isDragging=!1,this.config.audioManager.playSound(this.config.soundKey||"ui_click"))}updateValueFromPointer(t){const{x:e,width:i,min:s,max:a,onChange:n,audioManager:r}=this.config;let c=(t-e)/i;c=Math.max(0,Math.min(1,c));const h=s+c*(a-s);h!==this.config.value&&(this.config.value=h,n(h),r.playSound(this.config.soundKey||"ui_slide"))}setValue(t){this.config.value=Math.max(this.config.min,Math.min(this.config.max,t))}}class et{constructor(t){l(this,"config");l(this,"isVisible",!1);l(this,"buttons",[]);l(this,"sliders",[]);l(this,"masterVolumeSlider");l(this,"musicVolumeSlider");l(this,"sfxVolumeSlider");l(this,"muteButton");l(this,"closeButton");l(this,"backToMenuButton");this.config=t,this.createControls()}createControls(){const{audioManager:t,onClose:e,onBackToMenu:i,isFromPauseMenu:s}=this.config;this.masterVolumeSlider=new J({x:80,y:200,width:200,min:0,max:1,value:t.getConfig().masterVolume,onChange:a=>{t.setMasterVolume(a),o.debug(`Master volume set to: ${a}`,null,"SettingsMenu")},audioManager:t,soundKey:"ui_slide"}),this.musicVolumeSlider=new J({x:80,y:250,width:200,min:0,max:1,value:t.getConfig().musicVolume,onChange:a=>{t.setMusicVolume(a),o.debug(`Music volume set to: ${a}`,null,"SettingsMenu")},audioManager:t,soundKey:"ui_slide"}),this.sfxVolumeSlider=new J({x:80,y:300,width:200,min:0,max:1,value:t.getConfig().sfxVolume,onChange:a=>{t.setSFXVolume(a),o.debug(`SFX volume set to: ${a}`,null,"SettingsMenu")},audioManager:t,soundKey:"ui_slide"}),this.muteButton=new j({x:80,y:350,width:200,height:40,label:t.getConfig().enabled?"Mute Audio":"Unmute Audio",onClick:()=>{const a=!t.getConfig().enabled;t.setEnabled(a),this.muteButton.setLabel(a?"Mute Audio":"Unmute Audio"),o.debug(`Audio ${a?"enabled":"disabled"}`,null,"SettingsMenu")},audioManager:t,soundKey:"ui_click"}),this.closeButton=new j({x:80,y:420,width:200,height:40,label:"Close",onClick:e,audioManager:t,soundKey:"ui_click"}),s&&i&&(this.backToMenuButton=new j({x:80,y:470,width:200,height:40,label:"Back to Menu",onClick:i,audioManager:t,soundKey:"ui_click"})),this.sliders=[this.masterVolumeSlider,this.musicVolumeSlider,this.sfxVolumeSlider],this.buttons=[this.muteButton,this.closeButton],this.backToMenuButton&&this.buttons.push(this.backToMenuButton)}show(){this.isVisible=!0,o.info("Settings menu opened",null,"SettingsMenu")}hide(){this.isVisible=!1,o.info("Settings menu closed",null,"SettingsMenu")}isMenuVisible(){return this.isVisible}draw(t){this.isVisible&&(t.save(),t.fillStyle="rgba(0, 0, 0, 0.8)",t.fillRect(0,0,360,640),t.restore(),t.save(),t.fillStyle="#1a1a1a",t.strokeStyle="#00f0ff",t.lineWidth=3,t.beginPath(),t.roundRect(50,100,260,440,12),t.fill(),t.stroke(),t.restore(),t.save(),t.fillStyle="#00f0ff",t.font="24px Cyberpunks, monospace",t.textAlign="center",t.fillText("SETTINGS",180,140),t.restore(),t.save(),t.fillStyle="#ffffff",t.font="16px Interceptor, monospace",t.textAlign="left",t.fillText("Master Volume:",80,190),t.fillText("Music Volume:",80,240),t.fillText("SFX Volume:",80,290),t.restore(),this.sliders.forEach(e=>e.draw(t)),this.buttons.forEach(e=>e.draw(t)))}handlePointerMove(t,e){this.isVisible&&this.buttons.forEach(i=>i.handlePointerMove(t,e))}handlePointerDown(t,e){this.isVisible&&(this.buttons.forEach(i=>i.handlePointerDown(t,e)),this.sliders.forEach(i=>i.handlePointerDown(t,e)))}handlePointerUp(t,e){this.isVisible&&(this.buttons.forEach(i=>i.handlePointerUp(t,e)),this.sliders.forEach(i=>i.handlePointerUp(t,e)))}updateVolumeDisplays(){const t=this.config.audioManager.getConfig();this.masterVolumeSlider.setValue(t.masterVolume),this.musicVolumeSlider.setValue(t.musicVolume),this.sfxVolumeSlider.setValue(t.sfxVolume),this.muteButton.setLabel(t.enabled?"Mute Audio":"Unmute Audio")}get isFromPauseMenu(){return!!this.config.isFromPauseMenu}}class vt{constructor(t){l(this,"config");l(this,"selectedSlot",0);l(this,"isConfirmingDelete",!1);l(this,"deleteSlotId",-1);l(this,"isVisible",!1);l(this,"hoveredSlot",-1);l(this,"scrollOffset",0);l(this,"message","");l(this,"messageTimer",0);l(this,"messageType","info");this.config=t,o.info("💾 SaveLoadMenu initialized",null,"SaveLoadMenu")}show(){this.isVisible=!0,this.selectedSlot=0,this.isConfirmingDelete=!1,this.deleteSlotId=-1,this.hoveredSlot=-1,this.scrollOffset=0,this.clearMessage(),o.info("💾 Save/Load menu opened",null,"SaveLoadMenu")}hide(){this.isVisible=!1,o.info("💾 Save/Load menu closed",null,"SaveLoadMenu")}isMenuVisible(){return this.isVisible}handlePointerMove(t,e){if(!this.isVisible)return;const i=this.getSlotYPosition(),s=80,a=150+i;for(let n=0;n<3;n++){const r=a+n*(s+10),c=r+s;if(e>=r&&e<=c&&t>=50&&t<=310){this.hoveredSlot=n;return}}this.hoveredSlot=-1}handlePointerDown(t,e){if(!this.isVisible)return;if(this.isConfirmingDelete){this.handleDeleteConfirmationClick(t,e);return}const i=this.getSlotYPosition(),s=80,a=150+i;for(let n=0;n<3;n++){const r=a+n*(s+10),c=r+s;if(e>=r&&e<=c&&t>=50&&t<=310){this.selectedSlot=n;return}}this.handleButtonClick(t,e)}handlePointerUp(t,e){this.isVisible}handleKeyPress(t){if(!this.isVisible)return!1;switch(t){case"Escape":return this.isConfirmingDelete?this.cancelDelete():this.config.onClose(),!0;case"Enter":return this.isConfirmingDelete?this.confirmDelete():this.loadSelectedSlot(),!0;case"KeyN":return this.isConfirmingDelete||this.newGameInSelectedSlot(),!0;case"KeyD":return this.isConfirmingDelete||this.deleteSelectedSlot(),!0;case"ArrowUp":return this.selectedSlot=Math.max(0,this.selectedSlot-1),!0;case"ArrowDown":return this.selectedSlot=Math.min(2,this.selectedSlot+1),!0}return!1}render(t){this.isVisible&&(t.fillStyle="rgba(0, 0, 0, 0.8)",t.fillRect(0,0,360,640),t.fillStyle="#1a1a2e",t.fillRect(20,50,320,540),t.fillStyle="#ffffff",t.font='24px "Cyberpunks"',t.textAlign="center",t.fillText("SAVE/LOAD GAME",180,90),this.isConfirmingDelete?this.renderDeleteConfirmation(t):(this.renderSaveSlots(t),this.renderButtons(t),this.renderProgressInfo(t),this.renderMessage(t)))}renderSaveSlots(t){const e=this.config.getSaveSlots(),i=this.getSlotYPosition(),s=80,a=150+i;for(let n=0;n<3;n++){const r=a+n*(s+10),c=e.find(d=>d.id===n),h=this.selectedSlot===n,u=this.hoveredSlot===n;if(h?t.fillStyle="#4a90e2":u?t.fillStyle="#2a2a4e":t.fillStyle="#2a2a3e",t.fillRect(50,r,260,s),t.strokeStyle=h?"#ffffff":"#444444",t.lineWidth=2,t.strokeRect(50,r,260,s),c){t.fillStyle="#ffffff",t.font='16px "Interceptor"',t.textAlign="left",t.fillText(`Save ${n+1}`,70,r+25),t.fillStyle="#cccccc",t.font='14px "Interceptor"',t.fillText(`Level: ${c.progress.currentLevel}`,70,r+45),t.fillText(`Score: ${c.progress.totalScore.toLocaleString()}`,70,r+65);const d=new Date(c.lastPlayed);t.fillStyle="#888888",t.font='12px "Interceptor"',t.fillText(d.toLocaleDateString(),200,r+25),t.fillText(d.toLocaleTimeString(),200,r+45)}else t.fillStyle="#666666",t.font='16px "Interceptor"',t.textAlign="center",t.fillText("Empty Slot",180,r+45)}}renderButtons(t){t.fillStyle="#4a90e2",t.fillRect(60,450,80,40),t.fillStyle="#ffffff",t.font='14px "Interceptor"',t.textAlign="center",t.fillText("LOAD",100,450+25),t.fillStyle="#50c878",t.fillRect(150,450,80,40),t.fillStyle="#ffffff",t.font='14px "Interceptor"',t.textAlign="center",t.fillText("NEW",190,450+25),t.fillStyle="#e74c3c",t.fillRect(240,450,80,40),t.fillStyle="#ffffff",t.font='14px "Interceptor"',t.textAlign="center",t.fillText("DELETE",280,450+25),t.fillStyle="#888888",t.font='12px "Interceptor"',t.textAlign="center",t.fillText("Use arrow keys to navigate, Enter to select",180,450+70),t.fillText("ESC to close",180,450+85)}renderProgressInfo(t){const e=this.config.getCurrentProgress();if(!e)return;const i=550;t.fillStyle="#ffffff",t.font='14px "Interceptor"',t.textAlign="left",t.fillText(`Total Play Time: ${this.formatPlayTime(e.playTime)}`,60,i),t.fillText(`Games Played: ${e.gamesPlayed}`,60,i+20),t.fillText(`Goals Reached: ${e.totalGoalsReached}`,60,i+40),t.fillText(`Balls Lost: ${e.totalBallsLost}`,60,i+60);const s=this.config.getAchievements(),a=s.filter(n=>n.unlocked).length;t.fillText(`Achievements: ${a}/${s.length}`,200,i)}renderDeleteConfirmation(t){t.fillStyle="#2a2a3e",t.fillRect(80,200,200,150),t.strokeStyle="#e74c3c",t.lineWidth=3,t.strokeRect(80,200,200,150),t.fillStyle="#ffffff",t.font='16px "Interceptor"',t.textAlign="center",t.fillText("DELETE SAVE SLOT?",180,230),t.fillText(`Save ${this.deleteSlotId+1}`,180,250),t.fillStyle="#ff6b6b",t.font='14px "Interceptor"',t.fillText("This action cannot be undone!",180,270),t.fillStyle="#e74c3c",t.fillRect(100,280,60,30),t.fillStyle="#ffffff",t.font='12px "Interceptor"',t.fillText("YES",130,300),t.fillStyle="#4a90e2",t.fillRect(200,280,60,30),t.fillStyle="#ffffff",t.fillText("NO",230,300)}handleButtonClick(t,e){e>=450&&e<=450+40&&(t>=60&&t<=60+80?this.loadSelectedSlot():t>=150&&t<=150+80?this.newGameInSelectedSlot():t>=240&&t<=240+80&&this.deleteSelectedSlot())}handleDeleteConfirmationClick(t,e){t>=100&&t<=160&&e>=280&&e<=310?this.confirmDelete():t>=200&&t<=260&&e>=280&&e<=310&&this.cancelDelete()}loadSelectedSlot(){this.config.getSaveSlots().find(i=>i.id===this.selectedSlot)?(o.info(`📂 Loading save slot ${this.selectedSlot}`,null,"SaveLoadMenu"),this.showMessage(`Loading save slot ${this.selectedSlot+1}...`,"info",1e3),setTimeout(()=>{this.config.onLoadGame(this.selectedSlot),this.hide()},1e3)):(o.warn(`⚠️ No save data in slot ${this.selectedSlot}`,null,"SaveLoadMenu"),this.showMessage("No save data in this slot","error"))}newGameInSelectedSlot(){o.info(`🆕 Starting new game in slot ${this.selectedSlot}`,null,"SaveLoadMenu"),this.showMessage(`Starting new game in slot ${this.selectedSlot+1}...`,"success",1e3),setTimeout(()=>{this.config.onNewGame(this.selectedSlot),this.hide()},1e3)}deleteSelectedSlot(){this.config.getSaveSlots().find(i=>i.id===this.selectedSlot)?(this.isConfirmingDelete=!0,this.deleteSlotId=this.selectedSlot,o.info(`🗑️ Confirming deletion of save slot ${this.selectedSlot}`,null,"SaveLoadMenu")):(o.warn(`⚠️ No save data to delete in slot ${this.selectedSlot}`,null,"SaveLoadMenu"),this.showMessage("No save data to delete","error"))}confirmDelete(){o.info(`🗑️ Deleting save slot ${this.deleteSlotId}`,null,"SaveLoadMenu"),this.config.onDeleteSlot(this.deleteSlotId),this.showMessage(`Save slot ${this.deleteSlotId+1} deleted`,"success"),this.cancelDelete()}cancelDelete(){this.isConfirmingDelete=!1,this.deleteSlotId=-1}getSlotYPosition(){return this.scrollOffset}formatPlayTime(t){const e=Math.floor(t/36e5),i=Math.floor(t%(1e3*60*60)/(1e3*60));return e>0?`${e}h ${i}m`:`${i}m`}showMessage(t,e="info",i=3e3){this.message=t,this.messageType=e,this.messageTimer=Date.now()+i,o.info(`💾 Save/Load Menu: ${t}`,null,"SaveLoadMenu")}clearMessage(){this.message="",this.messageTimer=0}update(t){this.message&&this.messageTimer>0&&Date.now()>this.messageTimer&&this.clearMessage()}renderMessage(t){if(!this.message)return;t.fillStyle="rgba(0, 0, 0, 0.9)",t.fillRect(60,400,240,40);const e=this.messageType==="error"?"#e74c3c":this.messageType==="success"?"#50c878":"#4a90e2";t.strokeStyle=e,t.lineWidth=2,t.strokeRect(60,400,240,40),t.fillStyle="#ffffff",t.font='14px "Interceptor"',t.textAlign="center",t.fillText(this.message,180,425)}}class yt{constructor(t){l(this,"config");l(this,"achievement",null);l(this,"isVisible",!1);l(this,"startTime",0);l(this,"animationPhase","slideIn");l(this,"slideInDuration",500);l(this,"slideOutDuration",500);l(this,"showDuration",3e3);this.config=t,o.info("🏆 AchievementNotification initialized",null,"AchievementNotification")}show(t){this.achievement=t,this.isVisible=!0,this.startTime=Date.now(),this.animationPhase="slideIn",o.info(`🏆 Showing achievement notification: ${t.name}`,null,"AchievementNotification")}hide(){this.isVisible=!1,this.achievement=null,this.animationPhase="slideIn"}isNotificationVisible(){return this.isVisible}update(t){if(!this.isVisible||!this.achievement)return;const e=Date.now()-this.startTime;this.animationPhase==="slideIn"&&e>=this.slideInDuration?(this.animationPhase="show",this.startTime=Date.now()):this.animationPhase==="show"&&e>=this.showDuration?(this.animationPhase="slideOut",this.startTime=Date.now()):this.animationPhase==="slideOut"&&e>=this.slideOutDuration&&(this.hide(),this.config.onComplete())}render(t){if(!this.isVisible||!this.achievement)return;const e=Date.now()-this.startTime;let i=0,s=0;switch(this.animationPhase){case"slideIn":i=Math.min(e/this.slideInDuration,1),s=(1-i)*100;break;case"show":i=1,s=0;break;case"slideOut":i=Math.min(e/this.slideOutDuration,1),s=i*100;break}const a=this.easeOutBack(i),n=300,r=80,c=360-n-20+(1-a)*n,h=20+s,u=t.createLinearGradient(c,h,c,h+r);u.addColorStop(0,"#2a2a3e"),u.addColorStop(1,"#1a1a2e"),t.fillStyle=u,t.fillRect(c,h,n,r);const d={common:"#cccccc",rare:"#4a90e2",epic:"#9b59b6",legendary:"#f39c12"};t.strokeStyle=d[this.achievement.rarity]||"#cccccc",t.lineWidth=3,t.strokeRect(c,h,n,r),t.fillStyle="#ffffff",t.font="24px Arial",t.textAlign="center",t.fillText(this.achievement.icon,c+30,h+45),t.fillStyle="#ffffff",t.font='16px "Interceptor"',t.textAlign="left",t.fillText(this.achievement.name,c+60,h+30),t.fillStyle="#cccccc",t.font='12px "Interceptor"',t.fillText(this.achievement.description,c+60,h+50);const g=this.achievement.rarity.toUpperCase();if(t.fillStyle=d[this.achievement.rarity]||"#cccccc",t.font='10px "Interceptor"',t.textAlign="center",t.fillText(g,c+n-40,h+25),this.achievement.maxProgress&&this.achievement.progress!==void 0){const y=c+n-80-20,v=h+r-20;t.fillStyle="#444444",t.fillRect(y,v,80,6);const L=this.achievement.progress/this.achievement.maxProgress;t.fillStyle=d[this.achievement.rarity]||"#4a90e2",t.fillRect(y,v,80*L,6),t.fillStyle="#ffffff",t.font='10px "Interceptor"',t.textAlign="center",t.fillText(`${this.achievement.progress}/${this.achievement.maxProgress}`,y+80/2,v-5)}this.achievement.rarity==="legendary"&&this.renderSparkles(t,c,h,n,r,e)}renderSparkles(t,e,i,s,a,n){for(let h=0;h<8;h++){const u=(n*.001+h*Math.PI*2/8)%(Math.PI*2),d=30+Math.sin(n*.002+h)*10,g=e+s/2+Math.cos(u)*d,p=i+a/2+Math.sin(u)*d,x=.5+.5*Math.sin(n*.003+h);t.fillStyle=`rgba(255, 215, 0, ${x})`,t.fillRect(g-2/2,p-2/2,2,2)}}easeOutBack(t){return 1+2.70158*Math.pow(t-1,3)+1.70158*Math.pow(t-1,2)}}class Mt{constructor(t){l(this,"config");l(this,"currentTab","overview");l(this,"scrollOffset",0);l(this,"TAB_HEIGHT",40);l(this,"SCROLL_SPEED",20);this.config=t,o.info("📊 StatsMenu initialized",null,"StatsMenu")}render(t){t&&(t.fillStyle="rgba(0, 0, 0, 0.9)",t.fillRect(0,0,360,640),this.drawContainer(t),this.drawHeader(t),this.drawTabs(t),this.drawContent(t),this.drawFooter(t))}handleInput(t){switch(t){case"Escape":this.config.onClose();break;case"Digit1":case"1":this.currentTab="overview";break;case"Digit2":case"2":this.currentTab="levels";break;case"Digit3":case"3":this.currentTab="performance";break;case"Digit4":case"4":this.currentTab="sessions";break;case"ArrowUp":this.scrollOffset=Math.max(0,this.scrollOffset-this.SCROLL_SPEED);break;case"ArrowDown":this.scrollOffset+=this.SCROLL_SPEED;break}}drawContainer(t){t.fillStyle="#1a1a1a",t.fillRect(10,30,340,580),t.strokeStyle="#b600f9",t.lineWidth=2,t.shadowColor="#b600f9",t.shadowBlur=10,t.strokeRect(10,30,340,580),t.shadowBlur=0}drawHeader(t){t.fillStyle="#b600f9",m.setFont(t,"display",20,"bold"),t.textAlign="center",t.fillText("GAME STATISTICS",Math.round(180),Math.round(60)),t.fillStyle="#888888",m.setFont(t,"primary",10),t.fillText("ANALYTICS & PERFORMANCE DATA",Math.round(180),Math.round(75))}drawTabs(t){const e=[{key:"overview",label:"OVERVIEW",number:"1"},{key:"levels",label:"LEVELS",number:"2"},{key:"performance",label:"PERFORMANCE",number:"3"},{key:"sessions",label:"SESSIONS",number:"4"}],i=85,s=90;e.forEach((a,n)=>{const r=10+n*i,c=this.currentTab===a.key;t.fillStyle=c?"#b600f9":"#333333",t.fillRect(Math.round(r),Math.round(s),i-2,this.TAB_HEIGHT),t.strokeStyle=c?"#ffffff":"#666666",t.lineWidth=1,t.strokeRect(Math.round(r),Math.round(s),i-2,this.TAB_HEIGHT),t.fillStyle=c?"#ffffff":"#cccccc",m.setFont(t,"primary",8,"bold"),t.textAlign="center",t.fillText(a.label,Math.round(r+(i-2)/2),Math.round(s+15)),t.fillText(`[${a.number}]`,Math.round(r+(i-2)/2),Math.round(s+28))})}drawContent(t){switch(t.save(),t.beginPath(),t.rect(10,155,340,405),t.clip(),t.translate(0,-this.scrollOffset),this.currentTab){case"overview":this.drawOverviewContent(t,155);break;case"levels":this.drawLevelsContent(t,155);break;case"performance":this.drawPerformanceContent(t,155);break;case"sessions":this.drawSessionsContent(t,155);break}t.restore()}drawOverviewContent(t,e){const i=this.config.statsManager.getStats(),s=this.config.statsManager.getStatsSummary();let a=e;this.drawStatRow(t,"TOTAL PLAY TIME",s.totalPlayTime,a),a+=25,this.drawStatRow(t,"GAMES PLAYED",s.gamesPlayed.toString(),a),a+=25,this.drawStatRow(t,"COMPLETION RATE",s.completionRate,a),a+=25,this.drawStatRow(t,"AVERAGE SCORE",s.averageScore.toString(),a),a+=25,this.drawStatRow(t,"FAVORITE LEVEL",`Level ${s.favoriteLevel}`,a),a+=25,this.drawStatRow(t,"MOST CHALLENGING",`Level ${s.mostChallengingLevel}`,a),a+=35,this.drawProgressBar(t,"ACHIEVEMENT PROGRESS",i.achievementProgress,a),a+=30,this.drawStatRow(t,"ACHIEVEMENTS UNLOCKED",`${i.achievementsUnlocked}/${i.totalAchievements}`,a),a+=35,t.fillStyle="#00ff99",m.setFont(t,"primary",12,"bold"),t.textAlign="left",t.fillText("HIGH SCORES & RECORDS",Math.round(20),Math.round(a)),a+=20,this.drawStatRow(t,"HIGHEST SCORE",i.highestScore.toString(),a),a+=25,this.drawStatRow(t,"HIGHEST LEVEL",i.highestLevel.toString(),a),a+=25,this.drawStatRow(t,"LONGEST SESSION",this.formatPlayTime(i.longestSession),a),a+=25,this.drawStatRow(t,"FASTEST COMPLETION",this.formatPlayTime(i.fastestLevelCompletion),a)}drawLevelsContent(t,e){const i=this.config.statsManager.getStats();let s=e+15;t.fillStyle="#00ff99",m.setFont(t,"primary",12,"bold"),t.textAlign="left",t.fillText("LEVEL STATISTICS",Math.round(20),Math.round(s)),s+=25,t.fillStyle="#b600f9",m.setFont(t,"primary",10,"bold"),t.fillText("LEVEL",Math.round(20),Math.round(s)),t.fillText("ATTEMPTS",Math.round(80),Math.round(s)),t.fillText("COMPLETIONS",Math.round(140),Math.round(s)),t.fillText("RATE",Math.round(200),Math.round(s)),t.fillText("BEST TIME",Math.round(250),Math.round(s)),t.fillText("BEST SCORE",Math.round(320),Math.round(s)),s+=20,t.fillStyle="#ffffff",m.setFont(t,"primary",9);for(const[a,n]of i.levelStats){if(s-e>400)break;t.fillText(`Level ${a}`,Math.round(20),Math.round(s)),t.fillText(n.attempts.toString(),Math.round(80),Math.round(s)),t.fillText(n.completions.toString(),Math.round(140),Math.round(s)),t.fillText(`${n.completionRate.toFixed(1)}%`,Math.round(200),Math.round(s)),t.fillText(this.formatPlayTime(n.bestTime),Math.round(250),Math.round(s)),t.fillText(n.bestScore.toString(),Math.round(320),Math.round(s)),s+=18}}drawPerformanceContent(t,e){const i=this.config.statsManager.getPerformanceStats();let s=e+15;t.fillStyle="#00ff99",m.setFont(t,"primary",12,"bold"),t.textAlign="left",t.fillText("PERFORMANCE METRICS",Math.round(20),Math.round(s)),s+=25,this.drawStatRow(t,"AVERAGE FPS",`${i.averageFPS.toFixed(1)}`,s),s+=25,this.drawStatRow(t,"MIN FPS",i.minFPS.toString(),s),s+=25,this.drawStatRow(t,"MAX FPS",i.maxFPS.toString(),s),s+=35,t.fillStyle="#00ff99",m.setFont(t,"primary",10,"bold"),t.fillText("LOAD TIMES",Math.round(20),Math.round(s)),s+=20,this.drawStatRow(t,"GAME START",`${i.loadTimes.gameStart}ms`,s),s+=25,this.drawStatRow(t,"LEVEL LOAD",`${i.loadTimes.levelLoad}ms`,s),s+=25,this.drawStatRow(t,"ASSET LOAD",`${i.loadTimes.assetLoad}ms`,s),s+=35,t.fillStyle="#00ff99",m.setFont(t,"primary",10,"bold"),t.fillText("DEVICE INFORMATION",Math.round(20),Math.round(s)),s+=20,this.drawStatRow(t,"PLATFORM",i.deviceInfo.platform,s),s+=25,this.drawStatRow(t,"RESOLUTION",i.deviceInfo.screenResolution,s),s+=25,this.drawStatRow(t,"LANGUAGE",i.deviceInfo.language,s),s+=25;const a=i.deviceInfo.userAgent.length>30?i.deviceInfo.userAgent.substring(0,30)+"...":i.deviceInfo.userAgent;this.drawStatRow(t,"BROWSER",a,s)}drawSessionsContent(t,e){const i=this.config.statsManager.getStats();let s=e+15;t.fillStyle="#00ff99",m.setFont(t,"primary",12,"bold"),t.textAlign="left",t.fillText("RECENT SESSIONS",Math.round(20),Math.round(s)),s+=25,t.fillStyle="#b600f9",m.setFont(t,"primary",9,"bold"),t.fillText("DURATION",Math.round(20),Math.round(s)),t.fillText("GOALS",Math.round(80),Math.round(s)),t.fillText("BALLS LOST",Math.round(120),Math.round(s)),t.fillText("SCORE",Math.round(180),Math.round(s)),t.fillText("STATUS",Math.round(240),Math.round(s)),s+=15,t.fillStyle="#ffffff",m.setFont(t,"primary",8);for(const a of i.recentSessions){if(s-e>400)break;const n=this.formatPlayTime(a.duration),r=a.completed?"COMPLETE":"INCOMPLETE",c=a.completed?"#00ff99":"#ff6666";t.fillText(n,Math.round(20),Math.round(s)),t.fillText(a.goalsReached.toString(),Math.round(80),Math.round(s)),t.fillText(a.ballsLost.toString(),Math.round(120),Math.round(s)),t.fillText(a.score.toString(),Math.round(180),Math.round(s)),t.fillStyle=c,t.fillText(r,Math.round(240),Math.round(s)),t.fillStyle="#ffffff",s+=16}}drawStatRow(t,e,i,s){t.fillStyle="#cccccc",m.setFont(t,"primary",10),t.textAlign="left",t.fillText(e,Math.round(20),Math.round(s)),t.fillStyle="#ffffff",m.setFont(t,"primary",10,"bold"),t.textAlign="right",t.fillText(i,Math.round(330),Math.round(s))}drawProgressBar(t,e,i,s){t.fillStyle="#cccccc",m.setFont(t,"primary",10),t.textAlign="left",t.fillText(e,Math.round(20),Math.round(s)),t.fillStyle="#ffffff",m.setFont(t,"primary",10,"bold"),t.textAlign="right",t.fillText(`${i.toFixed(1)}%`,Math.round(330),Math.round(s)),s+=15,t.fillStyle="#333333",t.fillRect(Math.round(20),Math.round(s),300,8);const a=i/100*300;t.fillStyle="#00ff99",t.fillRect(Math.round(20),Math.round(s),a,8),t.strokeStyle="#666666",t.lineWidth=1,t.strokeRect(Math.round(20),Math.round(s),300,8)}drawFooter(t){t.fillStyle="#888888",m.setFont(t,"primary",9),t.textAlign="center",t.fillText("1-4: Switch tabs | ↑↓: Scroll | ESC: Close",Math.round(180),Math.round(580));const i=this.config.statsManager.getStats(),s=new Date(i.lastUpdated).toLocaleString();t.fillText(`Last updated: ${s}`,Math.round(180),Math.round(580+15))}formatPlayTime(t){if(t===0)return"N/A";const e=Math.floor(t/(1e3*60*60)),i=Math.floor(t%(1e3*60*60)/(1e3*60)),s=Math.floor(t%(1e3*60)/1e3);return e>0?`${e}h ${i}m`:i>0?`${i}m ${s}s`:`${s}s`}}class xt{constructor(){l(this,"STORAGE_KEY","circuit_breaker_save");l(this,"SAVE_SLOTS_KEY","circuit_breaker_slots");l(this,"CURRENT_VERSION","1.0.0");l(this,"MAX_SAVE_SLOTS",3);l(this,"AUTO_SAVE_INTERVAL",3e4);l(this,"autoSaveTimer",null);l(this,"lastAutoSave",0);o.info("💾 StorageManager initialized",null,"StorageManager")}createNewProgress(){return{version:this.CURRENT_VERSION,lastSaved:Date.now(),currentLevel:1,highestLevel:1,totalScore:0,lives:3,completedLevels:new Set,highScores:new Map,achievements:new Set,settings:{masterVolume:.7,musicVolume:.4,sfxVolume:.8,audioEnabled:!0},playTime:0,gamesPlayed:0,totalBallsLost:0,totalGoalsReached:0}}saveProgress(t,e=0){try{if(t.lastSaved=Date.now(),t.version=this.CURRENT_VERSION,!this.validateProgress(t))return o.error("❌ Invalid progress data, save aborted",null,"StorageManager"),!1;const i=this.serializeProgress(t),s=`${this.STORAGE_KEY}_${e}`;return localStorage.setItem(s,JSON.stringify(i)),this.updateSaveSlot(e,t),o.info(`💾 Game progress saved to slot ${e}`,null,"StorageManager"),!0}catch(i){return o.error("❌ Failed to save game progress:",i,"StorageManager"),!1}}loadProgress(t=0){try{const e=`${this.STORAGE_KEY}_${t}`,i=localStorage.getItem(e);if(!i)return o.info(`📂 No save data found in slot ${t}`,null,"StorageManager"),null;const s=JSON.parse(i),a=this.deserializeProgress(s);return this.validateProgress(a)?this.isVersionCompatible(a.version)?(o.info(`📂 Game progress loaded from slot ${t}`,null,"StorageManager"),a):(o.warn("⚠️ Save data version mismatch, attempting migration",null,"StorageManager"),this.migrateProgress(a)):(o.error("❌ Invalid save data, loading aborted",null,"StorageManager"),null)}catch(e){return o.error("❌ Failed to load game progress:",e,"StorageManager"),null}}autoSave(t,e=0){const i=Date.now();if(i-this.lastAutoSave<this.AUTO_SAVE_INTERVAL)return!1;const s=this.saveProgress(t,e);return s&&(this.lastAutoSave=i,o.debug("🔄 Auto-save completed",null,"StorageManager")),s}startAutoSave(t,e=0){this.stopAutoSave(),this.autoSaveTimer=window.setInterval(()=>{this.autoSave(t,e)},this.AUTO_SAVE_INTERVAL),o.debug("🔄 Auto-save timer started",null,"StorageManager")}stopAutoSave(){this.autoSaveTimer&&(clearInterval(this.autoSaveTimer),this.autoSaveTimer=null,o.debug("🔄 Auto-save timer stopped",null,"StorageManager"))}getSaveSlots(){try{const t=localStorage.getItem(this.SAVE_SLOTS_KEY);return t?JSON.parse(t).filter(i=>i&&i.progress):[]}catch(t){return o.error("❌ Failed to load save slots:",t,"StorageManager"),[]}}deleteSaveSlot(t){try{const e=`${this.STORAGE_KEY}_${t}`;localStorage.removeItem(e);const s=this.getSaveSlots().filter(a=>a.id!==t);return localStorage.setItem(this.SAVE_SLOTS_KEY,JSON.stringify(s)),o.info(`🗑️ Save slot ${t} deleted`,null,"StorageManager"),!0}catch(e){return o.error("❌ Failed to delete save slot:",e,"StorageManager"),!1}}clearAllSaves(){try{for(let t=0;t<this.MAX_SAVE_SLOTS;t++){const e=`${this.STORAGE_KEY}_${t}`;localStorage.removeItem(e)}return localStorage.removeItem(this.SAVE_SLOTS_KEY),o.info("🗑️ All save data cleared",null,"StorageManager"),!0}catch(t){return o.error("❌ Failed to clear save data:",t,"StorageManager"),!1}}validateProgress(t){if(!t||typeof t!="object")return!1;const e=["version","lastSaved","currentLevel","highestLevel","totalScore","lives","completedLevels","highScores","achievements","settings","playTime","gamesPlayed","totalBallsLost","totalGoalsReached"];for(const i of e)if(!(i in t))return o.error(`❌ Missing required field: ${i}`,null,"StorageManager"),!1;return!(t.currentLevel<1||t.highestLevel<1||t.totalScore<0||t.lives<0||t.lives>10||t.playTime<0||t.gamesPlayed<0)}serializeProgress(t){return N(w({},t),{completedLevels:Array.from(t.completedLevels),highScores:Object.fromEntries(t.highScores),achievements:Array.from(t.achievements)})}deserializeProgress(t){return N(w({},t),{completedLevels:new Set(t.completedLevels||[]),highScores:new Map(Object.entries(t.highScores||{})),achievements:new Set(t.achievements||[])})}isVersionCompatible(t){return!0}migrateProgress(t){const e=w(w({},this.createNewProgress()),t);return e.completedLevels||(e.completedLevels=new Set),e.highScores||(e.highScores=new Map),e.achievements||(e.achievements=new Set),e.settings||(e.settings=this.createNewProgress().settings),o.info("🔄 Progress data migrated to current version",null,"StorageManager"),e}updateSaveSlot(t,e){try{const i=this.getSaveSlots(),s=i.findIndex(n=>n.id===t),a={id:t,name:`Save ${t+1}`,lastPlayed:Date.now(),progress:e};s>=0?i[s]=a:i.push(a),i.sort((n,r)=>r.lastPlayed-n.lastPlayed),localStorage.setItem(this.SAVE_SLOTS_KEY,JSON.stringify(i))}catch(i){o.error("❌ Failed to update save slot metadata:",i,"StorageManager")}}getStorageInfo(){var t;try{let e=0;const i=Object.keys(localStorage);for(const n of i)(n.startsWith(this.STORAGE_KEY)||n===this.SAVE_SLOTS_KEY)&&(e+=((t=localStorage.getItem(n))==null?void 0:t.length)||0);const s=5*1024*1024,a=e/s*100;return{used:e,available:s,percentage:a}}catch(e){return o.error("❌ Failed to get storage info:",e,"StorageManager"),{used:0,available:0,percentage:0}}}}class wt{constructor(){l(this,"achievements",new Map);l(this,"notifications",[]);l(this,"onAchievementUnlocked");this.initializeAchievements(),o.info("🏆 AchievementManager initialized",null,"AchievementManager")}initializeAchievements(){this.addAchievement({id:"first_goal",name:"First Contact",description:"Reach your first goal",icon:"🎯",unlocked:!1,category:"gameplay",rarity:"common"}),this.addAchievement({id:"level_complete",name:"Circuit Master",description:"Complete a level",icon:"⚡",unlocked:!1,category:"gameplay",rarity:"common"}),this.addAchievement({id:"perfect_level",name:"Perfect Circuit",description:"Complete a level without losing any balls",icon:"💎",unlocked:!1,category:"skill",rarity:"rare"}),this.addAchievement({id:"speed_runner",name:"Speed Runner",description:"Complete a level in under 30 seconds",icon:"🏃",unlocked:!1,category:"skill",rarity:"rare"}),this.addAchievement({id:"survivor",name:"Survivor",description:"Complete 5 levels in a single game",icon:"🛡️",unlocked:!1,category:"gameplay",rarity:"epic"}),this.addAchievement({id:"high_scorer",name:"High Scorer",description:"Score 10,000 points in a single game",icon:"🏆",unlocked:!1,category:"skill",rarity:"epic"}),this.addAchievement({id:"goal_hunter",name:"Goal Hunter",description:"Reach 50 goals total",icon:"🎯",unlocked:!1,category:"completion",rarity:"rare",progress:0,maxProgress:50}),this.addAchievement({id:"level_explorer",name:"Level Explorer",description:"Unlock 10 levels",icon:"🗺️",unlocked:!1,category:"completion",rarity:"rare",progress:0,maxProgress:10}),this.addAchievement({id:"persistent_player",name:"Persistent Player",description:"Play 10 games",icon:"🎮",unlocked:!1,category:"completion",rarity:"common",progress:0,maxProgress:10}),this.addAchievement({id:"time_investor",name:"Time Investor",description:"Play for 1 hour total",icon:"⏰",unlocked:!1,category:"completion",rarity:"common",progress:0,maxProgress:36e5}),this.addAchievement({id:"ball_conservationist",name:"Ball Conservationist",description:"Complete a level with only 1 ball",icon:"🔵",unlocked:!1,category:"skill",rarity:"epic"}),this.addAchievement({id:"chain_reaction",name:"Chain Reaction",description:"Reach 3 goals in quick succession",icon:"⚡",unlocked:!1,category:"skill",rarity:"legendary"}),this.addAchievement({id:"veteran_player",name:"Veteran Player",description:"Play for 5 hours total",icon:"👴",unlocked:!1,category:"completion",rarity:"epic",progress:0,maxProgress:18e6}),this.addAchievement({id:"master_circuit",name:"Master Circuit",description:"Complete all levels",icon:"👑",unlocked:!1,category:"completion",rarity:"legendary"})}addAchievement(t){this.achievements.set(t.id,t)}setAchievementCallback(t){this.onAchievementUnlocked=t}checkAchievements(t){t.goalsReached>=1&&this.unlockAchievement("first_goal"),t.levelsCompleted>=1&&this.unlockAchievement("level_complete"),t.perfectLevels>=1&&this.unlockAchievement("perfect_level"),t.quickCompletions>=1&&this.unlockAchievement("speed_runner"),t.levelsCompleted>=5&&this.unlockAchievement("survivor"),t.totalScore>=1e4&&this.unlockAchievement("high_scorer"),t.lives>=2&&t.levelsCompleted>=1&&this.unlockAchievement("ball_conservationist"),this.updateProgressAchievement("goal_hunter",t.goalsReached),this.updateProgressAchievement("level_explorer",t.currentLevel),this.updateProgressAchievement("persistent_player",t.gamesPlayed),this.updateProgressAchievement("time_investor",t.totalPlayTime),this.updateProgressAchievement("veteran_player",t.totalPlayTime),t.currentLevel>=20&&this.unlockAchievement("master_circuit")}unlockAchievement(t){const e=this.achievements.get(t);if(!e||e.unlocked)return!1;e.unlocked=!0,e.unlockedAt=Date.now();const i={id:e.id,name:e.name,description:e.description,icon:e.icon,timestamp:Date.now(),category:e.category,rarity:e.rarity};return this.notifications.push(i),this.onAchievementUnlocked&&this.onAchievementUnlocked(e),o.info(`🏆 Achievement unlocked: ${e.name}`,null,"AchievementManager"),!0}updateProgressAchievement(t,e){const i=this.achievements.get(t);!i||i.unlocked||!i.maxProgress||(i.progress=Math.min(e,i.maxProgress),i.progress>=i.maxProgress&&this.unlockAchievement(t))}getAllAchievements(){return Array.from(this.achievements.values())}getUnlockedAchievements(){return Array.from(this.achievements.values()).filter(t=>t.unlocked)}getAchievementsByCategory(t){return Array.from(this.achievements.values()).filter(e=>e.category===t)}getAchievementsByRarity(t){return Array.from(this.achievements.values()).filter(e=>e.rarity===t)}getRecentNotifications(t=5){return this.notifications.sort((e,i)=>i.timestamp-e.timestamp).slice(0,t)}clearOldNotifications(t=24*60*60*1e3){const e=Date.now()-t;this.notifications=this.notifications.filter(i=>i.timestamp>e)}getAchievementProgress(t){const e=this.achievements.get(t);if(!e||!e.maxProgress)return null;const i=e.progress||0,s=i/e.maxProgress*100;return{current:i,max:e.maxProgress,percentage:Math.min(s,100)}}getAchievementStats(){const t=Array.from(this.achievements.values()),e=t.filter(a=>a.unlocked),i={},s={};for(const a of t)i[a.category]||(i[a.category]={total:0,unlocked:0}),s[a.rarity]||(s[a.rarity]={total:0,unlocked:0}),i[a.category].total++,s[a.rarity].total++,a.unlocked&&(i[a.category].unlocked++,s[a.rarity].unlocked++);return{total:t.length,unlocked:e.length,percentage:t.length>0?e.length/t.length*100:0,byCategory:i,byRarity:s}}loadAchievements(t){for(const e of t){const i=this.achievements.get(e);i&&(i.unlocked=!0,i.unlockedAt=Date.now())}o.info(`📂 Loaded ${t.length} achievements from save`,null,"AchievementManager")}getUnlockedAchievementIds(){return Array.from(this.achievements.values()).filter(t=>t.unlocked).map(t=>t.id)}resetAchievements(){for(const t of this.achievements.values())t.unlocked=!1,t.unlockedAt=void 0,t.progress=0;this.notifications=[],o.info("🔄 All achievements reset",null,"AchievementManager")}}class bt{constructor(){l(this,"stats");l(this,"currentSession",null);l(this,"fpsSamples",[]);l(this,"MAX_FPS_SAMPLES",100);l(this,"STATS_KEY","circuit_breaker_stats");l(this,"VERSION","1.0.0");this.stats=this.loadStats(),this.initializePerformanceStats(),o.info("📊 StatsManager initialized",null,"StatsManager")}recordEvent(t){try{switch(t.type){case"game_start":this.handleGameStart(t);break;case"game_complete":this.handleGameComplete(t);break;case"level_start":this.handleLevelStart(t);break;case"level_complete":this.handleLevelComplete(t);break;case"goal_reached":this.handleGoalReached(t);break;case"ball_lost":this.handleBallLost(t);break;case"death":this.handleDeath(t);break;case"session_start":this.handleSessionStart(t);break;case"session_end":this.handleSessionEnd(t);break;case"fps_update":this.handleFPSUpdate(t);break;case"achievement_unlocked":this.handleAchievementUnlocked(t);break}this.saveStats()}catch(e){o.error("❌ Failed to record stats event:",e,"StatsManager")}}getStats(){return w({},this.stats)}getLevelStats(t){return this.stats.levelStats.get(t)||null}getPerformanceStats(){return w({},this.stats.performance)}getCurrentSession(){return this.currentSession?w({},this.currentSession):null}resetStats(){this.stats=this.createNewStats(),this.currentSession=null,this.fpsSamples=[],this.saveStats(),o.info("🔄 All stats reset",null,"StatsManager")}exportStats(){const t=N(w({},this.stats),{levelStats:Object.fromEntries(this.stats.levelStats),exportDate:new Date().toISOString()});return JSON.stringify(t,null,2)}importStats(t){try{const e=JSON.parse(t);if(!this.validateStats(e))return o.error("❌ Invalid stats data format",null,"StatsManager"),!1;if(e.levelStats&&typeof e.levelStats=="object"){const i=new Map;for(const[s,a]of Object.entries(e.levelStats))i.set(parseInt(s),a);e.levelStats=i}return this.stats=e,this.saveStats(),o.info("📥 Stats imported successfully",null,"StatsManager"),!0}catch(e){return o.error("❌ Failed to import stats:",e,"StatsManager"),!1}}getStatsSummary(){const t=this.formatPlayTime(this.stats.totalPlayTime),e=this.stats.totalGamesStarted,i=this.stats.averageCompletionRate.toFixed(1)+"%",s=this.stats.totalGamesCompleted>0?Math.round(this.stats.highestScore/this.stats.totalGamesCompleted):0;let a=1,n=0;for(const[h,u]of this.stats.levelStats)u.completions>n&&(n=u.completions,a=h);let r=1,c=100;for(const[h,u]of this.stats.levelStats)u.attempts>0&&u.completionRate<c&&(c=u.completionRate,r=h);return{totalPlayTime:t,gamesPlayed:e,completionRate:i,averageScore:s,favoriteLevel:a,mostChallengingLevel:r}}handleGameStart(t){this.stats.totalGamesStarted++,this.stats.lastUpdated=t.timestamp,o.debug("📊 Game start recorded",null,"StatsManager")}handleGameComplete(t){this.stats.totalGamesCompleted++,this.stats.lastUpdated=t.timestamp,this.currentSession&&(this.currentSession.completed=!0,this.currentSession.endTime=t.timestamp,this.currentSession.duration=t.timestamp-this.currentSession.startTime),o.debug("📊 Game complete recorded",null,"StatsManager")}handleLevelStart(t){var s;const e=((s=t.data)==null?void 0:s.levelId)||1;let i=this.stats.levelStats.get(e);i||(i=this.createLevelStats(e),this.stats.levelStats.set(e,i)),i.attempts++,i.lastPlayed=t.timestamp,this.currentSession&&this.currentSession.levelsPlayed.push(e),o.debug(`📊 Level ${e} start recorded`,null,"StatsManager")}handleLevelComplete(t){var n,r,c;const e=((n=t.data)==null?void 0:n.levelId)||1,i=((r=t.data)==null?void 0:r.completionTime)||0,s=((c=t.data)==null?void 0:c.score)||0,a=this.stats.levelStats.get(e);a&&(a.completions++,a.completionRate=a.completions/a.attempts*100,i>0&&(a.bestTime===0||i<a.bestTime)&&(a.bestTime=i),s>a.bestScore&&(a.bestScore=s)),this.stats.levelsCompleted=Math.max(this.stats.levelsCompleted,e),this.stats.highestLevel=Math.max(this.stats.highestLevel,e),o.debug(`📊 Level ${e} complete recorded`,null,"StatsManager")}handleGoalReached(t){this.stats.totalGoalsReached++,this.currentSession&&this.currentSession.goalsReached++,o.debug("📊 Goal reached recorded",null,"StatsManager")}handleBallLost(t){this.stats.totalBallsLost++,this.currentSession&&this.currentSession.ballsLost++,o.debug("📊 Ball lost recorded",null,"StatsManager")}handleDeath(t){this.stats.totalDeaths++,o.debug("📊 Death recorded",null,"StatsManager")}handleSessionStart(t){this.stats.totalSessions++,this.currentSession={sessionId:this.generateSessionId(),startTime:t.timestamp,duration:0,levelsPlayed:[],goalsReached:0,ballsLost:0,score:0,completed:!1},o.debug("📊 Session start recorded",null,"StatsManager")}handleSessionEnd(t){this.currentSession&&(this.currentSession.endTime=t.timestamp,this.currentSession.duration=t.timestamp-this.currentSession.startTime,this.stats.recentSessions.unshift(this.currentSession),this.stats.recentSessions.length>10&&(this.stats.recentSessions=this.stats.recentSessions.slice(0,10)),this.currentSession.duration>this.stats.longestSession&&(this.stats.longestSession=this.currentSession.duration),this.currentSession=null),o.debug("📊 Session end recorded",null,"StatsManager")}handleFPSUpdate(t){var i;const e=((i=t.data)==null?void 0:i.fps)||0;this.fpsSamples.push(e),this.fpsSamples.length>this.MAX_FPS_SAMPLES&&this.fpsSamples.shift(),this.stats.performance.averageFPS=this.fpsSamples.reduce((s,a)=>s+a,0)/this.fpsSamples.length,this.stats.performance.minFPS=Math.min(...this.fpsSamples),this.stats.performance.maxFPS=Math.max(...this.fpsSamples),this.stats.performance.fpsSamples=[...this.fpsSamples]}handleAchievementUnlocked(t){this.stats.achievementsUnlocked++,this.stats.achievementProgress=this.stats.achievementsUnlocked/this.stats.totalAchievements*100,o.debug("📊 Achievement unlocked recorded",null,"StatsManager")}createNewStats(){return{version:this.VERSION,lastUpdated:Date.now(),totalPlayTime:0,totalSessions:0,totalGamesStarted:0,totalGamesCompleted:0,totalGoalsReached:0,totalBallsLost:0,totalDeaths:0,highestScore:0,highestLevel:1,longestSession:0,fastestLevelCompletion:0,levelsCompleted:0,totalLevelAttempts:0,averageCompletionRate:0,levelStats:new Map,performance:this.createPerformanceStats(),recentSessions:[],achievementsUnlocked:0,totalAchievements:0,achievementProgress:0}}createPerformanceStats(){return{averageFPS:0,minFPS:0,maxFPS:0,fpsSamples:[],loadTimes:{gameStart:0,levelLoad:0,assetLoad:0},deviceInfo:{userAgent:navigator.userAgent,screenResolution:`${screen.width}x${screen.height}`,platform:navigator.platform,language:navigator.language}}}createLevelStats(t){return{levelId:t,attempts:0,completions:0,bestTime:0,bestScore:0,totalPlayTime:0,ballsLost:0,goalsReached:0,averageAttempts:0,completionRate:0,lastPlayed:0}}initializePerformanceStats(){this.stats.performance=this.createPerformanceStats()}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}loadStats(){try{const t=localStorage.getItem(this.STATS_KEY);if(t){const e=JSON.parse(t);if(e.levelStats&&typeof e.levelStats=="object"&&(e.levelStats=new Map(Object.entries(e.levelStats))),this.validateStats(e))return o.info("📂 Stats loaded from storage",null,"StatsManager"),e}}catch(t){o.error("❌ Failed to load stats:",t,"StatsManager")}return o.info("🆕 Creating new stats",null,"StatsManager"),this.createNewStats()}saveStats(){try{const t=N(w({},this.stats),{levelStats:Object.fromEntries(this.stats.levelStats)});localStorage.setItem(this.STATS_KEY,JSON.stringify(t))}catch(t){o.error("❌ Failed to save stats:",t,"StatsManager")}}validateStats(t){return t&&typeof t.version=="string"&&typeof t.lastUpdated=="number"&&typeof t.totalPlayTime=="number"}formatPlayTime(t){const e=Math.floor(t/36e5),i=Math.floor(t%(1e3*60*60)/(1e3*60));return e>0?`${e}h ${i}m`:`${i}m`}}var P=(f=>(f.SLOW_MO_SURGE="slow_mo_surge",f.MAGNETIC_GUIDE="magnetic_guide",f.CIRCUIT_PATCH="circuit_patch",f.OVERCLOCK_BOOST="overclock_boost",f.SCAN_REVEAL="scan_reveal",f))(P||{});class Pt{constructor(){l(this,"activePowerUps",new Map);l(this,"powerUpEffects",{});l(this,"upgradeProgress");l(this,"currentTime",0);l(this,"POWER_UP_CONFIGS",{slow_mo_surge:{baseDuration:5e3,baseCharges:1,timeScale:.3},magnetic_guide:{baseDuration:5e3,baseCharges:1,magneticForce:.3},circuit_patch:{baseDuration:-1,baseCharges:1},overclock_boost:{baseDuration:4e3,baseCharges:1,barSpeedMultiplier:1.5},scan_reveal:{baseDuration:3e3,baseCharges:1}});this.upgradeProgress=this.createDefaultUpgradeProgress(),o.info("⚡ PowerUpManager initialized",null,"PowerUpManager")}createDefaultUpgradeProgress(){return{slowMoCharges:1,barSpeedLevel:0,frictionLevel:0,shieldLevel:0,unlockedThemes:["default"],unlockedBallTypes:["standard"],currentTheme:"default",currentBallType:"standard"}}update(t){this.currentTime+=t,this.updateActivePowerUps(),this.calculateCombinedEffects()}updateActivePowerUps(){const t=[];this.activePowerUps.forEach((e,i)=>{e.isActive&&e.duration>0&&this.currentTime-e.startTime>=e.duration&&t.push(i)}),t.forEach(e=>{this.deactivatePowerUp(e)})}calculateCombinedEffects(){this.powerUpEffects={},this.activePowerUps.forEach((t,e)=>{t.isActive&&this.applyPowerUpEffect(e)})}applyPowerUpEffect(t){const e=this.POWER_UP_CONFIGS[t];switch(t){case"slow_mo_surge":this.powerUpEffects.timeScale=e.timeScale;break;case"magnetic_guide":this.powerUpEffects.magneticForce=e.magneticForce;break;case"circuit_patch":this.powerUpEffects.shieldActive=!0;break;case"overclock_boost":this.powerUpEffects.barSpeedMultiplier=e.barSpeedMultiplier;break;case"scan_reveal":this.powerUpEffects.scanActive=!0;break}}activatePowerUp(t){const e=this.activePowerUps.get(t);return!e||e.charges<=0?!1:(e.charges--,e.isActive=!0,e.startTime=this.currentTime,o.info(`⚡ Power-up activated: ${t}`,null,"PowerUpManager"),!0)}deactivatePowerUp(t){const e=this.activePowerUps.get(t);e&&(e.isActive=!1,o.info(`⚡ Power-up deactivated: ${t}`,null,"PowerUpManager"))}addCharges(t,e=1){const i=this.activePowerUps.get(t);i&&(i.charges=Math.min(i.charges+e,i.maxCharges),o.info(`⚡ Added ${e} charges to ${t}`,null,"PowerUpManager"))}getPowerUpState(t){return this.activePowerUps.get(t)}getActivePowerUps(){return new Map(this.activePowerUps)}getPowerUpEffects(){return w({},this.powerUpEffects)}isPowerUpActive(t){const e=this.activePowerUps.get(t);return e?e.isActive:!1}initializeRun(){this.activePowerUps.clear(),Object.values(P).forEach(t=>{const e=this.POWER_UP_CONFIGS[t];this.activePowerUps.set(t,{type:t,isActive:!1,startTime:0,duration:e.baseDuration,charges:0,maxCharges:0})}),o.info("⚡ Power-ups initialized for new run (zero charges)",null,"PowerUpManager")}getUpgradeProgress(){return w({},this.upgradeProgress)}updateUpgradeProgress(t){this.upgradeProgress=w(w({},this.upgradeProgress),t),o.info("⚡ Upgrade progress updated",null,"PowerUpManager")}getCurrentBallType(){return this.upgradeProgress.currentBallType}setCurrentBallType(t){this.upgradeProgress.unlockedBallTypes.includes(t)&&(this.upgradeProgress.currentBallType=t,o.info(`⚡ Ball type changed to: ${t}`,null,"PowerUpManager"))}getCurrentTheme(){return this.upgradeProgress.currentTheme}setCurrentTheme(t){this.upgradeProgress.unlockedThemes.includes(t)&&(this.upgradeProgress.currentTheme=t,o.info(`⚡ Theme changed to: ${t}`,null,"PowerUpManager"))}unlockBallType(t){this.upgradeProgress.unlockedBallTypes.includes(t)||(this.upgradeProgress.unlockedBallTypes.push(t),o.info(`⚡ Ball type unlocked: ${t}`,null,"PowerUpManager"))}unlockTheme(t){this.upgradeProgress.unlockedThemes.includes(t)||(this.upgradeProgress.unlockedThemes.push(t),o.info(`⚡ Theme unlocked: ${t}`,null,"PowerUpManager"))}getBallPhysicsProperties(){switch(this.upgradeProgress.currentBallType){case"heavy":return{mass:6*1.5,friction:.18*1.2,restitution:.65*.8};case"light":return{mass:6*.7,friction:.18*.6,restitution:.65*1.1};case"neon_split":return{mass:6*.9,friction:.18*.9,restitution:.65};default:return{mass:6,friction:.18,restitution:.65}}}getBarSpeedMultiplier(){const e=1+this.upgradeProgress.barSpeedLevel*.1,i=this.powerUpEffects.barSpeedMultiplier||1;return 1*e*i}getFrictionModifier(){return 1*(1-this.upgradeProgress.frictionLevel*.05)}useShield(){const t=this.activePowerUps.get("circuit_patch");return t&&t.charges>0?(t.charges--,t.isActive=!1,o.info("🛡️ Shield used",null,"PowerUpManager"),!0):!1}reset(){this.activePowerUps.clear(),this.powerUpEffects={},this.currentTime=0,o.info("⚡ PowerUpManager reset",null,"PowerUpManager")}}class At{constructor(){l(this,"gameState");l(this,"gameLoop");l(this,"renderer");l(this,"physicsEngine");l(this,"inputManager");l(this,"tiltingBar");l(this,"levelManager");l(this,"audioManager");l(this,"settingsMenu");l(this,"saveLoadMenu");l(this,"achievementNotification");l(this,"statsMenu");l(this,"storageManager");l(this,"achievementManager");l(this,"statsManager");l(this,"powerUpManager");l(this,"currentLevel",null);l(this,"isRunning",!1);l(this,"levelCompletionHandled",!1);l(this,"isAnimatingHoleFall",!1);l(this,"holeAnimationState",null);l(this,"menuTimer",0);l(this,"attractModeDelay",1e4);l(this,"attractModeTimer",0);l(this,"loadingProgress",0);l(this,"loadingStatus","Initializing...");l(this,"assetsToLoad",[]);l(this,"loadedAssets",0);l(this,"loadingComplete",!1);l(this,"gameProgress");l(this,"currentSaveSlot",0);l(this,"sessionStartTime",0);l(this,"lastAutoSave",0);this.gameState=new ht,this.gameLoop=new ct,this.renderer=new ut,this.physicsEngine=new dt,this.inputManager=new gt,this.levelManager=new mt,this.audioManager=new St,this.storageManager=new xt,this.achievementManager=new wt,this.statsManager=new bt,this.powerUpManager=new Pt,this.settingsMenu=new et({audioManager:this.audioManager,onClose:()=>this.closeSettings(),onBackToMenu:()=>this.backToMenuFromSettings()}),this.saveLoadMenu=new vt({onClose:()=>this.closeSaveLoadMenu(),onLoadGame:t=>this.loadGameFromSlot(t),onNewGame:t=>this.startNewGameInSlot(t),onDeleteSlot:t=>this.deleteSaveSlot(t),getSaveSlots:()=>this.storageManager.getSaveSlots(),getCurrentProgress:()=>this.gameProgress,getAchievements:()=>this.achievementManager.getAllAchievements()}),this.achievementNotification=new yt({onComplete:()=>{o.debug("🏆 Achievement notification completed",null,"Game")}}),this.statsMenu=new Mt({onClose:()=>this.closeStatsMenu(),statsManager:this.statsManager}),this.tiltingBar=new ft({position:{x:180,y:590},width:360,height:8,maxRotation:Math.PI/4,rotationSpeed:3,friction:.05}),o.info("🎮 Circuit Breaker - Game initialized",null,"Game")}init(){return b(this,null,function*(){try{o.info("🎮 Initializing Circuit Breaker...",null,"Game");const t=document.getElementById("game-canvas");if(!t)throw new Error("Canvas element not found");this.renderer.init(t),o.info("🎨 Loading sprite atlas...",null,"Game"),yield this.renderer.loadSprites(),o.info("✅ Sprite atlas loading completed",null,"Game"),yield m.preloadFonts(),this.physicsEngine.setGravity(0,520),this.physicsEngine.setAirResistance(.999),this.physicsEngine.setBounds(360,640),this.physicsEngine.setTiltingBar(this.tiltingBar),this.physicsEngine.setAudioCallback((h,u)=>{this.gameState.isPlaying()&&u==="bounce"&&this.audioManager.playBounceSound(h)});const e=this.physicsEngine.isBallHeld.bind(this.physicsEngine);this.physicsEngine.isBallHeld=h=>this.currentLevel&&this.currentLevel.isBallInSaucer(h)?!0:e(h);const i=this.physicsEngine.getHeldBallTarget.bind(this.physicsEngine);this.physicsEngine.getHeldBallTarget=h=>{var u;if(this.currentLevel){const d=this.currentLevel.getLevelData();for(const g of d.holes)if((u=g.saucerState)!=null&&u.isActive&&g.saucerState.ballId===h)return this.currentLevel.getSaucerBallPosition(g.id)}return i(h)},this.inputManager.init(t),yield this.audioManager.init(),this.loadGameProgress(),this.achievementManager.setAchievementCallback(h=>{o.info(`🏆 Achievement unlocked: ${h.name}`,null,"Game"),this.achievementNotification.show(h)});const s=14,a=-50,n=300,r=this.powerUpManager.getBallPhysicsProperties(),c=this.physicsEngine.createObject({id:"game-ball",x:a,y:n,radius:s,mass:r.mass,restitution:r.restitution,friction:r.friction,isStatic:!1});this.physicsEngine.addObject(c),this.physicsEngine.setDebug(this.gameState.isDebugMode()),this.powerUpManager.initializeRun(),this.currentLevel=this.levelManager.loadLevel(1),this.currentLevel&&(this.currentLevel.start(),this.levelCompletionHandled=!1,o.info("🎯 Level 1 loaded and started",null,"Game")),this.isRunning=!0,this.statsManager.recordEvent({type:"session_start",timestamp:Date.now()}),o.info("✅ Circuit Breaker initialized successfully",null,"Game")}catch(t){throw o.error("❌ Failed to initialize Circuit Breaker:",t,"Game"),t}})}start(){if(!this.isRunning){o.warn("⚠️ Game not initialized. Call init() first.",null,"Game");return}o.info("▶️ Starting Circuit Breaker...",null,"Game"),this.gameState.setState(M.LOADING),this.gameLoop.start(this.gameState,this.renderer,this.physicsEngine,this),this.startAssetLoading()}update(t){if(this.inputManager.update(),this.gameState.isLoading()){this.loadingComplete&&this.hasAnyInput()&&(o.debug("🎮 User interaction detected - transitioning to menu",null,"Game"),this.completeLoading()),this.inputManager.endFrame();return}if(this.gameState.isState(M.MENU)&&(this.hasAnyInput()&&(this.menuTimer=0),(this.inputManager.isActionJustPressed("start")||this.inputManager.isMouseJustPressed())&&(o.info("🎮 Starting new game...",null,"Game"),this.startNewGame(),this.menuTimer=0,this.audioManager.resumeContext(),this.audioManager.playSound("ui_click")),this.inputManager.isKeyJustPressed("KeyD")&&(this.gameState.toggleDebugMode(),this.menuTimer=0,this.physicsEngine.setDebug(this.gameState.isDebugMode()),this.audioManager.playSound("ui_click")),this.inputManager.isKeyJustPressed("KeyS")&&(o.info("⚙️ Opening settings menu...",null,"Game"),this.openSettings(),this.menuTimer=0),this.inputManager.isKeyJustPressed("KeyL")&&(o.info("💾 Opening save/load menu...",null,"Game"),this.openSaveLoadMenu(),this.menuTimer=0),this.inputManager.isKeyJustPressed("KeyT")&&(o.info("📊 Opening stats menu...",null,"Game"),this.openStatsMenu(),this.menuTimer=0),this.menuTimer+=t,this.menuTimer>=this.attractModeDelay&&(o.debug("🎬 Starting attract mode...",null,"Game"),this.startAttractMode())),this.gameState.isAttractMode()&&(this.hasAnyInput()&&(o.debug("🏠 Exiting attract mode - returning to menu...",null,"Game"),this.exitAttractMode()),this.updateAttractMode(t)),this.gameState.isState(M.GAME_OVER)&&(this.inputManager.isActionJustPressed("start")||this.inputManager.isMouseJustPressed())&&(o.info("🏠 Returning to menu...",null,"Game"),this.gameState.reset(),this.audioManager.playSound("ui_click"),this.playMenuMusic()),this.gameState.isPaused()&&(this.inputManager.isActionJustPressed("pause")?(o.info("▶️ Resuming game...",null,"Game"),this.gameState.setState(M.PLAYING),this.audioManager.playSound("ui_click")):this.inputManager.isKeyJustPressed("KeyS")?(o.info("⚙️ Opening settings from pause menu...",null,"Game"),this.openSettings()):this.inputManager.isKeyJustPressed("KeyY")&&(o.info("🏠 Returning to menu from pause...",null,"Game"),this.gameState.reset(),this.audioManager.playSound("ui_click"),this.playMenuMusic())),this.gameState.isSettings()){const e=this.inputManager.getMousePosition();e&&(this.settingsMenu.handlePointerMove(e.x,e.y),this.inputManager.isMouseJustPressed()&&this.settingsMenu.handlePointerDown(e.x,e.y),this.inputManager.isMouseJustReleased()&&this.settingsMenu.handlePointerUp(e.x,e.y)),this.inputManager.isActionJustPressed("pause")&&(o.info("⚙️ Closing settings menu...",null,"Game"),this.closeSettings())}if(this.gameState.isSaveLoad()){this.saveLoadMenu.update(t);const e=this.inputManager.getMousePosition();e&&(this.saveLoadMenu.handlePointerMove(e.x,e.y),this.inputManager.isMouseJustPressed()&&this.saveLoadMenu.handlePointerDown(e.x,e.y),this.inputManager.isMouseJustReleased()&&this.saveLoadMenu.handlePointerUp(e.x,e.y));const i=this.inputManager.getJustPressedKeys();for(const s of i)if(this.saveLoadMenu.handleKeyPress(s))break;this.inputManager.isActionJustPressed("pause")&&(o.info("💾 Closing save/load menu...",null,"Game"),this.closeSaveLoadMenu())}if(this.gameState.isStats()){const e=this.inputManager.getJustPressedKeys();for(const i of e)this.statsMenu.handleInput(i);this.inputManager.isActionJustPressed("pause")&&(o.info("📊 Closing stats menu...",null,"Game"),this.closeStatsMenu())}if(this.gameState.isConfirmingMenu()&&(this.inputManager.isKeyJustPressed("KeyY")||this.inputManager.isKeyJustPressed("Enter")?(o.info("✅ Confirmed - returning to menu",null,"Game"),this.gameState.reset(),this.audioManager.playSound("ui_click")):(this.inputManager.isKeyJustPressed("KeyN")||this.inputManager.isKeyJustPressed("Escape"))&&(o.info("❌ Cancelled - returning to game",null,"Game"),this.gameState.setState(M.PLAYING),this.audioManager.playSound("ui_click"))),this.gameState.isPlaying()){if(this.powerUpManager.update(t),this.autoSave(),this.checkAchievements(),this.achievementNotification.update(t),this.inputManager.isActionJustPressed("pause")){o.debug("⏸️ Escape pressed - showing confirmation dialog",null,"Game"),this.gameState.setState(M.CONFIRM_MENU),this.audioManager.playSound("ui_click");return}this.isAnimatingHoleFall&&this.updateHoleAnimation(t),this.inputManager.isActionJustPressed("start")&&(o.debug("🎯 SPACE pressed - placing ball on bar",null,"Game"),this.placeBallOnBar(),this.audioManager.resumeContext(),this.audioManager.playSound("ui_click")),this.handlePowerUpInput();const e=this.inputManager.getLeftSideInput(),i=this.inputManager.getRightSideInput();this.tiltingBar.moveLeftSide(e),this.tiltingBar.moveRightSide(i),this.tiltingBar.update(t/1e3),this.currentLevel&&(this.currentLevel.update(t),this.updateSaucerBehavior(),this.isAnimatingHoleFall||(this.checkCollisions(),this.checkWinLoseConditions()))}this.inputManager.endFrame()}renderGameplay(){if(this.currentLevel){const t=this.currentLevel.getLevelData();for(const e of t.holes){if(!e.isActive)continue;const i=e.isGoal&&this.currentLevel?this.currentLevel.isGoalCompleted(e.id):!1;this.renderer.drawHole(e,i,this.gameState.isDebugMode())}}if(this.renderer.drawTiltingBar(this.tiltingBar),this.currentLevel){const t=this.currentLevel.getLevelData(),e=this.renderer.getContext();if(e&&(e.fillStyle="#00f0ff",m.setFont(e,"primary",12),e.textAlign="left",e.fillText(`Level: ${t.id} - ${t.name}`,10,20),e.fillText(`Score: ${this.gameState.getStateData().score}`,10,35),e.fillText(`Lives: ${this.gameState.getStateData().lives}`,10,50),this.gameState.isDebugMode())){e.fillText(`Progress: ${Math.round(this.currentLevel.getProgress()*100)}%`,10,65);const i=this.currentLevel.getCompletedGoals(),s=this.currentLevel.getRequiredGoals();e.fillText(`Goals: ${i}/${s} completed`,10,80),i<s?e.fillText("Goal: Navigate to the glowing goal holes",10,95):e.fillText("Goal: All goals completed! Level complete!",10,95)}}if(this.gameState.isDebugMode()){const t=this.renderer.getContext();t&&(t.fillStyle="#00f0ff",m.setFont(t,"primary",10),t.textAlign="center",t.fillText("SPACE: Start | Left: A(up)/Z(down) | Right: ↑(up)/↓(down)",180,580),t.fillText("Navigate upward to the goal holes - avoid falling into other holes!",180,595))}if(this.renderPowerUpEffects(),this.gameState.isSettings()){const t=this.renderer.getContext();t&&this.settingsMenu.draw(t)}}getHoleAnimationState(){return this.holeAnimationState?{scale:this.holeAnimationState.scale,opacity:this.holeAnimationState.opacity}:null}renderPowerUpEffects(){const t=this.renderer.getContext();if(!t)return;const e=this.powerUpManager.getActivePowerUps();if(this.powerUpManager.getPowerUpEffects().timeScale){t.fillStyle="rgba(0, 255, 255, 0.4)",t.fillRect(0,0,360,640);const s=.2+.1*Math.sin(Date.now()*.01);t.fillStyle=`rgba(0, 255, 255, ${s})`,t.fillRect(0,0,360,640)}this.renderPowerUpHUD(t,e)}renderPowerUpHUD(t,e){const i={[P.SLOW_MO_SURGE]:"hourglass",[P.MAGNETIC_GUIDE]:"magnet",[P.CIRCUIT_PATCH]:"chip",[P.OVERCLOCK_BOOST]:"cross",[P.SCAN_REVEAL]:"eye"},s=360,a=20,n={[P.SLOW_MO_SURGE]:{x:a+30,align:"center"},[P.MAGNETIC_GUIDE]:{x:a+80,align:"center"},[P.CIRCUIT_PATCH]:{x:s/2,align:"center"},[P.OVERCLOCK_BOOST]:{x:s-a-80,align:"center"},[P.SCAN_REVEAL]:{x:s-a-30,align:"center"}};e.forEach((r,c)=>{const h=i[c],u=r.charges,d=r.isActive,g=n[c];if(h&&this.renderer){if(d)if(c===P.SLOW_MO_SURGE){const v=Date.now()-r.startTime,L=Math.max(0,r.duration-v),A=Math.ceil(L/1e3);A<=1?this.renderer.setTint("#ff0000"):A<=2?this.renderer.setTint("#ff6600"):this.renderer.setTint("#00ff00")}else this.renderer.setTint("#00ff00");else this.renderer.setTint("#ffffff");this.renderer.drawAtlasSprite(h,g.x,590,.4),this.renderer.clearTint()}t.fillStyle=d?"#00ff00":"#ffffff",t.font="14px Interceptor",t.textAlign="center";let p=`${u}`;if(d&&c===P.SLOW_MO_SURGE){const x=Date.now()-r.startTime,y=Math.max(0,r.duration-x),v=Math.ceil(y/1e3);p=`${u}[${v}s]`,v<=1?t.fillStyle="#ff0000":v<=2?t.fillStyle="#ff6600":t.fillStyle="#00ff00"}t.fillText(p,g.x,610)}),this.gameState.isDebugMode()&&(t.fillStyle="#00f0ff",t.font="10px Interceptor",t.textAlign="left",t.fillText("Power-ups: Q(Slow-Mo) W(Magnetic) E(Shield) R(Overclock) T(Scan)",10,620))}handlePowerUpInput(){this.inputManager.isKeyJustPressed("KeyQ")&&this.powerUpManager.activatePowerUp(P.SLOW_MO_SURGE)&&(this.audioManager.playSound("powerup_activate"),o.info("⏰ Slow-Mo Surge activated",null,"Game")),this.inputManager.isKeyJustPressed("KeyW")&&this.powerUpManager.activatePowerUp(P.MAGNETIC_GUIDE)&&(this.audioManager.playSound("powerup_activate"),o.info("🧲 Magnetic Guide activated",null,"Game")),this.inputManager.isKeyJustPressed("KeyE")&&this.powerUpManager.activatePowerUp(P.CIRCUIT_PATCH)&&(this.audioManager.playSound("shield_activate"),o.info("🛡️ Circuit Patch shield activated",null,"Game")),this.inputManager.isKeyJustPressed("KeyR")&&this.powerUpManager.activatePowerUp(P.OVERCLOCK_BOOST)&&(this.audioManager.playSound("powerup_activate"),o.info("⚡ Overclock Boost activated",null,"Game")),this.inputManager.isKeyJustPressed("KeyT")&&this.powerUpManager.activatePowerUp(P.SCAN_REVEAL)&&(this.audioManager.playSound("powerup_activate"),o.info("🔍 Scan Reveal activated",null,"Game"))}placeBallOnBar(){const t=this.physicsEngine.getObjects().find(e=>e.id==="game-ball");t&&(t.position.x=this.tiltingBar.position.x,t.position.y=this.tiltingBar.leftSideHeight-20,t.previousPosition.x=t.position.x,t.previousPosition.y=t.position.y,t.velocity.x=0,t.velocity.y=0,o.debug("🎯 Ball placed on tilting bar",null,"Game"))}resetBallAfterGoal(){o.info("🎯 Goal completed - resetting ball without life loss",null,"Game"),this.powerUpManager.initializeRun(),this.tiltingBar.reset(),this.placeBallOnBar()}getPowerUpManager(){return this.powerUpManager}getIsAnimatingHoleFall(){return this.isAnimatingHoleFall}checkCollisions(){if(!this.currentLevel)return;const t=this.physicsEngine.getObjects().find(a=>a.id==="game-ball");if(!t)return;const e={x:t.position.x,y:t.position.y},i=t.radius;if(this.currentLevel.checkGoalReached(e,i)){this.handleGoalReached();const a=this.currentLevel.getGoalHoleAtPosition(e);a&&this.startHoleAnimation("game-ball",a.position,!0,!1);return}const s=this.currentLevel.checkHoleCollision(e,i,"game-ball");s&&!s.isGoal&&this.handleHoleCollision(s),this.currentLevel.checkBallFallOff(e,{x:360,y:640})&&this.handleBallFallOff()}checkWinLoseConditions(){this.currentLevel&&this.currentLevel.checkLevelComplete()&&!this.levelCompletionHandled&&(this.levelCompletionHandled=!0,this.handleLevelComplete())}handleGoalReached(){if(!this.currentLevel)return;o.info("🎯 Goal reached!",null,"Game"),this.statsManager.recordEvent({type:"goal_reached",timestamp:Date.now()}),this.gameProgress.totalGoalsReached++,this.audioManager.playSound("target");const t=this.gameState.getStateData().score;this.gameState.updateStateData({score:t+500}),o.info("💰 Goal bonus: 500 points",null,"Game");const e=this.currentLevel.getCompletedGoals(),i=this.currentLevel.getRequiredGoals();o.info(`🎯 Goals completed: ${e}/${i}`,null,"Game"),e>=i&&(o.info("🎉 All goals completed! Level complete!",null,"Game"),o.info(`🎯 Level ${this.currentLevel.getLevelData().id} complete! All ${i} goals reached!`,null,"Game"))}handleHoleCollision(t){o.info(`🕳️ Ball fell into hole: ${t.id}`,null,"Game"),t.powerUpType!==void 0?this.currentLevel&&(this.currentLevel.startSaucerBehavior(t.id,"game-ball",Date.now()),this.handlePowerUpHoleCollection(t)):(this.audioManager.playSound("zap"),this.startHoleAnimation("game-ball",t.position,!1,!1))}updateSaucerBehavior(){if(!this.currentLevel)return;const t=this.currentLevel.updateSaucerBehavior(Date.now());t&&this.kickBallFromSaucer(t)}kickBallFromSaucer(t){const e=this.physicsEngine.getObjects().find(s=>s.id===t.ballId);if(!e)return;const i={x:t.direction.x*t.force,y:t.direction.y*t.force};e.previousPosition.x=e.position.x-i.x*.016,e.previousPosition.y=e.position.y-i.y*.016,this.audioManager.playSound("powerup_collect"),o.info(`🚀 Ball kicked from saucer with force: ${t.force} from hole: ${t.holeId}`,null,"Game")}handlePowerUpHoleCollection(t){t.powerUpType&&(o.info(`🎁 Power-up collected from hole: ${t.powerUpType}`,null,"Game"),this.powerUpManager.addCharges(t.powerUpType,1),this.audioManager.playSound("powerup_collect"),this.statsManager.recordEvent({type:"powerup_collected",timestamp:Date.now(),data:{powerUpType:t.powerUpType,source:"hole"}}),o.info(`⚡ Added charge to ${t.powerUpType} from power-up hole`,null,"Game"))}handleBallFallOff(){if(o.warn("💀 Ball fell off screen!",null,"Game"),this.powerUpManager.useShield()){o.info("🛡️ Shield used to prevent ball loss!",null,"Game"),this.audioManager.playSound("shield_break"),this.placeBallOnBar();return}this.statsManager.recordEvent({type:"ball_lost",timestamp:Date.now()}),this.gameProgress.totalBallsLost++;const t=this.gameState.getStateData().lives;t>1?(this.gameState.updateStateData({lives:t-1}),o.info(`💔 Lives remaining: ${t-1}`,null,"Game"),this.powerUpManager.initializeRun(),this.tiltingBar.reset(),this.placeBallOnBar()):this.handleGameOver()}handleLevelComplete(){if(!this.currentLevel)return;o.info("🏆 Level completed!",null,"Game");const t=this.currentLevel.getLevelData().id,e=this.currentLevel.calculateScore();this.statsManager.recordEvent({type:"level_complete",timestamp:Date.now(),data:{levelId:t,score:e,completionTime:Date.now()-this.sessionStartTime}}),this.gameProgress.completedLevels.add(t),this.gameProgress.highestLevel=Math.max(this.gameProgress.highestLevel,t),this.audioManager.playSound("level_complete");const i=this.gameState.getStateData().score;this.gameState.updateStateData({score:i+e}),o.info(`🎉 Level bonus: ${e}`,null,"Game");const s=this.currentLevel.getLevelData().id+1;this.levelManager.unlockLevel(s),this.levelManager.getLevelData(s)?this.loadNextLevel(s):this.handleGameComplete()}loadNextLevel(t){o.info(`🔄 Loading level ${t}...`,null,"Game"),this.statsManager.recordEvent({type:"level_start",timestamp:Date.now(),data:{levelId:t}}),this.currentLevel=this.levelManager.loadLevel(t),this.currentLevel&&(this.currentLevel.start(),this.gameState.updateStateData({currentLevel:t}),this.levelCompletionHandled=!1,this.tiltingBar.reset(),this.placeBallOnBar(),o.info(`🎯 Level ${t} loaded and started`,null,"Game"))}handleGameOver(){o.warn("💀 Game Over!",null,"Game"),this.statsManager.recordEvent({type:"death",timestamp:Date.now()}),this.gameState.setState(M.GAME_OVER),this.saveGameProgress(),this.audioManager.playSound("game_over"),setTimeout(()=>{this.playMenuMusic()},1e3),setTimeout(()=>{this.gameState.isState(M.GAME_OVER)&&(o.info("🏠 Auto-returning to menu...",null,"Game"),this.gameState.reset())},5e3)}handleGameComplete(){o.info("🎊 Game completed! All levels finished!",null,"Game"),this.statsManager.recordEvent({type:"game_complete",timestamp:Date.now()}),setTimeout(()=>{this.playMenuMusic()},1e3),setTimeout(()=>{o.info("🏠 Returning to main menu...",null,"Game"),this.gameState.reset()},2e3)}pause(){o.info("⏸️ Pausing Circuit Breaker...",null,"Game"),this.saveGameProgress(),this.gameLoop.pause()}resume(){o.info("▶️ Resuming Circuit Breaker...",null,"Game"),this.gameLoop.resume()}stop(){o.info("⏹️ Stopping Circuit Breaker...",null,"Game"),this.statsManager.recordEvent({type:"session_end",timestamp:Date.now()}),this.gameLoop.stop(),this.isRunning=!1}getGameState(){return this.gameState}isGameRunning(){return this.isRunning&&this.gameLoop.isGameLoopRunning()}startNewGame(){o.info("🎮 Starting new game...",null,"Game"),this.statsManager.recordEvent({type:"game_start",timestamp:Date.now()}),this.gameProgress.gamesPlayed++,this.sessionStartTime=Date.now(),this.gameState.setState(M.PLAYING),this.gameState.updateStateData({currentLevel:1,score:0,lives:3}),this.currentLevel=this.levelManager.loadLevel(1),this.currentLevel&&(this.currentLevel.start(),this.levelCompletionHandled=!1,o.info("🎯 Level 1 loaded and started",null,"Game")),this.tiltingBar.reset(),this.placeBallOnBar(),this.playGameplayMusic(),o.info("🚀 New game started successfully!",null,"Game")}updateHoleAnimation(t){if(!this.holeAnimationState)return;const e=Date.now()-this.holeAnimationState.startTime,i=Math.min(e/this.holeAnimationState.duration,1),s=1-Math.pow(1-i,3);this.holeAnimationState.scale=1-s*.9,this.holeAnimationState.opacity=1-s*.7;const a=this.physicsEngine.getObjects().find(n=>{var r;return n.id===((r=this.holeAnimationState)==null?void 0:r.ballId)});if(a){const n=this.holeAnimationState.startPosition,r=this.holeAnimationState.holePosition;if(i<.3){const c=i/.3;a.position.x=n.x+(r.x-n.x)*c,a.position.y=n.y+(r.y-n.y)*c}else{const c=(i-.3)/.7;a.position.x=r.x,a.position.y=r.y+c*200}a.previousPosition.x=a.position.x,a.previousPosition.y=a.position.y,a.velocity.x=0,a.velocity.y=0}i>=1&&this.completeHoleAnimation()}startHoleAnimation(t,e,i=!1,s=!1){const a=this.physicsEngine.getObjects().find(n=>n.id===t);a&&(o.debug(`🎬 Starting hole animation for ball: ${t} (goal: ${i}, power-up: ${s})`,null,"Game"),this.isAnimatingHoleFall=!0,this.holeAnimationState={ballId:t,holePosition:e,startTime:Date.now(),duration:500,startPosition:{x:a.position.x,y:a.position.y},scale:1,opacity:1,isGoalHole:i,isPowerUpHole:s})}completeHoleAnimation(){if(!this.holeAnimationState)return;const t=this.holeAnimationState.isGoalHole,e=this.holeAnimationState.isPowerUpHole;o.debug(`🎬 Hole animation complete (goal: ${t}, power-up: ${e})`,null,"Game"),this.isAnimatingHoleFall=!1,this.holeAnimationState=null,t?this.resetBallAfterGoal():e?this.resetBallAfterGoal():this.handleBallFallOff()}hasAnyInput(){const t=this.inputManager.getInputState(),e=Object.values(t.keys).some(s=>s),i=t.mouse.isDown;return e||i}startAttractMode(){o.debug("🎬 Entering attract mode",null,"Game"),this.gameState.setState(M.ATTRACT_MODE),this.attractModeTimer=0,this.menuTimer=0,this.startAttractModeLevel()}exitAttractMode(){o.debug("🏠 Exiting attract mode",null,"Game"),this.gameState.setState(M.MENU),this.attractModeTimer=0,this.menuTimer=0,this.gameState.reset(),this.audioManager.playSound("ui_click"),this.playMenuMusic()}updateAttractMode(t){this.attractModeTimer+=t;const e=this.attractModeTimer/1e3,i=Math.sin(e*.8)*.7,s=Math.cos(e*.6)*.8;this.tiltingBar.moveLeftSide(i),this.tiltingBar.moveRightSide(s),this.tiltingBar.update(t/1e3),Math.floor(e)%8===0&&e%8<.1&&this.placeBallOnBar(),this.currentLevel&&(this.currentLevel.update(t),this.checkCollisions(),this.checkWinLoseConditions()),this.attractModeTimer>3e4&&this.exitAttractMode()}startAttractModeLevel(){try{this.currentLevel=this.levelManager.loadLevel(1),this.currentLevel?(o.debug("🎮 Starting attract mode level",null,"Game"),this.currentLevel.start(),this.tiltingBar.reset(),this.placeBallOnBar(),o.debug("✅ Attract mode level started successfully",null,"Game")):(o.error("❌ Failed to load attract mode level",null,"Game"),this.exitAttractMode())}catch(t){o.error("❌ Error starting attract mode level:",t,"Game"),this.exitAttractMode()}}playMenuMusic(){return b(this,null,function*(){try{yield this.audioManager.fadeToMusic("02-Delorean_Time.mp3",1),o.debug("🎵 Menu music started (02-Delorean_Time.mp3)",null,"Game")}catch(t){o.error("❌ Error playing menu music:",t,"Game")}})}playGameplayMusic(){return b(this,null,function*(){try{yield this.audioManager.fadeToMusic("Dead_Space.mp3",1),o.debug("🎵 Gameplay music started",null,"Game")}catch(t){o.error("❌ Error playing gameplay music:",t,"Game")}})}getLoadingProgress(){return this.loadingProgress}getLoadingStatus(){return this.loadingStatus}isLoadingComplete(){return this.loadingComplete}startAssetLoading(){return b(this,null,function*(){o.info("📦 Starting asset loading...",null,"Game"),this.assetsToLoad=["Engage_II.mp3","Dead_Space.mp3","atlas_01.json","atlas_01.png","powerup_atlas_01.json","powerup_atlas_01.png"],this.loadedAssets=0,this.loadingProgress=0,this.loadingStatus="Loading audio files...",this.loadingComplete=!1;try{yield this.loadAudioAssets(),this.loadingStatus="Loading sprite atlas...",yield this.loadSpriteAssets(),this.loadingStatus="Loading fonts...",yield this.loadFonts(),this.loadingProgress=100,this.loadingStatus="Press any key to continue...",this.loadingComplete=!0,o.info("✅ All assets loaded successfully",null,"Game")}catch(t){o.error("❌ Error loading assets:",t,"Game"),this.loadingStatus="Loading failed - Press any key to continue...",this.loadingComplete=!0}})}loadAudioAssets(){return b(this,null,function*(){const t=this.assetsToLoad.filter(e=>e.endsWith(".mp3"));for(let e=0;e<t.length;e++){const i=t[e];this.loadingStatus=`Loading ${i}...`;try{yield this.audioManager.loadMusic(i),this.loadedAssets++,this.updateLoadingProgress(),o.debug(`✅ Loaded audio: ${i}`,null,"Game")}catch(s){o.warn(`⚠️ Failed to load audio: ${i}`,s,"Game"),this.loadedAssets++,this.updateLoadingProgress()}yield this.delay(100)}})}loadSpriteAssets(){return b(this,null,function*(){const t=this.assetsToLoad.filter(e=>e.endsWith(".json")||e.endsWith(".png"));for(let e=0;e<t.length;e++){const i=t[e];this.loadingStatus=`Loading ${i}...`,this.loadedAssets++,this.updateLoadingProgress(),yield this.delay(200)}o.info("✅ Sprite assets loading simulation completed",null,"Game")})}loadFonts(){return b(this,null,function*(){this.loadingStatus="Initializing fonts...",yield this.delay(300),o.debug("✅ Fonts initialized",null,"Game")})}updateLoadingProgress(){this.loadingProgress=this.loadedAssets/this.assetsToLoad.length*100}loadGameProgress(){try{const t=this.storageManager.loadProgress(this.currentSaveSlot);t?(this.gameProgress=t,this.achievementManager.loadAchievements(Array.from(t.achievements)),this.audioManager.setMasterVolume(t.settings.masterVolume),this.audioManager.setMusicVolume(t.settings.musicVolume),this.audioManager.setSFXVolume(t.settings.sfxVolume),this.audioManager.setEnabled(t.settings.audioEnabled),o.info(`📂 Loaded game progress from slot ${this.currentSaveSlot}`,null,"Game")):(this.gameProgress=this.storageManager.createNewProgress(),o.info("🆕 Created new game progress",null,"Game"))}catch(t){o.error("❌ Failed to load game progress:",t,"Game"),this.gameProgress=this.storageManager.createNewProgress()}}saveGameProgress(){try{this.updateGameProgress();const t=this.storageManager.saveProgress(this.gameProgress,this.currentSaveSlot);return t&&o.debug("💾 Game progress saved",null,"Game"),t}catch(t){return o.error("❌ Failed to save game progress:",t,"Game"),!1}}updateGameProgress(){if(!this.gameProgress)return;const t=Date.now();this.sessionStartTime>0&&(this.gameProgress.playTime+=t-this.sessionStartTime,this.sessionStartTime=t);const e=this.audioManager.getConfig();this.gameProgress.settings={masterVolume:e.masterVolume,musicVolume:e.musicVolume,sfxVolume:e.sfxVolume,audioEnabled:e.enabled},this.gameProgress.achievements=new Set(this.achievementManager.getUnlockedAchievementIds())}checkAchievements(){if(!this.gameProgress)return;const t=this.gameState.getStateData(),e=Date.now(),i=this.sessionStartTime>0?e-this.sessionStartTime:0,s=this.gameProgress.playTime+i,a={currentLevel:t.currentLevel||1,totalScore:t.score||0,lives:t.lives||3,goalsReached:this.gameProgress.totalGoalsReached,levelsCompleted:this.gameProgress.completedLevels.size,gamesPlayed:this.gameProgress.gamesPlayed,totalPlayTime:s,ballsLost:this.gameProgress.totalBallsLost,perfectLevels:0,quickCompletions:0};this.achievementManager.checkAchievements(a)}autoSave(){const t=Date.now();if(t-this.lastAutoSave<3e4)return!1;const e=this.saveGameProgress();return e&&(this.lastAutoSave=t),e}completeLoading(){return b(this,null,function*(){o.info("🎯 Loading complete - transitioning to menu",null,"Game"),this.gameState.setState(M.MENU),yield this.audioManager.resumeContext(),this.playMenuMusic()})}delay(t){return new Promise(e=>setTimeout(e,t))}openSettings(){this.gameState.setState(M.SETTINGS);const t=this.gameState.isPaused();this.settingsMenu=new et({audioManager:this.audioManager,onClose:()=>this.closeSettings(),onBackToMenu:()=>this.backToMenuFromSettings(),isFromPauseMenu:t}),this.settingsMenu.show(),this.settingsMenu.updateVolumeDisplays(),o.info(`⚙️ Settings menu opened ${t?"from pause menu":"from main menu"}`,null,"Game")}closeSettings(){this.settingsMenu.hide(),this.gameState.isPaused()?this.gameState.setState(M.PAUSED):this.gameState.setState(M.MENU),o.info("⚙️ Settings menu closed",null,"Game")}backToMenuFromSettings(){this.settingsMenu.hide(),this.gameState.setState(M.MENU),o.info("🏠 Returned to main menu from settings",null,"Game")}openSaveLoadMenu(){o.info("💾 Opening save/load menu",null,"Game"),this.gameState.setState(M.SAVE_LOAD),this.saveLoadMenu.show()}closeSaveLoadMenu(){o.info("💾 Closing save/load menu",null,"Game"),this.saveLoadMenu.hide(),this.gameState.isState(M.SAVE_LOAD)&&this.gameState.setState(M.MENU)}loadGameFromSlot(t){o.info(`📂 Loading game from slot ${t}`,null,"Game");const e=this.storageManager.loadProgress(t);e?(this.gameProgress=e,this.currentSaveSlot=t,this.achievementManager.loadAchievements(Array.from(e.achievements)),this.audioManager.setMasterVolume(e.settings.masterVolume),this.audioManager.setMusicVolume(e.settings.musicVolume),this.audioManager.setSFXVolume(e.settings.sfxVolume),this.audioManager.setEnabled(e.settings.audioEnabled),this.startNewGame()):o.warn(`⚠️ No save data found in slot ${t}`,null,"Game")}startNewGameInSlot(t){o.info(`🆕 Starting new game in slot ${t}`,null,"Game"),this.gameProgress=this.storageManager.createNewProgress(),this.currentSaveSlot=t,this.startNewGame()}deleteSaveSlot(t){o.info(`🗑️ Deleting save slot ${t}`,null,"Game"),this.storageManager.deleteSaveSlot(t)}openStatsMenu(){o.info("📊 Opening stats menu...",null,"Game"),this.gameState.setState(M.STATS)}closeStatsMenu(){o.info("📊 Closing stats menu...",null,"Game"),this.gameState.setState(M.MENU)}}let T=null;function it(){return b(this,null,function*(){try{o.info("🚀 Circuit Breaker - Loading...",null,"Main");const f=document.getElementById("game-container");if(!f)throw new Error("Game container not found");f.innerHTML="";const t=document.createElement("canvas");t.id="game-canvas",t.width=360,t.height=640,f.appendChild(t),T=new At,yield T.init(),T.start(),window.game=T,o.info("✅ Circuit Breaker loaded successfully",null,"Main")}catch(f){o.error("❌ Failed to load Circuit Breaker:",f,"Main"),Ct("Failed to load game. Please refresh the page.")}})}function Ct(f){const t=document.getElementById("game-container");t&&(t.innerHTML=`
      <div style="text-align: center; color: #b600f9;">
        <h1>Circuit Breaker</h1>
        <p>Error: ${f}</p>
        <p>Please refresh the page to try again.</p>
      </div>
    `)}function Tt(){o.debug("📱 Window resized",null,"Main")}function Lt(){document.hidden?(o.debug("👁️ Page hidden - pausing game",null,"Main"),T==null||T.pause()):(o.debug("👁️ Page visible - resuming game",null,"Main"),T==null||T.resume())}function Et(){o.debug("👋 Page unloading - stopping game",null,"Main"),T==null||T.stop()}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",it):it();window.addEventListener("resize",Tt);document.addEventListener("visibilitychange",Lt);window.addEventListener("beforeunload",Et);
//# sourceMappingURL=index-302b37c8.js.map
