var ye=Object.defineProperty,ve=Object.defineProperties;var Me=Object.getOwnPropertyDescriptors;var ue=Object.getOwnPropertySymbols;var we=Object.prototype.hasOwnProperty,be=Object.prototype.propertyIsEnumerable;var B=Math.pow,se=(d,e,t)=>e in d?ye(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t,v=(d,e)=>{for(var t in e||(e={}))we.call(e,t)&&se(d,t,e[t]);if(ue)for(var t of ue(e))be.call(e,t)&&se(d,t,e[t]);return d},$=(d,e)=>ve(d,Me(e));var l=(d,e,t)=>(se(d,typeof e!="symbol"?e+"":e,t),t);var C=(d,e,t)=>new Promise((i,s)=>{var a=c=>{try{r(t.next(c))}catch(h){s(h)}},n=c=>{try{r(t.throw(c))}catch(h){s(h)}},r=c=>c.done?i(c.value):Promise.resolve(c.value).then(a,n);r((t=t.apply(d,e)).next())});(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(s){if(s.ep)return;s.ep=!0;const a=t(s);fetch(s.href,a)}})();var me=(d=>(d[d.DEBUG=0]="DEBUG",d[d.INFO=1]="INFO",d[d.WARN=2]="WARN",d[d.ERROR=3]="ERROR",d))(me||{});const j=class j{constructor(){l(this,"logLevel",1);l(this,"logs",[]);l(this,"maxLogs",1e3);l(this,"isProduction",!1);this.isProduction=!0,this.isProduction&&(this.logLevel=2)}static getInstance(){return j.instance||(j.instance=new j),j.instance}setLogLevel(e){this.logLevel=e}debug(e,t,i){this.log(0,e,t,i)}info(e,t,i){this.log(1,e,t,i)}warn(e,t,i){this.log(2,e,t,i)}error(e,t,i){this.log(3,e,t,i)}log(e,t,i,s){if(e<this.logLevel)return;const a={timestamp:new Date().toISOString(),level:e,message:t,data:i,context:s};this.logs.push(a),this.logs.length>this.maxLogs&&this.logs.shift();const n=this.formatMessage(a);switch(e){case 0:console.debug(n,i||"");break;case 1:console.info(n,i||"");break;case 2:console.warn(n,i||"");break;case 3:console.error(n,i||"");break}}formatMessage(e){const t=me[e.level],i=e.context?`[${e.context}]`:"";return`[${e.timestamp}] ${t}${i}: ${e.message}`}getLogs(){return[...this.logs]}clearLogs(){this.logs=[]}exportLogs(){return JSON.stringify(this.logs,null,2)}getLogsByLevel(e){return this.logs.filter(t=>t.level===e)}getRecentLogs(e){return this.logs.slice(-e)}};l(j,"instance");let oe=j;const o=oe.getInstance();var b=(d=>(d.MENU="menu",d.HOW_TO_PLAY="how_to_play",d.ATTRACT_MODE="attract_mode",d.PLAYING="playing",d.PAUSED="paused",d.CONFIRM_MENU="confirm_menu",d.SETTINGS="settings",d.SAVE_LOAD="save_load",d.STATS="stats",d.WIN_SCREEN="win_screen",d.LEVEL_COMPLETE="level_complete",d.GAME_OVER="game_over",d.LOADING="loading",d))(b||{});class Pe{constructor(){l(this,"currentState","menu");l(this,"stateData",{currentLevel:1,score:0,totalScore:0,lives:3,isPaused:!1,isGameOver:!1,debugMode:!1,activePowerUps:[],powerUpEffects:{},levelScores:[],currentLevelStartTime:void 0});o.info("📊 GameState initialized",null,"GameState")}getCurrentState(){return this.currentState}setState(e){const t=this.currentState;this.currentState=e,o.info(`🔄 Game state changed: ${t} → ${e}`,null,"GameState")}getStateData(){return v({},this.stateData)}updateStateData(e){this.stateData=v(v({},this.stateData),e)}isState(e){return this.currentState===e}isPlaying(){return this.currentState==="playing"}isPaused(){return this.currentState==="paused"}isGameOver(){return this.currentState==="game_over"}isConfirmingMenu(){return this.currentState==="confirm_menu"}isAttractMode(){return this.currentState==="attract_mode"}isLoading(){return this.currentState==="loading"}isSettings(){return this.currentState==="settings"}isSaveLoad(){return this.currentState==="save_load"}isStats(){return this.currentState==="stats"}isHowToPlay(){return this.currentState==="how_to_play"}isWinScreen(){return this.currentState==="win_screen"}isDebugMode(){return this.stateData.debugMode}toggleDebugMode(){this.stateData.debugMode=!this.stateData.debugMode,o.info(`🐛 Debug mode ${this.stateData.debugMode?"enabled":"disabled"}`,null,"GameState")}setDebugMode(e){this.stateData.debugMode=e,o.info(`🐛 Debug mode ${e?"enabled":"disabled"}`,null,"GameState")}updateTotalScore(e){this.stateData.totalScore=e}addLevelScore(e){this.stateData.levelScores.push(e),this.stateData.totalScore+=e.levelPoints}getTotalScore(){return this.stateData.totalScore}getLevelScores(){return[...this.stateData.levelScores]}setCurrentLevelStartTime(e){this.stateData.currentLevelStartTime=e}getCurrentLevelStartTime(){return this.stateData.currentLevelStartTime}reset(){this.currentState="menu",this.stateData={currentLevel:1,score:0,totalScore:0,lives:3,isPaused:!1,isGameOver:!1,debugMode:!1,activePowerUps:[],powerUpEffects:{},levelScores:[],currentLevelStartTime:void 0},o.info("🔄 Game state reset",null,"GameState")}}const J=class J{constructor(){l(this,"fontsLoaded",!1);l(this,"fonts",{primary:'Interceptor, "Courier New", Monaco, Consolas, monospace',display:'Cyberpunks, Interceptor, "Courier New", monospace',mono:'Interceptor, "Courier New", Monaco, Consolas, monospace'});this.loadFonts()}static getInstance(){return J.instance||(J.instance=new J),J.instance}loadFonts(){return C(this,null,function*(){try{if("fonts"in document){const e=[];try{const t=new FontFace("Cyberpunks",'url("./assets/fonts/Cyberpunks.otf")'),i=new FontFace("Cyberpunks",'url("./assets/fonts/Cyberpunks Italic.otf")',{style:"italic"});e.push(t.load(),i.load())}catch(t){o.warn("⚠️ Cyberpunks font creation failed:",t,"FontManager")}try{const t=new FontFace("Interceptor",'url("./assets/fonts/Interceptor.otf")'),i=new FontFace("Interceptor",'url("./assets/fonts/Interceptor Italic.otf")',{style:"italic"}),s=new FontFace("Interceptor",'url("./assets/fonts/Interceptor Bold.otf")',{weight:"bold"}),a=new FontFace("Interceptor",'url("./assets/fonts/Interceptor Bold Italic.otf")',{weight:"bold",style:"italic"});e.push(t.load(),i.load(),s.load(),a.load())}catch(t){o.warn("⚠️ Interceptor font creation failed:",t,"FontManager")}if(e.length>0){const t=yield Promise.allSettled(e);let i=0;t.forEach((s,a)=>{if(s.status==="fulfilled")try{document.fonts.add(s.value),i++}catch(n){o.warn(`⚠️ Failed to add font ${a} to document:`,n,"FontManager")}else o.warn(`⚠️ Font ${a} failed to load:`,s.reason,"FontManager")}),i>0?(this.fontsLoaded=!0,o.info(`🎨 Loaded ${i}/${e.length} custom fonts successfully`,null,"FontManager")):(this.fontsLoaded=!1,o.warn("⚠️ No custom fonts loaded, using fallbacks",null,"FontManager"))}else this.fontsLoaded=!1,o.warn("⚠️ No fonts could be created, using fallbacks",null,"FontManager")}else this.fontsLoaded=!1,o.warn("⚠️ Font Loading API not available, using fallbacks",null,"FontManager")}catch(e){o.warn("⚠️ Font loading completely failed, using fallbacks:",e,"FontManager"),this.fontsLoaded=!1}})}getFont(e,t,i="normal"){const s=this.fonts[e];return`${i} ${t}px ${s}`}setFont(e,t,i,s="normal"){e.font=this.getFont(t,i,s)}areFontsLoaded(){return this.fontsLoaded}preloadFonts(){return C(this,null,function*(){this.fontsLoaded||(yield this.loadFonts())})}getFontTypes(){return Object.keys(this.fonts)}isFontAvailable(e){return"fonts"in document?document.fonts.check(`12px ${e}`):!1}};l(J,"instance");let re=J;const m=re.getInstance();class Te{constructor(){l(this,"animationId",null);l(this,"lastTime",0);l(this,"accumulator",0);l(this,"timestep",1e3/60);l(this,"isRunning",!1);l(this,"isPaused",!1);l(this,"renderer",null);l(this,"physicsEngine",null);l(this,"game",null);l(this,"fpsUpdateTime",0);l(this,"frameCount",0);l(this,"currentFPS",60);l(this,"FPS_UPDATE_INTERVAL",1e3);o.info("🔄 GameLoop initialized",null,"GameLoop")}start(e,t,i,s){if(this.isRunning){o.warn("⚠️ Game loop is already running");return}this.renderer=t||null,this.physicsEngine=i||null,this.game=s||null,this.isRunning=!0,this.isPaused=!1,this.lastTime=performance.now(),this.accumulator=0,o.info("▶️ Game loop started",null,"GameLoop"),this.gameLoop(e)}gameLoop(e){if(!this.isRunning)return;const t=performance.now(),i=t-this.lastTime;this.lastTime=t,this.updateFPSTracking(t);let s=i;if(this.game&&this.game.getPowerUpManager){const a=this.game.getPowerUpManager().getPowerUpEffects();a.timeScale&&(s=i*a.timeScale,console.log(`⏰ GameLoop: timeScale=${a.timeScale}, deltaTime=${i}ms -> ${s}ms`))}for(this.accumulator+=s;this.accumulator>=this.timestep;)this.isPaused||this.update(e,this.timestep),this.accumulator-=this.timestep;this.render(e),this.animationId=requestAnimationFrame(()=>this.gameLoop(e))}update(e,t){this.game&&this.game.update&&this.game.update(t),this.physicsEngine&&this.physicsEngine.update(t)}render(e){if(this.renderer)if(this.renderer.clear(),e.isLoading())this.renderLoading(e);else if(e.isPlaying())this.renderGameplay(e),this.renderAchievementNotification();else if(e.isAttractMode())this.renderAttractMode(e);else if(e.isState(b.SETTINGS)){const t=this.game,i=this.renderer.getContext();if(!i||!t||typeof t.settingsMenu=="undefined"||!t.settingsMenu)return;t.settingsMenu.isFromPauseMenu?this.renderPaused():this.renderMenu(e),t.settingsMenu.draw(i)}else if(e.isState(b.SAVE_LOAD)){const t=this.game,i=this.renderer.getContext();if(!i||!t||typeof t.saveLoadMenu=="undefined"||!t.saveLoadMenu)return;this.renderMenu(e),t.saveLoadMenu.render(i)}else if(e.isState(b.STATS)){const t=this.game,i=this.renderer.getContext();if(!i||!t||typeof t.statsMenu=="undefined"||!t.statsMenu)return;this.renderMenu(e),t.statsMenu.render(i)}else if(e.isState(b.WIN_SCREEN)){const t=this.game,i=this.renderer.getContext();if(!i||!t||typeof t.winScreen=="undefined"||!t.winScreen)return;this.renderGameplay(e),t.winScreen.render(i)}else e.isState(b.MENU)?this.renderMenu(e):e.isState(b.HOW_TO_PLAY)?this.renderHowToPlay(e):e.isState(b.PAUSED)?this.renderPaused():e.isState(b.CONFIRM_MENU)?this.renderConfirmDialog(e):e.isState(b.GAME_OVER)&&this.renderGameOver(e)}renderGameplay(e){if(!this.renderer)return;const t=this.renderer.getContext();if(t){if(this.renderer.drawBackground(),this.physicsEngine){for(const i of this.physicsEngine.getObjects()){if(i.id==="game-ball"||i.id.includes("ball"))continue;t.beginPath();const s=i.position||{x:i.x||0,y:i.y||0},a=i.radius||10;t.arc(s.x,s.y,a,0,Math.PI*2),i.isStatic?(t.fillStyle="#ff0066",t.shadowColor="#ff0066"):(t.fillStyle="#00ffff",t.shadowColor="#00ffff"),t.shadowBlur=16,t.fill(),t.shadowBlur=0,t.closePath(),e.isDebugMode()&&this.physicsEngine.getDebug&&this.physicsEngine.getDebug()&&(!i.isStatic&&i.velocity&&(t.beginPath(),t.moveTo(s.x,s.y),t.lineTo(s.x+i.velocity.x*3,s.y+i.velocity.y*3),t.strokeStyle="#ffff00",t.lineWidth=1,t.stroke(),t.closePath()),t.fillStyle="#ffffff",t.font="8px Courier New",t.textAlign="center",t.fillText(i.id,s.x,s.y-a-5))}if(e.isDebugMode()&&this.physicsEngine.getDebug&&this.physicsEngine.getDebug()){if(this.physicsEngine.getCollisionManifolds){const i=this.physicsEngine.getCollisionManifolds();for(const s of i)t.beginPath(),t.arc(s.contactPoint.x,s.contactPoint.y,2,0,Math.PI*2),t.fillStyle="#ff0000",t.fill(),t.closePath()}if(this.physicsEngine.getConstraints){const i=this.physicsEngine.getConstraints();for(const s of i)s.type==="distance"&&s.objectB&&(t.beginPath(),t.moveTo(s.objectA.position.x,s.objectA.position.y),t.lineTo(s.objectB.position.x,s.objectB.position.y),t.strokeStyle="#00ff00",t.lineWidth=1,t.setLineDash([3,3]),t.stroke(),t.setLineDash([]),t.closePath())}}}if(e.isDebugMode()&&(t.fillStyle="#00ffff",t.font="20px Courier New",t.textAlign="center",t.fillText("Circuit Breaker",180,40),t.font="12px Courier New",t.fillText("Robust Physics System Active",180,60)),this.game&&this.game.renderGameplay&&this.game.renderGameplay(),this.physicsEngine){for(const i of this.physicsEngine.getObjects())if(i.id==="game-ball"||i.id.includes("ball")){if(this.renderer){const s=this.game&&this.game.getHoleAnimationState&&this.game.getHoleAnimationState()||void 0,a=this.game&&this.game.getBallSpriteForSaucerState?this.game.getBallSpriteForSaucerState(i.id):"ball_normal";this.renderer.drawChromeBall(i,s,a)}if(e.isDebugMode()&&this.physicsEngine.getDebug&&this.physicsEngine.getDebug()){const s=i.position||{x:i.x||0,y:i.y||0},a=i.radius||10;!i.isStatic&&i.velocity&&(t.beginPath(),t.moveTo(s.x,s.y),t.lineTo(s.x+i.velocity.x*3,s.y+i.velocity.y*3),t.strokeStyle="#ffff00",t.lineWidth=1,t.stroke(),t.closePath()),t.fillStyle="#ffffff",t.font="8px Courier New",t.textAlign="center",t.fillText(i.id,s.x,s.y-a-5)}}}if(e.isDebugMode()&&this.physicsEngine){const i=this.physicsEngine.getObjects(),s=i.filter(n=>!n.isStatic).length,a=i.filter(n=>n.isStatic).length;if(t.font="10px Courier New",t.textAlign="left",t.fillStyle="#00ffff",t.fillText(`Objects: ${s} dynamic, ${a} static`,10,610),t.fillText(`Gravity: ${this.physicsEngine.getGravity()}`,10,625),this.physicsEngine.getCollisionManifolds){const n=this.physicsEngine.getCollisionManifolds().length;t.fillText(`Collisions: ${n}`,200,610)}t.fillText("Physics: Optimized Verlet (1 substep)",10,595)}}}renderLoading(e){if(!this.renderer)return;const t=this.renderer.getContext();if(!t)return;this.renderer.drawBackground();const i=this.game&&this.game.getLoadingProgress?this.game.getLoadingProgress():0,s=this.game&&this.game.getLoadingStatus?this.game.getLoadingStatus():"Initializing...",a=this.game&&this.game.isLoadingComplete?this.game.isLoadingComplete():!1;t.save(),t.shadowColor="#00f0ff",t.shadowBlur=20;const n=Date.now(),r=.5+.5*Math.sin(n/1e3);t.strokeStyle=`rgba(0, 240, 255, ${r})`,t.lineWidth=3,m.setFont(t,"display",72,"bold"),t.textAlign="center",t.strokeText("CIRCUIT",180,120),t.strokeText("BREAKER",180,180),t.fillStyle="#b600f9",t.fillText("CIRCUIT",180,120),t.fillText("BREAKER",180,180),t.restore();const c=Date.now(),h=.6+.4*Math.sin(c/600);t.save(),t.globalAlpha=h,t.fillStyle="#00f0ff",m.setFont(t,"primary",18,"bold"),t.textAlign="center",t.fillText("LOADING...",180,260),t.restore();const f=300,u=20,g=(360-f)/2,p=300;t.fillStyle="#222222",t.fillRect(g,p,f,u),t.strokeStyle="#00f0ff",t.lineWidth=2,t.strokeRect(g,p,f,u);const M=i/100*(f-4);if(M>0&&(t.fillStyle="#00f0ff",t.fillRect(g+2,p+2,M,u-4)),t.fillStyle="#ffffff",m.setFont(t,"primary",14),t.textAlign="center",t.fillText(`${Math.round(i)}%`,180,345),a){const S=.6+.4*Math.sin(c/400);t.save(),t.globalAlpha=S,t.shadowColor="#00ff99",t.shadowBlur=10,t.fillStyle="#00ff99",m.setFont(t,"primary",14,"bold"),t.textAlign="center",t.fillText(s,180,370),t.restore()}else{t.fillStyle="#888888",m.setFont(t,"primary",12),t.textAlign="center",t.fillText(s,180,370);const S=30,w=180,L=400,T=c/100%(Math.PI*2);t.save(),t.translate(w,L),t.rotate(T),t.strokeStyle="#00f0ff",t.lineWidth=3,t.beginPath(),t.arc(0,0,S/2,0,Math.PI*1.5),t.stroke(),t.restore()}t.fillStyle="#444444",m.setFont(t,"primary",8),t.fillText("Circuit Breaker v0.6.0",180,590),t.fillText("Chris Van Doren - July 2025",180,605)}renderAttractMode(e){if(!this.renderer)return;this.renderGameplay(e);const t=this.renderer.getContext();if(!t)return;t.save(),t.fillStyle="rgba(0, 0, 0, 0.3)",t.fillRect(0,0,360,640),t.save(),t.shadowColor="#00f0ff",t.shadowBlur=20;let i=.1;if(this.game&&this.game.getAudioLevel){const n=this.game.getAudioLevel()*8;i=Math.min(1,i+n)}t.strokeStyle=`rgba(0, 240, 255, ${i})`;let s=0;i>.4&&(s=(i-.4)/.75*12),t.lineWidth=s,m.setFont(t,"display",48,"bold"),t.textAlign="center",t.strokeText("CIRCUIT",180,60),t.strokeText("BREAKER",180,100),t.fillStyle="#b600f9",t.fillText("CIRCUIT",180,60),t.fillText("BREAKER",180,100),t.restore(),t.fillStyle="#ffffff",m.setFont(t,"primary",14),t.textAlign="center",t.fillText("CIRCUIT BREAKER DEMO",180,120),t.fillText("Press any key to return to menu",180,140),t.fillStyle="#888888",m.setFont(t,"primary",10),t.fillText("A/Z - Left Side Up/Down",180,580),t.fillText("↑/↓ - Right Side Up/Down",180,595),t.fillText("SPACE - Start/Place Ball",180,610),t.fillText("D - Toggle Debug Mode",180,625),t.restore()}renderMenu(e){if(!this.renderer)return;const t=this.renderer.getContext();if(!t)return;this.renderer.drawBackground(),t.strokeStyle="#003366",t.lineWidth=1,t.globalAlpha=.3;for(let S=0;S<=360;S+=20)t.beginPath(),t.moveTo(S,0),t.lineTo(S,640),t.stroke();for(let S=0;S<=640;S+=20)t.beginPath(),t.moveTo(0,S),t.lineTo(360,S),t.stroke();t.globalAlpha=1,t.save(),t.shadowColor="#00f0ff",t.shadowBlur=20;const i=Date.now();let s=.1;if(this.game&&this.game.getAudioLevel){const S=this.game.getAudioLevel(),w=S*8;s=Math.min(1,s+w),i%1e3<16&&console.log(`🎵 Audio Level: ${S.toFixed(3)}, Pulse: ${s.toFixed(3)}`)}t.strokeStyle=`rgba(0, 240, 255, ${s})`;let a=0;s>.4&&(a=(s-.4)/.75*12),t.lineWidth=a,m.setFont(t,"display",72,"bold"),t.textAlign="center",t.strokeText("CIRCUIT",180,120),t.strokeText("BREAKER",180,180),t.fillStyle="#b600f9",t.fillText("CIRCUIT",180,120),t.fillText("BREAKER",180,180),t.restore(),t.save(),t.strokeStyle="#00f0ff",t.lineWidth=2,m.setFont(t,"primary",16),t.textAlign="center",t.strokeText("NEON CYBERPUNK PINBALL",180,280),t.fillStyle="#b600f9",t.fillText("NEON CYBERPUNK PINBALL",180,280),t.restore(),t.fillStyle="#ffffff",m.setFont(t,"primary",12),t.fillText("Navigate the ball through cyber holes",180,320),t.fillText("to reach all goals and break the circuit",180,340);const n=Date.now(),r=.5+.5*Math.sin(n/500);t.save(),t.globalAlpha=r,t.shadowColor="#00ff99",t.shadowBlur=10,t.fillStyle="#00ff99",m.setFont(t,"primary",14,"bold"),t.fillText("CLICK OR PRESS SPACE TO START",180,420),t.restore(),t.save();const c=.7+.3*Math.sin(n/300);t.globalAlpha=c,t.shadowColor="#ff6600",t.shadowBlur=15;const h=180,f=40,u=180-h/2,g=460;t.fillStyle="#ff6600",t.fillRect(u,g,h,f),t.strokeStyle="#ffaa33",t.lineWidth=3,t.strokeRect(u,g,h,f),t.globalAlpha=1,t.shadowBlur=5,t.fillStyle="#ffffff",m.setFont(t,"primary",16,"bold"),t.textAlign="center",t.fillText("HOW TO PLAY",180,g+26),t.restore(),t.fillStyle="#888888",m.setFont(t,"primary",10),t.fillText("Press H or click button above",180,520),t.fillStyle="#888888",m.setFont(t,"primary",10),t.fillText("S - Settings  •  L - Save/Load  •  T - Statistics",180,550);const p=e.isDebugMode()?"ON":"OFF",M=e.isDebugMode()?"#00ff99":"#b600f9";t.fillStyle=M,m.setFont(t,"primary",10),t.fillText(`[D] DEBUG MODE: ${p}`,180,580),t.fillStyle="#444444",m.setFont(t,"primary",8),t.fillText("Circuit Breaker v1.0.1",180,615),t.fillText("Created by Chris Van Doren in July of 2025",180,630)}renderHowToPlay(e){if(!this.renderer)return;const t=this.renderer.getContext();if(!t)return;this.renderer.drawBackground(),t.strokeStyle="#003366",t.lineWidth=1,t.globalAlpha=.3;for(let r=0;r<=360;r+=20)t.beginPath(),t.moveTo(r,0),t.lineTo(r,640),t.stroke();for(let r=0;r<=640;r+=20)t.beginPath(),t.moveTo(0,r),t.lineTo(360,r),t.stroke();t.globalAlpha=1,t.save(),t.shadowColor="#00f0ff",t.shadowBlur=20,t.fillStyle="#b600f9",m.setFont(t,"display",48,"bold"),t.textAlign="center",t.fillText("HOW TO PLAY",180,80),t.restore(),t.fillStyle="#00f0ff",m.setFont(t,"primary",14,"bold"),t.fillText("OBJECTIVE:",180,120),t.fillStyle="#ffffff",m.setFont(t,"primary",11),t.fillText("Navigate the ball through cyber holes to reach",180,140),t.fillText("ALL goal holes and complete each level.",180,155),t.fillText("Avoid falling off the playfield!",180,170),t.fillStyle="#00ff99",m.setFont(t,"primary",14,"bold"),t.fillText("POWER-UPS & BONUSES:",180,200),t.fillStyle="#ffffff",m.setFont(t,"primary",10),t.fillText("• SAUCERS: Ball sinks in, gets power-up, then ejects",180,220),t.fillText("• SLOW-MO SURGE: Slows down time for precision",180,235),t.fillText("• MAGNETIC GUIDE: Attracts ball toward goals",180,250),t.fillText("• CIRCUIT PATCH: Repairs bar damage & extends life",180,265),t.fillText("• OVERCLOCK BOOST: Increases bar movement speed",180,280),t.fillText("• SCAN REVEAL: Shows hidden animated holes",180,295),t.fillStyle="#ff6600",m.setFont(t,"primary",14,"bold"),t.fillText("CONTROLS:",180,325),t.fillStyle="#ffffff",m.setFont(t,"primary",10),t.fillText("KEYBOARD:",180,345),t.fillText("• A/Z - Left Side Up/Down",180,360),t.fillText("• ↑/↓ or L/, - Right Side Up/Down",180,375),t.fillText("• SPACE - Start/Place Ball",180,390),t.fillText("TOUCH CONTROLS (Mobile):",180,410),t.fillText("• Touch above/below bar sides to move up/down",180,425),t.fillText("• Left side of screen controls left bar end",180,440),t.fillText("• Right side of screen controls right bar end",180,455),t.fillText("MENUS:",180,475),t.fillText("• S - Settings  • L - Save/Load  • T - Statistics",180,490);const i=Date.now(),s=.5+.5*Math.sin(i/500);t.save(),t.globalAlpha=s,t.shadowColor="#00ff99",t.shadowBlur=10,t.fillStyle="#00ff99",m.setFont(t,"primary",14,"bold"),t.fillText("PRESS ESC OR BACKSPACE TO RETURN",180,540),t.restore();const a=e.isDebugMode()?"ON":"OFF",n=e.isDebugMode()?"#00ff99":"#b600f9";t.fillStyle=n,m.setFont(t,"primary",10),t.fillText(`[D] DEBUG MODE: ${a}`,180,580),t.fillStyle="#444444",m.setFont(t,"primary",8),t.fillText("Circuit Breaker v1.0.1",180,615),t.fillText("Created by Chris Van Doren in July of 2025",180,630)}renderPaused(){if(!this.renderer)return;const e=this.renderer.getContext();e&&(e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(0,0,360,640),e.fillStyle="#00f0ff",m.setFont(e,"display",24,"bold"),e.textAlign="center",e.fillText("PAUSED",180,280),e.fillStyle="#ffffff",m.setFont(e,"primary",14),e.fillText("Press ESC to resume",180,320),e.fillText("Press S for Settings",180,340),e.fillText("Press Y to return to menu",180,360))}renderConfirmDialog(e){if(!this.renderer)return;const t=this.renderer.getContext();if(!t)return;this.renderGameplay(e),t.fillStyle="rgba(0, 0, 0, 0.8)",t.fillRect(0,0,360,640);const i=280,s=160,a=(360-i)/2,n=(640-s)/2;t.fillStyle="#1a1a1a",t.fillRect(a,n,i,s),t.strokeStyle="#b600f9",t.lineWidth=3,t.shadowColor="#b600f9",t.shadowBlur=10,t.strokeRect(a,n,i,s),t.shadowBlur=0,t.fillStyle="#b600f9",m.setFont(t,"primary",18,"bold"),t.textAlign="center",t.fillText("RETURN TO MENU?",180,n+40),t.fillStyle="#ffffff",m.setFont(t,"primary",12),t.fillText("Your progress will be lost.",180,n+70),t.fillText("Are you sure?",180,n+90);const r=n+120;t.fillStyle="#00f0ff",t.shadowColor="#00f0ff",t.shadowBlur=8,m.setFont(t,"primary",14,"bold"),t.fillText("[Y] YES",130,r),t.fillStyle="#00ff99",t.shadowColor="#00ff99",t.shadowBlur=8,t.fillText("[N] NO",230,r),t.shadowBlur=0,t.fillStyle="#888888",m.setFont(t,"primary",10),t.fillText("Press Y to confirm, N or ESC to cancel",180,n+145)}renderAchievementNotification(){var i;const e=this.game,t=(i=this.renderer)==null?void 0:i.getContext();!t||!e||typeof e.achievementNotification=="undefined"||!e.achievementNotification||e.achievementNotification.render(t)}renderGameOver(e){if(!this.renderer)return;const t=this.renderer.getContext();if(!t)return;this.renderer.drawBackground(),t.strokeStyle="#330000",t.lineWidth=1,t.globalAlpha=.3;for(let n=0;n<=360;n+=30)t.beginPath(),t.moveTo(n,0),t.lineTo(n,640),t.stroke();for(let n=0;n<=640;n+=30)t.beginPath(),t.moveTo(0,n),t.lineTo(360,n),t.stroke();t.globalAlpha=1,t.save(),t.shadowColor="#b600f9",t.shadowBlur=25,t.fillStyle="#b600f9",m.setFont(t,"display",28,"bold"),t.textAlign="center",t.fillText("GAME OVER",180,200),t.restore(),t.fillStyle="#ff6666",m.setFont(t,"primary",14),t.textAlign="center",t.fillText("CIRCUIT BREAKER MALFUNCTION",180,230);const i=e.getStateData();t.fillStyle="#ffffff",m.setFont(t,"primary",16),t.fillText(`FINAL SCORE: ${i.score}`,180,280),t.fillText(`LEVEL REACHED: ${i.currentLevel}`,180,310);const s=Date.now(),a=.5+.5*Math.sin(s/400);t.save(),t.globalAlpha=a,t.shadowColor="#00ff99",t.shadowBlur=10,t.fillStyle="#00ff99",m.setFont(t,"primary",12,"bold"),t.fillText("CLICK OR PRESS SPACE TO RETURN TO MENU",180,400),t.restore(),t.fillStyle="#666666",m.setFont(t,"primary",10),t.fillText("SYSTEM: Preparing for circuit restart...",180,480)}pause(){this.isPaused=!0,o.info("⏸️ Game loop paused",null,"GameLoop")}resume(){this.isPaused=!1,o.info("▶️ Game loop resumed",null,"GameLoop")}stop(){this.isRunning=!1,this.animationId!==null&&(cancelAnimationFrame(this.animationId),this.animationId=null),o.info("⏹️ Game loop stopped",null,"GameLoop")}isGameLoopRunning(){return this.isRunning}isGameLoopPaused(){return this.isPaused}updateFPSTracking(e){this.frameCount++,e-this.fpsUpdateTime>=this.FPS_UPDATE_INTERVAL&&(this.currentFPS=Math.round(this.frameCount*1e3/(e-this.fpsUpdateTime)),this.frameCount=0,this.fpsUpdateTime=e,this.game&&this.game.statsManager&&this.game.statsManager.recordEvent({type:"fps_update",timestamp:Date.now(),data:{fps:this.currentFPS}}))}getFPS(){return this.currentFPS}}class P{static setEnabled(e){this.isEnabled=e}static log(e,...t){if(!this.isEnabled)return;const s=`[${new Date().toISOString()}] ${e}`;o.info(s,t.length>0?t:null,"Debug"),this.addToLogs(s)}static warn(e,...t){if(!this.isEnabled)return;const s=`[${new Date().toISOString()}] WARNING: ${e}`;o.warn(s,t.length>0?t:null,"Debug"),this.addToLogs(s)}static error(e,...t){if(!this.isEnabled)return;const s=`[${new Date().toISOString()}] ERROR: ${e}`;o.error(s,t.length>0?t:null,"Debug"),this.addToLogs(s)}static addToLogs(e){this.logs.push(e),this.logs.length>this.maxLogs&&this.logs.shift()}static getLogs(){return[...this.logs]}static clearLogs(){this.logs=[]}static measurePerformance(e,t){if(!this.isEnabled)return t();const i=performance.now(),s=t(),a=performance.now();return this.log(`Performance [${e}]: ${(a-i).toFixed(2)}ms`),s}static createTimer(e){const t=performance.now();return()=>{const i=performance.now();this.log(`Timer [${e}]: ${(i-t).toFixed(2)}ms`)}}static assert(e,t){if(this.isEnabled&&!e)throw this.error(`Assertion failed: ${t}`),new Error(`Assertion failed: ${t}`)}static getMemoryInfo(){return this.isEnabled?{logsCount:this.logs.length,timestamp:new Date().toISOString()}:{}}static exportDebugInfo(){return{enabled:this.isEnabled,logs:this.getLogs(),memory:this.getMemoryInfo()}}}l(P,"isEnabled",!0),l(P,"logs",[]),l(P,"maxLogs",100);const q=class q{constructor(){l(this,"atlases",new Map);l(this,"isLoaded",!1);l(this,"offscreenCanvases",new Map)}static getInstance(){return q.instance||(q.instance=new q),q.instance}load(){return C(this,null,function*(){try{P.log("🚀 Starting sprite atlas loading process..."),yield this.loadAtlas("main","./assets/sprites/atlas_01.json","./assets/sprites/atlas_01.png"),yield this.loadAtlas("powerup","./assets/sprites/powerup_atlas_01.json","./assets/sprites/powerup_atlas_01.png"),this.isLoaded=!0;let e=0;this.atlases.forEach((t,i)=>{const s=Object.keys(t.data.frames).length;e+=s,P.log(`📊 Atlas '${i}' contains ${s} sprites`)}),P.log("🎨 All sprite atlases loaded successfully with",e,"total sprites")}catch(e){P.log("❌ Failed to load sprite atlases:",e),this.isLoaded=!1}})}loadAtlas(e,t,i){return C(this,null,function*(){P.log(`🔄 Loading ${e} atlas from ${t} and ${i}`);const s=yield fetch(t);if(!s.ok)throw new Error(`Failed to load ${e} atlas JSON: ${s.status}`);const a=yield s.json();P.log(`📄 ${e} atlas JSON loaded with ${Object.keys(a.frames).length} sprites`);const n=new Image;n.src=i,yield new Promise((r,c)=>{n.onload=()=>{P.log(`🖼️ ${e} atlas image loaded successfully`),r()},n.onerror=h=>{P.log(`❌ Failed to load ${e} atlas image:`,h),c(h)}}),this.atlases.set(e,{image:n,data:a}),P.log(`🎨 ${e} atlas loaded with`,Object.keys(a.frames).length,"sprites:",Object.keys(a.frames).join(", "))})}getFrame(e){for(const[t,i]of this.atlases)if(i.data.frames[e])return{frame:i.data.frames[e],atlas:t};return P.log(`❌ Sprite ${e} not found in any atlas`),null}drawSprite(e,t,i,s,a=1){if(!this.isLoaded)return!1;const n=this.getFrame(t);if(!n)return!1;const r=this.atlases.get(n.atlas);return r?(e.drawImage(r.image,n.frame.x,n.frame.y,n.frame.w,n.frame.h,i,s,n.frame.w*a,n.frame.h*a),!0):!1}getSpriteCanvas(e,t=1){const i=`${e}_${t}`;if(this.offscreenCanvases.has(i)){const c=this.offscreenCanvases.get(i);if(c)return c}if(!this.isLoaded)return null;const s=this.getFrame(e);if(!s)return null;const a=this.atlases.get(s.atlas);if(!a)return null;const n=document.createElement("canvas");n.width=s.frame.w*t,n.height=s.frame.h*t;const r=n.getContext("2d");return r?(r.drawImage(a.image,s.frame.x,s.frame.y,s.frame.w,s.frame.h,0,0,s.frame.w*t,s.frame.h*t),this.offscreenCanvases.set(i,n),n):null}getSpriteNames(){const e=[];return this.atlases.forEach(t=>{e.push(...Object.keys(t.data.frames))}),e}isAtlasLoaded(){return this.isLoaded}getAtlasDimensions(e="main"){const t=this.atlases.get(e);return t?{width:t.data.meta.size.w,height:t.data.meta.size.h}:null}clearCache(){this.offscreenCanvases.clear()}};l(q,"instance");let le=q;const O=le.getInstance();class Ce{constructor(){l(this,"canvas",null);l(this,"ctx",null);l(this,"width",800);l(this,"height",600);l(this,"backgroundSprite",null);l(this,"spritesLoaded",!1);l(this,"currentTint",null);P.log("🎨 Renderer initialized")}loadSprites(){return C(this,null,function*(){try{this.backgroundSprite=new Image,this.backgroundSprite.src="./assets/sprites/playfield_background_02.png";const e=O.load(),t=[new Promise((a,n)=>{this.backgroundSprite?(this.backgroundSprite.onload=()=>a("background"),this.backgroundSprite.onerror=r=>n({sprite:"background",error:r})):n({sprite:"background",error:new Error("Background sprite not initialized")})}),e.then(()=>"atlas").catch(a=>Promise.reject({sprite:"atlas",error:a}))],i=yield Promise.allSettled(t);let s=0;i.forEach((a,n)=>{if(a.status==="fulfilled")s++,P.log(`✅ ${a.value} loaded successfully`);else{const{sprite:r,error:c}=a.reason;P.log(`❌ Failed to load ${r}:`,c)}}),this.spritesLoaded=s>0,s===2?P.log("🎨 All sprites and atlas loaded successfully"):s===1?P.log("⚠️ Some sprites loaded, game will use fallbacks where needed"):P.log("❌ No sprites loaded, game will use fallbacks")}catch(e){P.log("❌ Sprite loading system failed:",e),this.spritesLoaded=!1}})}init(e){if(this.canvas=e,this.ctx=e.getContext("2d"),!this.ctx)throw new Error("Failed to get 2D context from canvas");this.width=e.width,this.height=e.height,P.log(`Renderer initialized with canvas: ${this.width}x${this.height} (scaling handled by ScalingManager)`)}clear(){this.ctx&&this.ctx.clearRect(0,0,this.width,this.height)}drawBackground(){this.ctx&&(this.backgroundSprite&&this.spritesLoaded?this.ctx.drawImage(this.backgroundSprite,0,0,360,640):(this.ctx.fillStyle="#1a1a1a",this.ctx.fillRect(0,0,360,640)))}render(){this.ctx}drawTiltingBar(e){if(!this.ctx)return;const t=e.getEndpoints();this.ctx.save(),this.ctx.shadowColor=e.glowColor,this.ctx.shadowBlur=20,this.ctx.lineWidth=e.thickness+4,this.ctx.strokeStyle=e.glowColor,this.ctx.globalAlpha=.3,this.ctx.beginPath(),this.ctx.moveTo(t.start.x,t.start.y),this.ctx.lineTo(t.end.x,t.end.y),this.ctx.stroke(),this.ctx.shadowBlur=0,this.ctx.shadowColor="transparent",this.ctx.globalAlpha=1;const i=O.isAtlasLoaded();if(this.spritesLoaded&&i){const s=O.getFrame("bar_normal");if(s){const a=Math.sqrt(Math.pow(t.end.x-t.start.x,2)+Math.pow(t.end.y-t.start.y,2)),n=Math.atan2(t.end.y-t.start.y,t.end.x-t.start.x),r=e.thickness/s.frame.h,c=s.frame.w*r,h=Math.ceil(a/c),f=(t.start.x+t.end.x)/2,u=(t.start.y+t.end.y)/2;this.ctx.translate(f,u),this.ctx.rotate(n);for(let g=0;g<h;g++){const p=g*c-a/2,M=-e.thickness/2,S=a-g*c,w=Math.min(c,S);w>0&&(this.ctx.save(),w<c&&(this.ctx.beginPath(),this.ctx.rect(p,M,w,e.thickness),this.ctx.clip()),O.drawSprite(this.ctx,"bar_normal",p,M,r),this.ctx.restore())}this.ctx.setTransform(1,0,0,1,0,0)}else this.renderBarFallback(t,e)}else this.renderBarFallback(t,e);this.ctx.fillStyle=e.color,this.ctx.beginPath(),this.ctx.arc(e.position.x,e.position.y,6,0,Math.PI*2),this.ctx.fill(),this.ctx.restore()}renderBarFallback(e,t){this.ctx&&(this.ctx.lineWidth=t.thickness,this.ctx.strokeStyle=t.color,this.ctx.beginPath(),this.ctx.moveTo(e.start.x,e.start.y),this.ctx.lineTo(e.end.x,e.end.y),this.ctx.stroke())}drawObstacle(e){if(!this.ctx)return;this.ctx.save();const t=e.position.x+e.size.x/2,i=e.position.y+e.size.y/2;switch(e.type){case"electrical_hazard":this.ctx.shadowColor="#b600f9",this.ctx.shadowBlur=e.isActive?15:5,this.ctx.fillStyle=e.isActive?"#b600f9":"#660066",this.ctx.strokeStyle="#d466ff",this.ctx.lineWidth=2,this.ctx.fillRect(e.position.x,e.position.y,e.size.x,e.size.y),this.ctx.strokeRect(e.position.x,e.position.y,e.size.x,e.size.y),e.isActive&&this.drawElectricalSparks(t,i,e.size.x),this.ctx.fillStyle="#00ff99",this.ctx.font="12px monospace",this.ctx.textAlign="center",this.ctx.fillText("⚡",t,i+4);break;case"barrier":this.ctx.shadowColor="#00f0ff",this.ctx.shadowBlur=10,this.ctx.fillStyle="#006677",this.ctx.strokeStyle="#00f0ff",this.ctx.lineWidth=2,this.ctx.fillRect(e.position.x,e.position.y,e.size.x,e.size.y),this.ctx.strokeRect(e.position.x,e.position.y,e.size.x,e.size.y);break;case"hole":this.ctx.shadowColor="#b600f9",this.ctx.shadowBlur=8,this.ctx.fillStyle="#220000",this.ctx.strokeStyle="#b600f9",this.ctx.lineWidth=2,this.ctx.fillRect(e.position.x,e.position.y,e.size.x,e.size.y),this.ctx.strokeRect(e.position.x,e.position.y,e.size.x,e.size.y);break;default:this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=2,this.ctx.strokeRect(e.position.x,e.position.y,e.size.x,e.size.y);break}this.ctx.restore()}drawElectricalSparks(e,t,i){if(this.ctx){this.ctx.save(),this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=1,this.ctx.globalAlpha=.8;for(let s=0;s<5;s++){const a=Math.random()*Math.PI*2,n=Math.random()*i*.5,r=e+Math.cos(a)*5,c=t+Math.sin(a)*5,h=r+Math.cos(a)*n,f=c+Math.sin(a)*n;this.ctx.beginPath(),this.ctx.moveTo(r,c),this.ctx.lineTo(h,f),this.ctx.stroke()}this.ctx.restore()}}drawTargetPort(e){if(!this.ctx)return;this.ctx.save();const t=e.position.x,i=e.position.y;this.ctx.shadowColor=e.color,this.ctx.shadowBlur=20,this.ctx.fillStyle=e.color,this.ctx.globalAlpha=.3,this.ctx.beginPath(),this.ctx.arc(t,i,e.radius+10,0,Math.PI*2),this.ctx.fill(),this.ctx.globalAlpha=1,this.ctx.shadowBlur=0,this.ctx.fillStyle=e.isCompleted?"#333333":e.color,this.ctx.beginPath(),this.ctx.arc(t,i,e.radius,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle=e.isCompleted?"#666666":e.color,this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.arc(t,i,e.radius,0,Math.PI*2),this.ctx.stroke(),this.ctx.fillStyle="#ffffff",this.ctx.font="16px monospace",this.ctx.textAlign="center",this.ctx.fillText(e.isCompleted?"✓":"○",t,i+6),this.ctx.restore()}drawHole(e,t=!1,i=!1){var M,S,w,L;if(!this.ctx)return;this.ctx.save();const s=e.position.x,a=e.position.y,n=e.isGoal,r=e.powerUpType!==void 0,c=((M=e.saucerState)==null?void 0:M.isActive)||!1,h=e.radius*1.2;let f,u,g;if(n)f="#ff6600",u="#441100",g="#220000";else if(r){const T={SLOW_MO_SURGE:{active:"#00ffff",dark:"#004444",darker:"#002222"},MAGNETIC_GUIDE:{active:"#ff00ff",dark:"#440044",darker:"#220022"},CIRCUIT_PATCH:{active:"#00ff00",dark:"#004400",darker:"#002200"},OVERCLOCK_BOOST:{active:"#ff6600",dark:"#441100",darker:"#220000"},SCAN_REVEAL:{active:"#ffff00",dark:"#444400",darker:"#222200"}},k=T[e.powerUpType]||T.SLOW_MO_SURGE;f=k.active,u=k.dark,g=k.darker}else f="#00ff99",u="#004400",g="#002200";const p=O.isAtlasLoaded();if(this.spritesLoaded&&p){let T;if((S=e.animationState)!=null&&S.isAnimated){if(T="ball_whole_normal",e.animationState.phase==="hidden"||e.animationState.currentScale<.001){this.ctx.restore();return}}else if(n)T="ball_whole_powerup";else if(r){const U={SLOW_MO_SURGE:["hourglass","hourglass_alt"],MAGNETIC_GUIDE:["magnet","magnet_alt","hourglass_alt"],CIRCUIT_PATCH:["chip","chip_alt"],OVERCLOCK_BOOST:["starburst","starburst_alt","hourglass"],SCAN_REVEAL:["eye","eye_alt"]}[e.powerUpType]||["vortex"],E=e.id.charCodeAt(e.id.length-1)%U.length;T=U[E]}else T="ball_whole_normal";const k=O.getFrame(T);if(k){let U=h*2/Math.max(k.frame.w,k.frame.h);(w=e.animationState)!=null&&w.isAnimated&&(U*=e.animationState.currentScale),i&&(this.ctx.strokeStyle=f,this.ctx.lineWidth=3,this.ctx.globalAlpha=.5,this.ctx.beginPath(),this.ctx.arc(s,a,h+5,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1),t&&(this.ctx.globalAlpha=.6),O.drawSprite(this.ctx,T,s-k.frame.w*U/2,a-k.frame.h*U/2,U),this.ctx.globalAlpha=1,t&&(this.ctx.fillStyle=f,this.ctx.globalAlpha=.3,this.ctx.beginPath(),this.ctx.arc(s,a,h-2,0,Math.PI*2),this.ctx.fill(),this.ctx.globalAlpha=1,this.ctx.fillStyle=f,this.ctx.font="12px monospace",this.ctx.textAlign="center",this.ctx.fillText("✓",s,a+4))}else this.renderHoleFallback(e,t,s,a,n,f,u,g,i,h);c&&r&&this.drawSaucerEffects(s,a,h,f,e)}else{if((L=e.animationState)!=null&&L.isAnimated&&(e.animationState.phase==="hidden"||e.animationState.currentScale<.001)){this.ctx.restore();return}this.renderHoleFallback(e,t,s,a,n,f,u,g,i,h),c&&r&&this.drawSaucerEffects(s,a,h,f,e)}this.ctx.restore()}renderHoleFallback(e,t,i,s,a,n,r,c,h,f){var u,g;if(this.ctx)if(h&&(this.ctx.strokeStyle=n,this.ctx.lineWidth=3,this.ctx.globalAlpha=.5,this.ctx.beginPath(),this.ctx.arc(i,s,f+5,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1),t)this.ctx.shadowColor=n,this.ctx.shadowBlur=15,this.ctx.fillStyle=c,this.ctx.beginPath(),this.ctx.arc(i,s,f-2,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle=c,this.ctx.beginPath(),this.ctx.arc(i,s,f/2,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle=n,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(i,s,f-2,0,Math.PI*2),this.ctx.stroke(),this.ctx.fillStyle=n,this.ctx.font="12px monospace",this.ctx.textAlign="center",this.ctx.fillText("✓",i,s+4);else{let p=1,M=1;if((u=e.animationState)!=null&&u.isAnimated){const w=e.animationState;if(M=w.currentScale,p=w.currentScale,w.currentScale<.001||w.phase==="hidden")return;n="#ff6600",r="#441100",c="#220000"}this.ctx.shadowColor=n,this.ctx.shadowBlur=(a?15:10)*p,this.ctx.fillStyle=n,this.ctx.globalAlpha=(a?.8:.6)*p;const S=(f-2)*M;if(this.ctx.beginPath(),this.ctx.arc(i,s,S,0,Math.PI*2),this.ctx.fill(),this.ctx.globalAlpha=1,this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(i,s,f/2*M,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle=n,this.ctx.lineWidth=2,this.ctx.globalAlpha=p,this.ctx.beginPath(),this.ctx.arc(i,s,S,0,Math.PI*2),this.ctx.stroke(),this.ctx.globalAlpha=1,this.ctx.fillStyle="#ffffff",this.ctx.font="10px monospace",this.ctx.textAlign="center",this.ctx.globalAlpha=p,(g=e.animationState)!=null&&g.isAnimated?this.ctx.fillText("◉",i,s+3):this.ctx.fillText(a?"🎯":"●",i,s+3),e.powerUpType){const L={SLOW_MO_SURGE:"⏰",MAGNETIC_GUIDE:"🧲",CIRCUIT_PATCH:"🛡️",OVERCLOCK_BOOST:"⚡",SCAN_REVEAL:"🔍"}[e.powerUpType]||"?";this.ctx.shadowColor=n,this.ctx.shadowBlur=8*p,this.ctx.fillStyle="#ffffff",this.ctx.font="14px Interceptor",this.ctx.textAlign="center",this.ctx.fillText(L,i,s+5),this.ctx.shadowBlur=0}this.ctx.globalAlpha=1}}drawSaucerEffects(e,t,i,s,a){if(!this.ctx||!a.saucerState)return;this.ctx.save();const n=a.saucerState,r=Date.now()*.01;if(n.phase==="sinking"){const c=.7+.3*Math.sin(r*4);this.ctx.shadowColor=s,this.ctx.shadowBlur=25*c,this.ctx.globalAlpha=.8*c;const h=n.sinkDepth;for(let f=0;f<3;f++){const u=i+4+f*4,g=.6*(1-f*.3)*(1-h*.5);this.ctx.globalAlpha=g,this.ctx.strokeStyle=s,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(e,t+h*4,u,0,Math.PI*2),this.ctx.stroke()}}else if(n.phase==="waiting"){const c=.6+.2*Math.sin(r*2);this.ctx.shadowColor=s,this.ctx.shadowBlur=20*c,this.ctx.globalAlpha=.7*c,this.ctx.strokeStyle=s,this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.arc(e,t,i+8,0,Math.PI*2),this.ctx.stroke(),this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(e,t,i+4,0,Math.PI*2),this.ctx.stroke();const h=r*1.5,f=i+6;this.ctx.strokeStyle=s,this.ctx.lineWidth=1,this.ctx.globalAlpha=.8;for(let u=0;u<4;u++){const g=h+u*Math.PI/2,p=e+Math.cos(g)*f,M=t+Math.sin(g)*f,S=e+Math.cos(g)*(f+6),w=t+Math.sin(g)*(f+6);this.ctx.beginPath(),this.ctx.moveTo(p,M),this.ctx.lineTo(S,w),this.ctx.stroke()}}else if(n.phase==="ejecting"){const c=Math.min((Date.now()-n.startTime)/200,1),h=.8+.4*Math.sin(r*6);this.ctx.shadowColor=s,this.ctx.shadowBlur=30*h,this.ctx.globalAlpha=.9*h;for(let f=0;f<3;f++){const u=i+2+f*3,g=t-c*10*(f+1),p=.7*(1-f*.3)*(1-c*.3);this.ctx.globalAlpha=p,this.ctx.strokeStyle=s,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(e,g,u,0,Math.PI*2),this.ctx.stroke()}}this.ctx.restore()}drawDangerZone(e){if(!this.ctx)return;this.ctx.save();const t=e.position.x+(e.width||e.radius*2)/2,i=e.position.y+(e.height||e.radius*2)/2;this.ctx.shadowColor="#b600f9",this.ctx.shadowBlur=20,this.ctx.fillStyle="#220000",this.ctx.globalAlpha=.7,this.ctx.fillRect(e.position.x,e.position.y,e.width||e.radius*2,e.height||e.radius*2),this.ctx.globalAlpha=1,this.ctx.strokeStyle="#b600f9",this.ctx.lineWidth=3,this.ctx.strokeRect(e.position.x,e.position.y,e.width||e.radius*2,e.height||e.radius*2),this.ctx.fillStyle="#000000",this.ctx.font="20px monospace",this.ctx.textAlign="center",this.ctx.fillText("⚠",t,i+8),this.ctx.restore()}drawChromeBall(e,t,i="ball_normal"){if(!this.ctx)return;this.ctx.save();const s=e.position.x,a=e.position.y,n=e.radius,r=(t==null?void 0:t.scale)||1,c=(t==null?void 0:t.opacity)||1;this.ctx.globalAlpha=c;const h=O.isAtlasLoaded();if(this.spritesLoaded&&h){const f=i==="ball_saucer"?.9:1,u=n*2*r*f,g=O.getFrame(i);if(g){const p=u/g.frame.w;this.ctx.fillStyle="rgba(0, 0, 0, 0.3)",this.ctx.beginPath(),this.ctx.arc(s+n*r*.1,a+n*r*.1,n*r,0,Math.PI*2),this.ctx.fill(),O.drawSprite(this.ctx,i,s-u/2,a-u/2,p)}else{const p=i==="ball_saucer"?.9:1,M=n*r*p,S=this.ctx.createRadialGradient(s-M*.3,a-M*.3,0,s,a,M);S.addColorStop(0,"#ffffff"),S.addColorStop(.1,"#e6e6e6"),S.addColorStop(.3,"#cccccc"),S.addColorStop(.6,"#999999"),S.addColorStop(.8,"#666666"),S.addColorStop(1,"#333333"),this.ctx.fillStyle="rgba(0, 0, 0, 0.3)",this.ctx.beginPath(),this.ctx.arc(s+M*.1,a+M*.1,M,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle=S,this.ctx.beginPath(),this.ctx.arc(s,a,M,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="rgba(255, 255, 255, 1)",this.ctx.beginPath(),this.ctx.arc(s-M*.35,a-M*.35,M*.08,0,Math.PI*2),this.ctx.fill()}}else{const f=i==="ball_saucer"?.9:1,u=n*r*f,g=this.ctx.createRadialGradient(s-u*.3,a-u*.3,0,s,a,u);g.addColorStop(0,"#ffffff"),g.addColorStop(.1,"#e6e6e6"),g.addColorStop(.3,"#cccccc"),g.addColorStop(.6,"#999999"),g.addColorStop(.8,"#666666"),g.addColorStop(1,"#333333"),this.ctx.fillStyle="rgba(0, 0, 0, 0.3)",this.ctx.beginPath(),this.ctx.arc(s+u*.1,a+u*.1,u,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle=g,this.ctx.beginPath(),this.ctx.arc(s,a,u,0,Math.PI*2),this.ctx.fill();const p=this.ctx.createRadialGradient(s-u*.4,a-u*.4,0,s-u*.2,a-u*.2,u*.6);p.addColorStop(0,"rgba(255, 255, 255, 0.9)"),p.addColorStop(.3,"rgba(255, 255, 255, 0.3)"),p.addColorStop(1,"rgba(255, 255, 255, 0)"),this.ctx.fillStyle=p,this.ctx.beginPath(),this.ctx.arc(s-u*.2,a-u*.2,u*.6,0,Math.PI*2),this.ctx.fill();const M=this.ctx.createRadialGradient(s-u*.3,a-u*.3,0,s-u*.3,a-u*.3,u*.4);M.addColorStop(0,"rgba(255, 255, 255, 1)"),M.addColorStop(.5,"rgba(255, 255, 255, 0.8)"),M.addColorStop(1,"rgba(255, 255, 255, 0)"),this.ctx.fillStyle=M,this.ctx.beginPath(),this.ctx.arc(s-u*.3,a-u*.3,u*.4,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="rgba(255, 255, 255, 0.9)",this.ctx.beginPath(),this.ctx.arc(s-u*.4,a-u*.4,u*.15,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="rgba(255, 255, 255, 1)",this.ctx.beginPath(),this.ctx.arc(s-u*.35,a-u*.35,u*.08,0,Math.PI*2),this.ctx.fill();const S=this.ctx.createRadialGradient(s+u*.3,a+u*.2,0,s+u*.3,a+u*.2,u*.5);S.addColorStop(0,"rgba(0, 255, 255, 0.2)"),S.addColorStop(.3,"rgba(255, 0, 102, 0.1)"),S.addColorStop(1,"rgba(0, 0, 0, 0)"),this.ctx.fillStyle=S,this.ctx.beginPath(),this.ctx.arc(s+u*.3,a+u*.2,u*.5,0,Math.PI*2),this.ctx.fill()}this.ctx.restore()}drawAtlasSprite(e,t,i,s=1,a=!0){if(!this.ctx||!O.isAtlasLoaded())return!1;const n=O.getFrame(e);if(!n)return!1;const r=a?t-n.frame.w*s/2:t,c=a?i-n.frame.h*s/2:i;this.currentTint&&(this.ctx.save(),this.ctx.globalCompositeOperation="multiply",this.ctx.fillStyle=this.currentTint,this.ctx.globalAlpha=.3);const h=O.drawSprite(this.ctx,e,r,c,s);return this.currentTint&&this.ctx.restore(),h}setTint(e){this.currentTint=e}clearTint(){this.currentTint=null}drawFlipper(e,t){if(!this.ctx)return;const i=t?"flipper_left_down":"flipper_right_down";this.drawAtlasSprite(i,e.position.x,e.position.y,2)}drawBumper(e,t=!1){if(!this.ctx)return;const i=t?"round_bumper_active":"round_bumper_idle";this.drawAtlasSprite(i,e.position.x,e.position.y,1.5)}drawSpinner(e,t=1){if(!this.ctx)return;const s=`spinner_${Math.max(1,Math.min(4,t))}`;this.drawAtlasSprite(s,e.position.x,e.position.y,2)}getContext(){return this.ctx}getDimensions(){return{width:this.width,height:this.height}}resize(e,t){this.canvas&&(this.width=e,this.height=t,this.canvas.width=e,this.canvas.height=t,P.log(`Renderer resized to: ${e}x${t}`))}}class xe{constructor(){l(this,"gravity",{x:0,y:400});l(this,"airResistance",.999);l(this,"objects",[]);l(this,"constraints",[]);l(this,"spatialGrid",new Map);l(this,"gridSize",60);l(this,"tiltingBar",null);l(this,"bounds",{width:360,height:640});l(this,"deltaTime",1/60);l(this,"timeScale",1);l(this,"debug",!1);l(this,"collisionManifolds",[]);l(this,"audioCallback",null);l(this,"audioTimeouts",new Map);l(this,"AUDIO_COOLDOWN_MS",150);P.log("⚡ Advanced PhysicsEngine initialized with Verlet integration")}setTiltingBar(e){this.tiltingBar=e}setAudioCallback(e){this.audioCallback=e}playAudioWithCooldown(e,t,i){if(!this.audioCallback)return;const s=Date.now(),a=`${i}_${t}`,n=this.audioTimeouts.get(a)||0;s-n>=this.AUDIO_COOLDOWN_MS&&(this.audioCallback(e,t),this.audioTimeouts.set(a,s))}createObject(e){const t=e.mass||1;return{id:e.id,position:{x:e.x,y:e.y},previousPosition:{x:e.x,y:e.y},acceleration:{x:0,y:0},velocity:{x:0,y:0},radius:e.radius,mass:t,inverseMass:e.isStatic?0:1/t,restitution:e.restitution||.7,friction:e.friction||.3,isStatic:e.isStatic||!1,constraints:[],x:e.x,y:e.y,vx:0,vy:0}}addObject(e){var t,i;e.previousPosition||(e.previousPosition={x:((t=e.position)==null?void 0:t.x)||e.x||0,y:((i=e.position)==null?void 0:i.y)||e.y||0}),e.acceleration||(e.acceleration={x:0,y:0}),e.velocity||(e.velocity={x:0,y:0}),e.inverseMass||(e.inverseMass=e.isStatic?0:1/(e.mass||1)),e.constraints||(e.constraints=[]),this.objects.push(e),this.updateSpatialGrid(),P.log(`Added physics object: ${e.id}`)}removeObject(e){this.objects=this.objects.filter(t=>t.id!==e),this.updateSpatialGrid(),P.log(`Removed physics object: ${e}`)}addConstraint(e){this.constraints.push(e),P.log(`Added constraint: ${e.type}`)}update(e){const t=e/1e3;this.simulateStep(t),this.updateBackwardCompatibility()}simulateStep(e){e*=this.timeScale,this.collisionManifolds=[];for(const t of this.objects)t.isRollingOnBar=!1;this.objects.length>0&&this.updateSpatialGrid(),this.integratePositions(e),this.solveConstraints(),this.detectAndResolveCollisions(),this.handleTiltingBarCollisions(),this.handleBoundaryCollisions(),this.updateVelocities(e)}integratePositions(e){for(const t of this.objects){if(t.isStatic)continue;if(this.isBallHeld(t.id)){const r=this.getHeldBallTarget(t.id);r&&(this.isBallSinking&&this.isBallSinking(t.id)?(t.position.x+=(r.x-t.position.x)*.15,t.position.y+=(r.y-t.position.y)*.15+.3):(t.position.x+=(r.x-t.position.x)*.1,t.position.y+=(r.y-t.position.y)*.1)),t.previousPosition.x=t.position.x,t.previousPosition.y=t.position.y;continue}const i=t.position.x-t.previousPosition.x,s=t.position.y-t.previousPosition.y;t.previousPosition.x=t.position.x,t.previousPosition.y=t.position.y;const a=this.gravity.x*e*e,n=this.gravity.y*e*e;t.position.x+=i*this.airResistance+a,t.position.y+=s*this.airResistance+n}}updateVelocities(e){for(const t of this.objects)t.isStatic||(t.velocity.x=(t.position.x-t.previousPosition.x)/e,t.velocity.y=(t.position.y-t.previousPosition.y)/e)}solveConstraints(){for(const e of this.constraints)this.solveConstraint(e)}solveConstraint(e){switch(e.type){case"distance":this.solveDistanceConstraint(e);break;case"position":this.solvePositionConstraint(e);break;case"angle":this.solveAngleConstraint(e);break}}solveDistanceConstraint(e){if(!e.objectB||!e.targetDistance)return;const t=e.objectA,i=e.objectB,s=i.position.x-t.position.x,a=i.position.y-t.position.y,n=Math.sqrt(s*s+a*a);if(n===0)return;const c=(e.targetDistance-n)/n/2,h=s*c*e.stiffness,f=a*c*e.stiffness;t.isStatic||(t.position.x-=h*t.inverseMass,t.position.y-=f*t.inverseMass),i.isStatic||(i.position.x+=h*i.inverseMass,i.position.y+=f*i.inverseMass)}solvePositionConstraint(e){if(!e.targetPosition)return;const t=e.objectA;if(t.isStatic)return;const i=e.targetPosition.x-t.position.x,s=e.targetPosition.y-t.position.y;t.position.x+=i*e.stiffness,t.position.y+=s*e.stiffness}solveAngleConstraint(e){}detectAndResolveCollisions(){if(!(this.objects.length<2))for(let e=0;e<this.objects.length;e++){const t=this.objects[e];if(!t.isStatic)for(let i=e+1;i<this.objects.length;i++){const s=this.objects[i],a=s.position.x-t.position.x,n=s.position.y-t.position.y,r=t.radius+s.radius+5;if(a*a+n*n<r*r){const c=this.detectCollision(t,s);c&&(this.collisionManifolds.push(c),this.resolveCollisionSimple(c))}}}}detectCollision(e,t){const i=t.position.x-e.position.x,s=t.position.y-e.position.y,a=Math.sqrt(i*i+s*s),n=e.radius+t.radius;if(a<n){const r=n-a,c=a>0?{x:i/a,y:s/a}:{x:1,y:0};return{objectA:e,objectB:t,normal:c,penetration:r,contactPoint:{x:e.position.x+c.x*e.radius,y:e.position.y+c.y*e.radius}}}return null}resolveCollisionSimple(e){const t=e.objectA,i=e.objectB,s=e.normal.x*e.penetration*.5,a=e.normal.y*e.penetration*.5;t.isStatic||(t.position.x-=s,t.position.y-=a),i.isStatic||(i.position.x+=s,i.position.y+=a);const n={x:i.velocity.x-t.velocity.x,y:i.velocity.y-t.velocity.y},r=n.x*e.normal.x+n.y*e.normal.y;if(r>0)return;const c=Math.min(t.restitution,i.restitution)*.8,h=r*c;t.isStatic||(t.previousPosition.x+=e.normal.x*h*.5,t.previousPosition.y+=e.normal.y*h*.5),i.isStatic||(i.previousPosition.x-=e.normal.x*h*.5,i.previousPosition.y-=e.normal.y*h*.5)}handleTiltingBarCollisions(){if(this.tiltingBar)for(const e of this.objects){if(e.isStatic||this.isBallHeld(e.id))continue;const t=this.tiltingBar.getEndpoints(),i=this.getClosestPointOnLineSegment(e.position,t.start,t.end),s=Math.sqrt(B(e.position.x-i.x,2)+B(e.position.y-i.y,2)),n=(this.tiltingBar.thickness||12)/2,r=e.radius+n;if(s<r){const c={x:t.end.x-t.start.x,y:t.end.y-t.start.y},h=Math.sqrt(c.x*c.x+c.y*c.y),f={x:c.x/h,y:c.y/h},u={x:-c.y/h,y:c.x/h};u.y>0&&(u.x=-u.x,u.y=-u.y);const g={x:i.x+u.x*n,y:i.y+u.y*n};e.position.x=g.x+u.x*e.radius,e.position.y=g.y+u.y*e.radius;const p={x:e.position.x-e.previousPosition.x,y:e.position.y-e.previousPosition.y},M=p.x*u.x+p.y*u.y,S=p.x*f.x+p.y*f.y;if(M<-.5){const w=e.restitution*.8,L=this.tiltingBar.friction||.3,T={x:p.x-2*M*u.x,y:p.y-2*M*u.y};T.x*=w*(1-L),T.y*=w,e.previousPosition.x=e.position.x-T.x,e.previousPosition.y=e.position.y-T.y;const k=Math.sqrt(p.x*p.x+p.y*p.y);this.playAudioWithCooldown(k,"bounce",e.id)}else this.applyRollingPhysics(e,f,u,S,this.deltaTime)}}}applyRollingPhysics(e,t,i,s,a){var g;const n=this.gravity.x*t.x+this.gravity.y*t.y,r=((g=this.tiltingBar)==null?void 0:g.friction)||.05,c=.01;let h=n;if(Math.abs(s)>.5){const p=-Math.sign(s)*c*Math.abs(this.gravity.y);h+=p}if(Math.abs(s)>.5){const p=-Math.sign(s)*r*Math.abs(this.gravity.y);h+=p}const f=s+h*a,u={x:f*t.x,y:f*t.y};e.previousPosition.x=e.position.x-u.x,e.previousPosition.y=e.position.y-u.y,e.velocity.x=u.x,e.velocity.y=u.y,e.isRollingOnBar=!0}isBallOnBar(e){const t=this.objects.find(c=>c.id===e);if(!t||!this.tiltingBar)return!1;const i=this.tiltingBar.getEndpoints(),s=this.getClosestPointOnLineSegment(t.position,i.start,i.end),a=Math.sqrt(B(t.position.x-s.x,2)+B(t.position.y-s.y,2)),n=this.tiltingBar.thickness||12,r=t.radius+n/2;return a<=r+2}handleBoundaryCollisions(){for(const e of this.objects)if(!e.isStatic&&!this.isBallHeld(e.id)){if(e.position.y+e.radius>this.bounds.height){e.position.y=this.bounds.height-e.radius;const t={x:e.position.x-e.previousPosition.x,y:e.position.y-e.previousPosition.y};t.y>0&&(e.previousPosition.y=e.position.y+t.y*e.restitution,e.previousPosition.x=e.position.x-t.x*.8)}if(e.position.x-e.radius<0){e.position.x=e.radius;const t={x:e.position.x-e.previousPosition.x,y:e.position.y-e.previousPosition.y};t.x<0&&(e.previousPosition.x=e.position.x+t.x*e.restitution)}if(e.position.x+e.radius>this.bounds.width){e.position.x=this.bounds.width-e.radius;const t={x:e.position.x-e.previousPosition.x,y:e.position.y-e.previousPosition.y};t.x>0&&(e.previousPosition.x=e.position.x+t.x*e.restitution)}}}isBallHeld(e){return!1}isBallSinking(e){return!1}getHeldBallTarget(e){return null}updateBackwardCompatibility(){for(const e of this.objects)e.x=e.position.x,e.y=e.position.y,e.vx=e.velocity.x,e.vy=e.velocity.y}updateSpatialGrid(){if(!(this.objects.length<=3)){this.spatialGrid.clear();for(const e of this.objects){const t=this.getObjectCells(e);for(const i of t){this.spatialGrid.has(i)||this.spatialGrid.set(i,{objects:[]});const s=this.spatialGrid.get(i);s&&s.objects.push(e)}}}}getObjectCells(e){const t=[],i=e.radius,s=Math.floor((e.position.x-i)/this.gridSize),a=Math.floor((e.position.x+i)/this.gridSize),n=Math.floor((e.position.y-i)/this.gridSize),r=Math.floor((e.position.y+i)/this.gridSize);for(let c=s;c<=a;c++)for(let h=n;h<=r;h++)t.push(`${c},${h}`);return t}getClosestPointOnLineSegment(e,t,i){const s=i.x-t.x,a=i.y-t.y,n=Math.sqrt(s*s+a*a);if(n===0)return t;const r=Math.max(0,Math.min(1,((e.x-t.x)*s+(e.y-t.y)*a)/(n*n)));return{x:t.x+r*s,y:t.y+r*a}}getObjects(){return this.objects}setGravity(e,t){this.gravity.x=e,this.gravity.y=t,P.log(`Gravity set to: (${e}, ${t})`)}setAirResistance(e){this.airResistance=Math.max(0,Math.min(1,e)),P.log(`Air resistance set to: ${this.airResistance}`)}setBounds(e,t){this.bounds.width=e,this.bounds.height=t,P.log(`Physics bounds set to: ${e}x${t}`)}setDebug(e){this.debug=e}getDebug(){return this.debug}getCollisionManifolds(){return this.collisionManifolds}getConstraints(){return this.constraints}getFriction(){return .98}getBounceEnergy(){return .7}getGravity(){return this.gravity.y}setFriction(e){P.log("Legacy friction setting ignored - use per-object friction instead")}setBounceEnergy(e){P.log("Legacy bounce energy setting ignored - use per-object restitution instead")}setTimeScale(e){this.timeScale=Math.max(.1,Math.min(e,2))}}class Ae{constructor(e){l(this,"position");l(this,"rotation",0);l(this,"targetRotation",0);l(this,"leftSideHeight",590);l(this,"rightSideHeight",590);l(this,"minSideHeight",50);l(this,"maxSideHeight",590);l(this,"sideSpeed",100);l(this,"width");l(this,"height");l(this,"maxRotation");l(this,"rotationSpeed");l(this,"friction");l(this,"speedMultiplier",1);l(this,"saucerHeightConstraint",null);l(this,"color","#00f0ff");l(this,"glowColor","#b600f9");l(this,"thickness",12);this.position=v({},e.position),this.width=e.width,this.height=e.height,this.maxRotation=e.maxRotation,this.rotationSpeed=e.rotationSpeed,this.friction=e.friction}setTargetRotation(e){this.targetRotation=Math.max(-this.maxRotation,Math.min(this.maxRotation,e))}moveLeftSide(e){if(e!==0){this.leftSideHeight-=e*this.sideSpeed*this.speedMultiplier*(1/60);const t=this.saucerHeightConstraint!==null?Math.max(this.minSideHeight,this.saucerHeightConstraint):this.minSideHeight;this.leftSideHeight=Math.max(t,Math.min(this.maxSideHeight,this.leftSideHeight))}}moveRightSide(e){if(e!==0){this.rightSideHeight-=e*this.sideSpeed*this.speedMultiplier*(1/60);const t=this.saucerHeightConstraint!==null?Math.max(this.minSideHeight,this.saucerHeightConstraint):this.minSideHeight;this.rightSideHeight=Math.max(t,Math.min(this.maxSideHeight,this.rightSideHeight))}}getTiltPercentage(){return this.rotation/this.maxRotation}update(e){const t=this.rightSideHeight-this.leftSideHeight,i=this.maxSideHeight-this.minSideHeight;this.rotation=t/i*this.maxRotation,this.targetRotation=this.rotation}getEndpoints(){const e=this.width/2;return{start:{x:this.position.x-e,y:this.leftSideHeight},end:{x:this.position.x+e,y:this.rightSideHeight}}}getNormal(){const e=this.getEndpoints(),t=e.end.x-e.start.x,i=e.end.y-e.start.y,s=Math.sqrt(t*t+i*i);return s===0?{x:0,y:-1}:{x:-i/s,y:t/s}}isPointNearBar(e,t){const i=this.getEndpoints(),s=this.distanceToLineSegment(e,i.start,i.end),a=t+this.thickness/2+2;return s<=a}distanceToLineSegment(e,t,i){const s=i.x-t.x,a=i.y-t.y,n=Math.sqrt(s*s+a*a);if(n===0)return Math.sqrt(B(e.x-t.x,2)+B(e.y-t.y,2));const r=Math.max(0,Math.min(1,((e.x-t.x)*s+(e.y-t.y)*a)/(n*n))),c={x:t.x+r*s,y:t.y+r*a};return Math.sqrt(B(e.x-c.x,2)+B(e.y-c.y,2))}getCollisionResponse(e,t,i){const s=this.getEndpoints(),a=this.getNormal(),n=this.distanceToLineSegment(e,s.start,s.end),r=i+this.thickness/2-n,c={x:e.x+a.x*r,y:e.y+a.y*r},h=t.x*a.x+t.y*a.y;let f=t;if(h<0){const u={x:t.x-2*h*a.x,y:t.y-2*h*a.y},g=1-this.friction,p=.8;f={x:u.x*g*p,y:u.y*p}}return{velocity:f,position:c}}setSpeedMultiplier(e){this.speedMultiplier=e}getSpeedMultiplier(){return this.speedMultiplier}setSaucerHeightConstraint(e){this.saucerHeightConstraint=e,this.leftSideHeight<e&&(this.leftSideHeight=e),this.rightSideHeight<e&&(this.rightSideHeight=e),o.debug(`🛸 Set saucer height constraint: ${e}`,null,"TiltingBar")}clearSaucerHeightConstraint(){this.saucerHeightConstraint=null,o.debug("🛸 Cleared saucer height constraint",null,"TiltingBar")}hasSaucerHeightConstraint(){return this.saucerHeightConstraint!==null}reset(){this.leftSideHeight=this.maxSideHeight,this.rightSideHeight=this.maxSideHeight,this.rotation=0,this.targetRotation=0,this.speedMultiplier=1,this.saucerHeightConstraint=null,o.info("🔄 Tilting bar reset to starting position",null,"TiltingBar")}}const X=class X{constructor(e){l(this,"config");l(this,"currentScale",1);l(this,"resizeCallbacks",[]);this.config=e,this.setupEventListeners()}static getInstance(e){if(!X.instance){if(!e)throw new Error("ScalingManager must be initialized with config first");X.instance=new X(e)}return X.instance}calculateScaling(){const e=window.innerWidth,t=window.innerHeight,i=e/this.config.baseWidth,s=t/this.config.baseHeight;let a=Math.min(i,s);a=Math.max(this.config.minScale,Math.min(this.config.maxScale,a)),this.config.forceIntegerScaling&&(a=Math.floor(a),a=Math.max(1,a));const n=this.config.baseWidth*a,r=this.config.baseHeight*a,c=(e-n)/2,h=(t-r)/2,f=window.devicePixelRatio||1,u=n*f,g=r*f,p={scale:a,displayWidth:n,displayHeight:r,canvasWidth:u,canvasHeight:g,offsetX:c,offsetY:h};return this.currentScale=a,o.debug(`📐 Scaling calculated: ${a}x (${n}x${r})`,{window:`${e}x${t}`,scaleFactors:`X:${i.toFixed(2)}, Y:${s.toFixed(2)}`,forceInteger:this.config.forceIntegerScaling,finalScale:a},"ScalingManager"),p}applyScaling(e,t){const i=this.calculateScaling(),s=window.devicePixelRatio||1;e.width=i.canvasWidth,e.height=i.canvasHeight,e.style.width=`${i.displayWidth}px`,e.style.height=`${i.displayHeight}px`,t&&(t.style.position="relative",e.style.position="absolute",e.style.left=`${i.offsetX}px`,e.style.top=`${i.offsetY}px`);const a=e.getContext("2d");return a&&(a.setTransform(1,0,0,1,0,0),a.scale(s,s),a.scale(i.scale,i.scale),a.imageSmoothingEnabled=!1,o.debug(`🎨 Canvas scaled: ${i.canvasWidth}x${i.canvasHeight} -> ${i.displayWidth}x${i.displayHeight}`,null,"ScalingManager")),i}onResize(e){this.resizeCallbacks.push(e)}offResize(e){const t=this.resizeCallbacks.indexOf(e);t>-1&&this.resizeCallbacks.splice(t,1)}getCurrentScale(){return this.currentScale}screenToGame(e,t){const i=this.calculateScaling(),s=e-i.offsetX,a=t-i.offsetY,n=s/i.scale,r=a/i.scale;return{x:n,y:r}}gameToScreen(e,t){const i=this.calculateScaling(),s=e*i.scale+i.offsetX,a=t*i.scale+i.offsetY;return{x:s,y:a}}setupEventListeners(){let e;window.addEventListener("resize",()=>{clearTimeout(e),e=setTimeout(()=>{const t=this.calculateScaling();this.resizeCallbacks.forEach(i=>{try{i(t)}catch(s){o.error("❌ Error in resize callback:",s,"ScalingManager")}})},100)})}updateConfig(e){this.config=v(v({},this.config),e),o.debug("🔧 ScalingManager config updated",null,"ScalingManager")}getConfig(){return v({},this.config)}};l(X,"instance");let F=X;class Ee{constructor(){l(this,"inputState",{keys:{},mouse:{x:0,y:0,isDown:!1,button:0},tiltInput:0,touches:new Map});l(this,"previousKeys",{});l(this,"canvas",null);l(this,"tiltingBar",null);l(this,"keyBindings",{leftSideUp:["KeyA"],leftSideDown:["KeyZ"],rightSideUp:["ArrowUp","KeyL"],rightSideDown:["ArrowDown","Comma"],start:["Space"],reset:["KeyR"],pause:["KeyP","Escape"]});l(this,"previousMouseState",!1);this.setupEventListeners()}init(e,t){this.canvas=e,this.tiltingBar=t,this.setupCanvasListeners()}getInputState(){return v({},this.inputState)}getTiltInput(){return this.inputState.tiltInput}getLeftSideInput(){let e=0;return this.isActionPressed("leftSideUp")&&(e=1),this.isActionPressed("leftSideDown")&&(e=-1),this.canvas&&e===0&&this.tiltingBar&&(e=this.calculateTouchSideInput("left")),e}getRightSideInput(){let e=0;return this.isActionPressed("rightSideUp")&&(e=1),this.isActionPressed("rightSideDown")&&(e=-1),this.canvas&&e===0&&this.tiltingBar&&(e=this.calculateTouchSideInput("right")),e}isActionPressed(e){return this.keyBindings[e].some(t=>this.inputState.keys[t])}isActionJustPressed(e){const t=this.keyBindings[e].some(i=>this.inputState.keys[i]&&!this.previousKeys[i]);return e==="start"&&t&&o.debug("🔑 Start key (SPACE) just pressed!",null,"InputManager"),t}isKeyJustPressed(e){return this.inputState.keys[e]&&!this.previousKeys[e]}calculateTouchSideInput(e){if(!this.canvas||!this.tiltingBar)return 0;let t=0;for(const[i,s]of this.inputState.touches)try{const n=F.getInstance().screenToGame(s.x,s.y),c=360/2,h=n.x<c,f=n.x>=c;if(e==="left"&&!h||e==="right"&&!f)continue;const u=this.tiltingBar.getEndpoints(),g=e==="left"?u.start.y:u.end.y,p=n.y-g,M=100;let S=-p/M;S=Math.max(-1,Math.min(1,S));const w=.1;Math.abs(S)<w&&(S=0),Math.abs(S)>Math.abs(t)&&(t=S)}catch(a){const n=this.canvas.getBoundingClientRect(),r=s.x-n.left,c=s.y-n.top,h=n.width/2,f=r<h,u=r>=h;if(e==="left"&&!f||e==="right"&&!u)continue;const g=n.height*.9,p=c-g,M=n.height*.2;let S=-p/M;S=Math.max(-1,Math.min(1,S));const w=.1;Math.abs(S)<w&&(S=0),Math.abs(S)>Math.abs(t)&&(t=S)}return t===0&&this.inputState.mouse.isDown?this.calculateSingleTouchSideInput(e):t}calculateSingleTouchSideInput(e){if(!this.canvas||!this.tiltingBar)return 0;try{const i=F.getInstance().screenToGame(this.inputState.mouse.x,this.inputState.mouse.y),a=360/2,n=i.x<a,r=i.x>=a;if(e==="left"&&!n||e==="right"&&!r)return 0;const c=this.tiltingBar.getEndpoints(),h=e==="left"?c.start.y:c.end.y,f=i.y-h,u=100;let g=-f/u;g=Math.max(-1,Math.min(1,g));const p=.1;return Math.abs(g)<p&&(g=0),g}catch(t){const i=this.canvas.getBoundingClientRect(),s=this.inputState.mouse.x-i.left,a=this.inputState.mouse.y-i.top,n=i.width/2,r=s<n,c=s>=n;if(e==="left"&&!r||e==="right"&&!c)return 0;const h=i.height*.9,f=a-h,u=i.height*.2;let g=-f/u;g=Math.max(-1,Math.min(1,g));const p=.1;return Math.abs(g)<p&&(g=0),g}}getJustPressedKeys(){const e=[];for(const t in this.inputState.keys)this.inputState.keys[t]&&!this.previousKeys[t]&&e.push(t);return e}isMouseJustPressed(){return this.inputState.mouse.isDown&&!this.previousMouseState}isMouseJustReleased(){return!this.inputState.mouse.isDown&&this.previousMouseState}getMousePosition(){if(!this.canvas)return null;try{return F.getInstance().screenToGame(this.inputState.mouse.x,this.inputState.mouse.y)}catch(e){const t=this.canvas.getBoundingClientRect();return{x:this.inputState.mouse.x-t.left,y:this.inputState.mouse.y-t.top}}}update(){let e=0,t=0;this.isActionPressed("leftSideUp")&&(e=1),this.isActionPressed("leftSideDown")&&(e=-1),this.isActionPressed("rightSideUp")&&(t=1),this.isActionPressed("rightSideDown")&&(t=-1);const i=(t-e)*.5;this.inputState.tiltInput=Math.max(-1,Math.min(1,i))}endFrame(){this.previousKeys=v({},this.inputState.keys),this.previousMouseState=this.inputState.mouse.isDown}setupEventListeners(){document.addEventListener("keydown",this.handleKeyDown.bind(this)),document.addEventListener("keyup",this.handleKeyUp.bind(this)),document.addEventListener("keydown",e=>{Object.values(this.keyBindings).flat().includes(e.code)&&e.preventDefault()})}setupCanvasListeners(){this.canvas&&(this.canvas.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.canvas.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.canvas.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.canvas.addEventListener("mouseleave",this.handleMouseLeave.bind(this)),this.canvas.addEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!1}),this.canvas.addEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!1}),this.canvas.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}))}handleKeyDown(e){this.inputState.keys[e.code]=!0}handleKeyUp(e){this.inputState.keys[e.code]=!1}handleMouseDown(e){this.inputState.mouse.isDown=!0,this.inputState.mouse.button=e.button,this.updateMousePosition(e)}handleMouseUp(e){this.inputState.mouse.isDown=!1,this.inputState.mouse.button=-1}handleMouseMove(e){this.updateMousePosition(e)}handleMouseLeave(){this.inputState.mouse.isDown=!1,this.inputState.mouse.button=-1}handleTouchStart(e){e.preventDefault();for(let t=0;t<e.touches.length;t++){const i=e.touches[t];this.inputState.touches.set(i.identifier,{x:i.clientX,y:i.clientY})}e.touches.length>0&&(this.inputState.mouse.isDown=!0,this.updateTouchPosition(e.touches[0]))}handleTouchEnd(e){e.preventDefault();const t=new Set(Array.from(e.touches).map(i=>i.identifier));for(const[i]of this.inputState.touches)t.has(i)||this.inputState.touches.delete(i);e.touches.length===0?this.inputState.mouse.isDown=!1:this.updateTouchPosition(e.touches[0])}handleTouchMove(e){e.preventDefault();for(let t=0;t<e.touches.length;t++){const i=e.touches[t];this.inputState.touches.set(i.identifier,{x:i.clientX,y:i.clientY})}e.touches.length>0&&this.updateTouchPosition(e.touches[0])}updateMousePosition(e){this.inputState.mouse.x=e.clientX,this.inputState.mouse.y=e.clientY}updateTouchPosition(e){this.inputState.mouse.x=e.clientX,this.inputState.mouse.y=e.clientY}dispose(){document.removeEventListener("keydown",this.handleKeyDown.bind(this)),document.removeEventListener("keyup",this.handleKeyUp.bind(this)),this.canvas&&(this.canvas.removeEventListener("mousedown",this.handleMouseDown.bind(this)),this.canvas.removeEventListener("mouseup",this.handleMouseUp.bind(this)),this.canvas.removeEventListener("mousemove",this.handleMouseMove.bind(this)),this.canvas.removeEventListener("mouseleave",this.handleMouseLeave.bind(this)),this.canvas.removeEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!1}),this.canvas.removeEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!1}),this.canvas.removeEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}))}}class fe{static clamp(e,t,i){return Math.min(Math.max(e,t),i)}static lerp(e,t,i){return e+(t-e)*i}static toRadians(e){return e*(Math.PI/180)}static toDegrees(e){return e*(180/Math.PI)}static distance(e,t,i,s){const a=i-e,n=s-t;return Math.sqrt(a*a+n*n)}static distanceVec(e,t){const i=t.x-e.x,s=t.y-e.y;return Math.sqrt(i*i+s*s)}static angle(e,t,i,s){return Math.atan2(s-t,i-e)}static normalize(e){const t=Math.sqrt(e.x*e.x+e.y*e.y);return t===0?{x:0,y:0}:{x:e.x/t,y:e.y/t}}static dot(e,t){return e.x*t.x+e.y*t.y}static circleCollision(e,t,i,s,a,n){return this.distance(e,t,s,a)<i+n}static pointInCircle(e,t,i,s,a){return this.distance(e,t,i,s)<=a}static pointInRect(e,t,i,s,a,n){return e>=i&&e<=i+a&&t>=s&&t<=s+n}static random(e,t){return Math.random()*(t-e)+e}static randomInt(e,t){return Math.floor(Math.random()*(t-e+1))+e}static easeInOut(e){return e<.5?2*e*e:-1+(4-2*e)*e}static easeIn(e){return e*e}static easeOut(e){return e*(2-e)}static easeSpring(e){return e*e*((1.70158+1)*e-1.70158)}static easeOutBack(e){return 1+2.70158*Math.pow(e-1,3)+1.70158*Math.pow(e-1,2)}static easeInBack(e){return 2.70158*e*e*e-1.70158*e*e}static easeElastic(e){if(e===0)return 0;if(e===1)return 1;const t=.3,i=t/4;return Math.pow(2,-10*e)*Math.sin((e-i)*(2*Math.PI)/t)+1}}var y=(d=>(d.SLOW_MO_SURGE="slow_mo_surge",d.MAGNETIC_GUIDE="magnetic_guide",d.CIRCUIT_PATCH="circuit_patch",d.OVERCLOCK_BOOST="overclock_boost",d.SCAN_REVEAL="scan_reveal",d))(y||{}),Z=(d=>(d.STANDARD="standard",d.HEAVY="heavy",d.LIGHT="light",d.NEON_SPLIT="neon_split",d))(Z||{});class Le{constructor(e,t){l(this,"levelData");l(this,"isCompleted",!1);l(this,"elapsedTime",0);l(this,"timerStarted",!1);l(this,"timerStopped",!1);l(this,"completedGoals",new Set);l(this,"onSoundEffect");this.levelData=e,this.onSoundEffect=t,o.info(`📋 Level ${e.id} loaded: ${e.name} (${e.goalHoles.length} goals)`,null,"Level")}start(){this.elapsedTime=0,this.timerStarted=!1,this.timerStopped=!1,this.isCompleted=!1,o.info(`🏁 Level ${this.levelData.id} started - waiting for first player input to start timer`,null,"Level")}startTimer(){!this.timerStarted&&!this.timerStopped&&(this.timerStarted=!0,o.info(`⏰ Timer started for Level ${this.levelData.id}`,null,"Level"))}stopTimer(){this.timerStarted&&!this.timerStopped&&(this.timerStopped=!0,o.info(`⏱️ Timer stopped for Level ${this.levelData.id} - Final time: ${this.getFormattedTime()}`,null,"Level"))}addTimeBonus(e){if(this.timerStarted&&!this.timerStopped){const t=e*1e3;this.elapsedTime=Math.max(0,this.elapsedTime-t),o.info(`⚡ Time bonus applied: -${e}s - New time: ${this.getFormattedTime()}`,null,"Level")}}getElapsedTime(){return this.elapsedTime}getFormattedTime(){const e=this.elapsedTime/1e3,t=Math.floor(e/60),i=e%60;return`${t}:${i.toFixed(3).padStart(6,"0")}`}isTimerRunning(){return this.timerStarted&&!this.timerStopped}hasTimerStarted(){return this.timerStarted}update(e){this.timerStarted&&!this.timerStopped&&(this.elapsedTime+=e),this.updateAnimatedHoles(Date.now()),this.levelData.holes.forEach(t=>{var i;t.isGoal?t.isActive=!0:(i=t.animationState)!=null&&i.isAnimated||(t.isActive=!0)})}checkHoleCollision(e,t,i){var s,a;for(const n of this.levelData.holes){if(!n.isActive||n.isGoal&&this.completedGoals.has(n.id)||(s=n.saucerState)!=null&&s.isActive||i&&((a=n.recentlyKickedBalls)!=null&&a.has(i)))continue;const r=e.x-n.position.x,c=e.y-n.position.y;if(Math.sqrt(r*r+c*c)<=n.radius)return o.info(`🕳️ Ball fell into hole: ${n.id}`,null,"Level"),n}return null}checkGoalReached(e,t){for(const i of this.levelData.goalHoles){if(this.completedGoals.has(i.id))continue;const s=e.x-i.position.x,a=e.y-i.position.y;if(Math.sqrt(s*s+a*a)<=i.radius)return o.info(`🎯 Ball reached goal hole: ${i.id}`,null,"Level"),this.completedGoals.add(i.id),!0}return!1}checkBallFallOff(e,t){return e.y>t.y+50}checkLevelComplete(){return!this.isCompleted&&this.completedGoals.size>=this.levelData.requiredGoals?(this.markComplete(),!0):this.isCompleted}getCompletedGoals(){return this.completedGoals.size}getRequiredGoals(){return this.levelData.requiredGoals}areAllGoalsCompleted(){return this.completedGoals.size>=this.levelData.requiredGoals}isGoalCompleted(e){return this.completedGoals.has(e)}getGoalHoleAtPosition(e){for(const t of this.levelData.goalHoles){const i=e.x-t.position.x,s=e.y-t.position.y;if(Math.sqrt(i*i+s*s)<=t.radius)return t}return null}markComplete(){this.isCompleted||(this.isCompleted=!0,this.stopTimer(),o.info(`🏆 Level ${this.levelData.id} completed!`,null,"Level"))}calculateScore(){const t=Math.max(0,(6e4-this.elapsedTime)/100);return Math.floor((1e3+t)*this.levelData.bonusMultiplier)}getProgress(){return this.isCompleted?1:0}getLevelData(){return this.levelData}getHoles(){return this.levelData.holes}startSaucerBehavior(e,t,i){const s=this.levelData.holes.find(r=>r.id===e);if(!s||!s.powerUpType)return;const a=Math.PI*.75+(Math.random()-.5)*.5,n={x:Math.cos(a),y:Math.sin(a)};s.saucerState={isActive:!0,ballId:t,startTime:i,phase:"sinking",sinkDuration:600,waitDuration:1e3+Math.random()*4e3,kickDirection:n,kickForce:200+Math.random()*150,sinkDepth:0},o.info(`🛸 Started saucer behavior for hole: ${e} - ball sinking naturally`,null,"Level")}getSaucerBallPosition(e){var i;const t=this.levelData.holes.find(s=>s.id===e);return!t||!((i=t.saucerState)!=null&&i.isActive)?null:{x:t.position.x,y:t.position.y}}updateSaucerBehavior(e){var t;for(const i of this.levelData.holes){if(!((t=i.saucerState)!=null&&t.isActive))continue;const s=i.saucerState;if(s.phase==="sinking"){const a=e-s.startTime,n=Math.min(a/s.sinkDuration,1),r=n*n*(3-2*n),c=r*r;s.sinkDepth=c,n>=1&&(s.phase="waiting",s.startTime=e,s.sinkDepth=1,o.info(`🛸 Ball fully sunk into saucer hole: ${i.id}`,null,"Level"))}else if(s.phase==="waiting")e-s.startTime>=s.waitDuration&&(s.phase="ejecting",s.startTime=e,o.info(`🚀 Saucer ejecting phase started for hole: ${i.id}`,null,"Level"));else if(s.phase==="ejecting"&&e-s.startTime>=200){const n={ballId:s.ballId,direction:s.kickDirection,force:s.kickForce,holeId:i.id},r=this.levelData.holes.indexOf(i);return r!==-1&&this.levelData.holes.splice(r,1),o.info(`🚀 Power-up hole completely removed from playfield: ${i.id}`,null,"Level"),n}}return null}isBallInSaucer(e){return this.levelData.holes.some(t=>{var i;return((i=t.saucerState)==null?void 0:i.isActive)&&t.saucerState.ballId===e})}deactivateHole(e){const t=this.levelData.holes.find(i=>i.id===e);t&&(t.isActive=!1,o.info(`🚫 Deactivated hole: ${e}`,null,"Level"))}updateAnimatedHoles(e){var t;for(const i of this.levelData.holes){if(!((t=i.animationState)!=null&&t.isAnimated))continue;const s=i.animationState,a=e-s.startTime;if(a<0){Math.abs(a)>500&&Math.abs(a)<600&&console.log(`⏰ Hole ${i.id} waiting to start: ${Math.abs(a)}ms remaining`);continue}switch(s.phase){case"animating_in":{const n=Math.min(a/s.animatingInDuration,1),r=fe.easeOutBack(n);s.currentScale=r,a>=s.animatingInDuration&&(s.phase="idle",s.startTime=e,s.currentScale=1,i.isActive=!0,o.info(`🌟 Animated hole entered idle phase: ${i.id}`,null,"Level"));break}case"idle":s.currentScale=1,a>=s.idleDuration&&(s.phase="animating_out",s.startTime=e,i.isActive=!1,this.onSoundEffect&&this.onSoundEffect("hole_disappear"),o.info(`🌟 Animated hole starting to animate out: ${i.id}`,null,"Level"));break;case"animating_out":{const n=Math.min(a/s.animatingOutDuration,1),r=1-fe.easeInBack(n);s.currentScale=r,a>=s.animatingOutDuration&&(s.phase="hidden",s.startTime=e,s.currentScale=0,i.isActive=!1,o.info(`🌟 Animated hole entered hidden phase: ${i.id}`,null,"Level"));break}case"hidden":i.isActive=!1,s.currentScale=0,a>=s.hiddenDuration&&(s.phase="animating_in",s.startTime=e,s.currentScale=0,s.idleDuration=3e3+Math.random()*7e3,this.onSoundEffect&&this.onSoundEffect("hole_appear"),o.info(`🔄 Animated hole starting new cycle: ${i.id}`,null,"Level"));break}}}createAnimatedHole(e,t){const a={id:e,position:t,radius:14,isGoal:!1,isActive:!1,animationState:{isAnimated:!0,phase:"hidden",startTime:Date.now(),animatingInDuration:500,idleDuration:3e3+Math.random()*7e3,animatingOutDuration:500,hiddenDuration:5e3+Math.random()*15e3,currentScale:0}};this.levelData.holes.push(a),o.info(`🌟 Created cycling animated hole: ${e} at position (${t.x}, ${t.y})`,null,"Level")}getAnimatedHoles(){return this.levelData.holes.filter(e=>{var t;return(t=e.animationState)==null?void 0:t.isAnimated})}reset(){this.isCompleted=!1,this.elapsedTime=0,this.timerStarted=!1,this.timerStopped=!1,this.completedGoals.clear(),this.levelData.holes.forEach(e=>{e.isActive=!0}),o.info(`🔄 Level ${this.levelData.id} reset`,null,"Level")}debugForceComplete(){for(const e of this.levelData.goalHoles)if(this.completedGoals.add(e.id),this.completedGoals.size>=this.levelData.requiredGoals)break;this.markComplete(),o.info(`🧪 DEBUG: Level ${this.levelData.id} force completed! (${this.completedGoals.size}/${this.levelData.requiredGoals} goals)`,null,"Level")}}class ke{constructor(){l(this,"levels",new Map);l(this,"currentLevel",null);l(this,"unlockedLevels",new Set([1]));o.info("📚 LevelManager initialized",null,"LevelManager"),this.loadLevels()}generateHoles(e){const t=[],u=Math.min(2,Math.max(1,Math.floor(e/2))),g=[{type:y.SLOW_MO_SURGE,spawnChance:.15,color:"#00ffff"},{type:y.MAGNETIC_GUIDE,spawnChance:.12,color:"#ff00ff"},{type:y.CIRCUIT_PATCH,spawnChance:.08,color:"#00ff00"},{type:y.OVERCLOCK_BOOST,spawnChance:.1,color:"#ff6600"},{type:y.SCAN_REVEAL,spawnChance:.06,color:"#ffff00"}],p=[],M=e+1;for(let E=0;E<M;E++){let Y=0,D=!1;for(;!D&&Y<100;){const z=50+Math.random()*260,R=50+Math.random()*100;D=!0;for(const K of p){const _=z-K.position.x,I=R-K.position.y;if(Math.sqrt(_*_+I*I)<14*3+8){D=!1;break}}D&&p.push({id:`goal-${e}-${E}`,position:{x:z,y:R},radius:14,isGoal:!0,isActive:!0}),Y++}}t.push(...p);const S=10,L=(580-(50+100))/S,T=.05+(e-1)*.01,k=.3+(e-1)*.08;let ie=0;for(let E=0;E<S;E++){const Y=580-(E+1)*L,D=T+E/S*k,z=Math.floor(D*12);for(let R=0;R<z;R++){let K=0,_=!1;for(;!_&&K<50;){const I=14+Math.random()*332,Q=Y+Math.random()*L;_=!0;for(const H of t){const ee=I-H.position.x,he=Q-H.position.y;if(Math.sqrt(ee*ee+he*he)<14*2+8){_=!1;break}}if(_){let H;if(ie<u){for(const ee of g)if(Math.random()<ee.spawnChance){H=ee.type,ie++;break}}t.push({id:`hole-${e}-${E}-${R}`,position:{x:I,y:Q},radius:14,isGoal:!1,isActive:!0,powerUpType:H})}K++}}}const U=e<=2?2:e<=4?3:e+1;for(let E=0;E<U;E++){let Y=0,D=!1;for(;!D&&Y<50;){const z=14+Math.random()*332,R=50+100+20,K=R+(580-R)/2,_=R+Math.random()*(K-R);D=!0;for(const I of t){const Q=z-I.position.x,H=_-I.position.y;if(Math.sqrt(Q*Q+H*H)<14*3+8){D=!1;break}}if(D){const I={id:`animated-hole-${e}-${E}`,position:{x:z,y:_},radius:14,isGoal:!1,isActive:!1,animationState:{isAnimated:!0,phase:"hidden",startTime:Date.now()+(E*2e3+Math.random()*3e3),animatingInDuration:500,idleDuration:3e3+Math.random()*7e3,animatingOutDuration:500,hiddenDuration:5e3+Math.random()*15e3,currentScale:0}};t.push(I),o.info(`🌟 Created animated hole ${I.id} - starts in ${(I.animationState.startTime-Date.now())/1e3}s`,null,"Level")}Y++}}return o.info(`🕳️ Generated ${t.length} holes for level ${e} (${ie} power-up holes, ${U} cycling animated holes, sparse at bottom, dense at top)`,null,"Level"),{holes:t,goalHoles:p}}loadLevels(){for(let e=1;e<=5;e++){const{holes:t,goalHoles:i}=this.generateHoles(e),s={id:e,name:`Circuit Level ${e}`,description:`Navigate through the holes to reach the goal circuit. Difficulty: ${e}/5`,holes:t,goalHoles:i,ballStartPosition:{x:343,y:584},difficulty:e,bonusMultiplier:1+(e-1)*.2,requiredGoals:i.length};this.levels.set(e,s)}o.info(`📚 Loaded ${this.levels.size} levels`,null,"LevelManager")}loadLevel(e,t){const i=this.levels.get(e);return i?this.isLevelUnlocked(e)?(this.currentLevel=new Le(i,t),this.currentLevel):(o.warn(`🔒 Level ${e} is locked`,null,"Level"),null):(o.warn(`⚠️ Level ${e} not found`,null,"Level"),null)}isLevelUnlocked(e){return this.unlockedLevels.has(e)}unlockLevel(e){this.unlockedLevels.has(e)||(this.unlockedLevels.add(e),o.info(`🔓 Level ${e} unlocked`,null,"Level"))}getCurrentLevel(){return this.currentLevel}getAvailableLevels(){return Array.from(this.levels.keys())}getUnlockedLevels(){return Array.from(this.unlockedLevels)}getLevelData(e){return this.levels.get(e)||null}regenerateLevels(){o.info("🔄 Regenerating all levels for new run...",null,"LevelManager"),this.levels.clear(),this.loadLevels(),o.info("✅ All levels regenerated with new layouts",null,"LevelManager")}}class Oe{constructor(){l(this,"audioContext",null);l(this,"masterGain",null);l(this,"sfxGain",null);l(this,"musicGain",null);l(this,"config",{masterVolume:.7,sfxVolume:.8,musicVolume:.4,enabled:!0});l(this,"soundEffects",new Map);l(this,"loadedSounds",new Map);l(this,"currentMusic",null);l(this,"currentMusicGain",null);l(this,"musicAnalyser",null);l(this,"isInitialized",!1);o.info("🔊 AudioManager initialized",null,"AudioManager")}init(){return C(this,null,function*(){if(!this.isInitialized)try{const e=window.AudioContext||window.webkitAudioContext;this.audioContext=new e,this.masterGain=this.audioContext.createGain(),this.sfxGain=this.audioContext.createGain(),this.musicGain=this.audioContext.createGain(),this.musicAnalyser=this.audioContext.createAnalyser(),this.musicAnalyser.fftSize=512,this.musicAnalyser.smoothingTimeConstant=.3,this.sfxGain.connect(this.masterGain),this.musicGain.connect(this.musicAnalyser),this.musicAnalyser.connect(this.masterGain),this.masterGain.connect(this.audioContext.destination),this.masterGain.gain.value=this.config.masterVolume,this.sfxGain.gain.value=this.config.sfxVolume,this.musicGain.gain.value=this.config.musicVolume,yield this.createProceduralSounds(),this.isInitialized=!0,o.info("✅ Audio system initialized",null,"AudioManager")}catch(e){o.error("❌ Failed to initialize audio system:",e,"AudioManager"),this.config.enabled=!1}})}createProceduralSounds(){return C(this,null,function*(){if(!this.audioContext)return;const e=this.createBounceSound();this.soundEffects.set("bounce",{id:"bounce",buffer:e,volume:.6,loop:!1,pitch:1});const t=this.createRollingSound();this.soundEffects.set("roll",{id:"roll",buffer:t,volume:.3,loop:!0,pitch:1});const i=this.createElectricalZap();this.soundEffects.set("zap",{id:"zap",buffer:i,volume:.7,loop:!1,pitch:1});const s=this.createTargetSound();this.soundEffects.set("target",{id:"target",buffer:s,volume:.8,loop:!1,pitch:1});const a=this.createLevelCompleteSound();this.soundEffects.set("level_complete",{id:"level_complete",buffer:a,volume:.9,loop:!1,pitch:1});const n=this.createUIClickSound();this.soundEffects.set("ui_click",{id:"ui_click",buffer:n,volume:.5,loop:!1,pitch:1});const r=this.createUIHoverSound();this.soundEffects.set("ui_hover",{id:"ui_hover",buffer:r,volume:.3,loop:!1,pitch:1});const c=this.createUISlideSound();this.soundEffects.set("ui_slide",{id:"ui_slide",buffer:c,volume:.4,loop:!1,pitch:1});const h=this.createGameOverSound();this.soundEffects.set("game_over",{id:"game_over",buffer:h,volume:.8,loop:!1,pitch:1});const f=this.createPowerupCollectSound();this.soundEffects.set("powerup_collect",{id:"powerup_collect",buffer:f,volume:.7,loop:!1,pitch:1});const u=this.createPowerupActivateSound();this.soundEffects.set("powerup_activate",{id:"powerup_activate",buffer:u,volume:.6,loop:!1,pitch:1});const g=this.createShieldBreakSound();this.soundEffects.set("shield_break",{id:"shield_break",buffer:g,volume:.8,loop:!1,pitch:1});const p=this.createShieldActivateSound();this.soundEffects.set("shield_activate",{id:"shield_activate",buffer:p,volume:.6,loop:!1,pitch:1});const M=this.createHoleAppearSound();this.soundEffects.set("hole_appear",{id:"hole_appear",buffer:M,volume:.5,loop:!1,pitch:1});const S=this.createHoleDisappearSound();this.soundEffects.set("hole_disappear",{id:"hole_disappear",buffer:S,volume:.5,loop:!1,pitch:1}),o.info(`🎵 Created ${this.soundEffects.size} procedural sound effects`,null,"AudioManager")})}createBounceSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.2,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*8),h=Math.sin(2*Math.PI*800*r)*.5,f=Math.sin(2*Math.PI*1600*r)*.3,u=Math.sin(2*Math.PI*2400*r)*.2,g=(Math.random()-.5)*.1;a[n]=(h+f+u+g)*c}return s}createRollingSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*1,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.sin(2*Math.PI*60*r)*.3,h=Math.sin(2*Math.PI*200*r)*.1,f=(Math.random()-.5)*.2;a[n]=c+h+f}return s}createElectricalZap(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.3,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*6),h=Math.sin(2*Math.PI*1200*r)*.4,f=Math.sin(2*Math.PI*3e3*r)*.3,u=(Math.random()-.5)*.5;a[n]=(h+f+u)*c}return s}createTargetSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.5,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*4),h=Math.sin(2*Math.PI*523*r)*.5,f=Math.sin(2*Math.PI*659*r)*.3,u=Math.sin(2*Math.PI*784*r)*.2;a[n]=(h+f+u)*c}return s}createLevelCompleteSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*1,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0),n=[523,659,784,1047],r=i/n.length;for(let c=0;c<i;c++){const h=Math.floor(c/r),f=c%r/e,u=Math.exp(-f*2),g=n[h]||n[n.length-1],p=Math.sin(2*Math.PI*g*f)*u*.5;a[c]=p}return s}createUIClickSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.1,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*20),h=Math.sin(2*Math.PI*1e3*r)*c*.3;a[n]=h}return s}createUIHoverSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.05,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*30),h=Math.sin(2*Math.PI*800*r)*c*.2;a[n]=h}return s}createUISlideSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.15,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*8),h=600+Math.sin(r*10)*100,f=Math.sin(2*Math.PI*h*r)*c*.25;a[n]=f}return s}createGameOverSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*1.5,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*2),h=400-r*200,f=Math.sin(2*Math.PI*Math.max(50,h)*r)*.4,u=(Math.random()-.5)*.3,g=Math.sin(2*Math.PI*100*r)*.2;a[n]=(f+u+g)*c}return s}createPowerupCollectSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.4,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*5),h=800+r*400,f=Math.sin(2*Math.PI*h*r)*.4,u=Math.sin(2*Math.PI*(h*1.5)*r)*.2,g=Math.sin(2*Math.PI*2e3*r)*.1;a[n]=(f+u+g)*c}return s}createPowerupActivateSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.3,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*8),h=Math.sin(2*Math.PI*600*r)*.3,f=Math.sin(2*Math.PI*1800*r)*.2,u=(Math.random()-.5)*.2;a[n]=(h+f+u)*c}return s}createShieldBreakSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.5,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*4),h=Math.sin(2*Math.PI*1200*r)*.3,f=Math.sin(2*Math.PI*800*r)*.2,u=(Math.random()-.5)*.4,g=Math.sin(2*Math.PI*400*r)*.1;a[n]=(h+f+u+g)*c}return s}createShieldActivateSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.6,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.exp(-r*3),h=Math.sin(2*Math.PI*200*r)*.3,f=Math.sin(2*Math.PI*400*r)*.2,u=Math.sin(2*Math.PI*100*r)*.1;a[n]=(h+f+u)*c}return s}createHoleAppearSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.4,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.sin(Math.PI*r),h=200+Math.pow(r,2)*400,f=Math.sin(2*Math.PI*h*r)*.4,u=Math.sin(2*Math.PI*(800+Math.random()*200)*r)*.2,g=Math.sin(2*Math.PI*300*r)*.1;a[n]=(f+u+g)*c}return s}createHoleDisappearSound(){if(!this.audioContext)return null;const e=this.audioContext.sampleRate,i=e*.4,s=this.audioContext.createBuffer(1,i,e),a=s.getChannelData(0);for(let n=0;n<i;n++){const r=n/e,c=Math.sin(Math.PI*r),h=600-Math.pow(r,2)*400,f=Math.sin(2*Math.PI*h*r)*.4,u=Math.sin(2*Math.PI*(400-r*200)*r)*.2,g=Math.sin(2*Math.PI*150*r)*.1;a[n]=(f+u+g)*c}return s}playSound(e,t=1,i=1){if(!this.config.enabled||!this.audioContext||!this.isInitialized)return;const s=this.soundEffects.get(e);if(!s||!s.buffer){o.warn(`🔇 Sound not found: ${e}`);return}try{const a=this.audioContext.createBufferSource(),n=this.audioContext.createGain();a.buffer=s.buffer,a.loop=s.loop,a.playbackRate.value=i,n.gain.value=s.volume*t,a.connect(n),this.sfxGain&&n.connect(this.sfxGain),a.start(),s.loop||a.addEventListener("ended",()=>{a.disconnect(),n.disconnect()})}catch(a){o.error(`❌ Error playing sound ${e}:`,a)}}playBounceSound(e){const t=Math.min(e/500,1),i=.3+t*.7,s=.8+t*.4;this.playSound("bounce",i,s)}playRollingSound(){this.playSound("roll",.5)}stopAllSounds(){if(this.audioContext)try{this.currentMusic&&(this.currentMusic.stop(),this.currentMusic=null),o.info("🔇 All sounds stopped")}catch(e){o.error("❌ Error stopping sounds:",e)}}setMasterVolume(e){this.config.masterVolume=Math.max(0,Math.min(1,e)),this.masterGain&&(this.masterGain.gain.value=this.config.masterVolume)}setSFXVolume(e){this.config.sfxVolume=Math.max(0,Math.min(1,e)),this.sfxGain&&(this.sfxGain.gain.value=this.config.sfxVolume)}setMusicVolume(e){this.config.musicVolume=Math.max(0,Math.min(1,e)),this.musicGain&&(this.musicGain.gain.value=this.config.musicVolume)}setEnabled(e){this.config.enabled=e,e||this.stopAllSounds()}getConfig(){return v({},this.config)}resumeContext(){return C(this,null,function*(){this.audioContext&&this.audioContext.state==="suspended"&&(yield this.audioContext.resume(),o.info("🔊 Audio context resumed",null,"AudioManager"))})}isContextSuspended(){var e;return((e=this.audioContext)==null?void 0:e.state)==="suspended"}isAvailable(){return this.isInitialized&&this.config.enabled}getBaseUrl(){return window.location.pathname.includes("/circuit-breaker/")?"/circuit-breaker/":"/"}loadMusic(e){return C(this,null,function*(){if(!this.audioContext)return null;try{const i=`${this.getBaseUrl()}assets/audio/${e}`;o.info(`🎵 Attempting to load audio from: ${i}`);const s=yield fetch(i);if(!s.ok)throw new Error(`Failed to load ${e}: ${s.status}`);const a=yield s.arrayBuffer(),n=yield this.audioContext.decodeAudioData(a);return this.loadedSounds.set(e,n),o.info(`🎵 Loaded music: ${e}`),n}catch(t){return o.error(`❌ Error loading music ${e}:`,t),null}})}playMusic(e,t=!0,i=1){return C(this,null,function*(){if(!(!this.config.enabled||!this.audioContext||!this.isInitialized)){this.stopMusic();try{let s=this.loadedSounds.get(e);if(!s){const r=yield this.loadMusic(e);if(!r)return;s=r}const a=this.audioContext.createBufferSource(),n=this.audioContext.createGain();a.buffer=s,a.loop=t,n.gain.value=i,a.connect(n),this.musicGain&&n.connect(this.musicGain),this.currentMusic=a,this.currentMusicGain=n,a.start(),t||a.addEventListener("ended",()=>{this.currentMusic=null,this.currentMusicGain=null}),o.info(`🎵 Playing music: ${e} (loop: ${t})`)}catch(s){o.error(`❌ Error playing music ${e}:`,s)}}})}stopMusic(){if(this.currentMusic){try{this.currentMusic.stop(),this.currentMusic.disconnect(),this.currentMusicGain&&this.currentMusicGain.disconnect()}catch(e){}this.currentMusic=null,this.currentMusicGain=null,o.info("🔇 Music stopped")}}fadeToMusic(e=null,t=1){return C(this,null,function*(){if(!this.currentMusicGain||!this.audioContext){e&&(yield this.playMusic(e));return}const i=60,s=t*1e3/i,a=this.currentMusicGain.gain.value/i;for(let n=0;n<i;n++)setTimeout(()=>{this.currentMusicGain&&(this.currentMusicGain.gain.value=Math.max(0,this.currentMusicGain.gain.value-a))},n*s);setTimeout(()=>{this.stopMusic(),e&&this.playMusic(e)},t*1e3)})}isMusicPlaying(){const e=this.currentMusic!==null;return Date.now()%3e3<16&&console.log(`🎵 Music Status: ${e?"Playing":"Not Playing"}, Analyser: ${this.musicAnalyser?"Active":"Inactive"}`),e}getMusicLevels(){if(!this.musicAnalyser||!this.isMusicPlaying())return{bass:0,mid:0,treble:0,overall:0};const e=this.musicAnalyser.frequencyBinCount,t=new Uint8Array(e);this.musicAnalyser.getByteFrequencyData(t);const i=Math.floor(e*.15),s=Math.floor(e*.25);let a=0,n=0,r=0;for(let c=0;c<e;c++){const h=t[c]/255;c<i?a+=h:c<i+s?n+=h:r+=h}return{bass:a/i,mid:n/s,treble:r/(e-i-s),overall:(a*.6+n*.3+r*.1)/e}}getAudioLevel(){const e=this.getMusicLevels();return Date.now()%2e3<16&&console.log(`🔊 Audio Levels - Bass: ${e.bass.toFixed(3)}, Mid: ${e.mid.toFixed(3)}, Treble: ${e.treble.toFixed(3)}, Overall: ${e.overall.toFixed(3)}`),e.overall}}class ae{constructor(e){l(this,"config");l(this,"isHovered",!1);l(this,"isPressed",!1);this.config=e}draw(e){const{x:t,y:i,width:s,height:a,label:n,nineSlice:r}=this.config;r?e.drawImage(r,t,i,s,a):(e.save(),e.fillStyle=this.isPressed?"#00f0ff":this.isHovered?"#b600f9":"#222",e.strokeStyle="#00f0ff",e.lineWidth=2,e.beginPath(),e.roundRect(t,i,s,a,8),e.fill(),e.stroke(),e.restore()),e.save(),e.fillStyle="#fff",e.font="18px Interceptor, monospace",e.textAlign="center",e.textBaseline="middle",e.fillText(n,t+s/2,i+a/2),e.restore()}handlePointerMove(e,t){const{x:i,y:s,width:a,height:n,audioManager:r}=this.config,c=this.isHovered;this.isHovered=e>=i&&e<=i+a&&t>=s&&t<=s+n,this.isHovered&&!c&&r.playSound(this.config.soundKey||"ui_hover")}handlePointerDown(e,t){this.isHovered&&(this.isPressed=!0)}handlePointerUp(e,t){this.isHovered&&this.isPressed&&(this.config.audioManager.playSound(this.config.soundKey||"ui_click"),this.config.onClick()),this.isPressed=!1}setLabel(e){this.config.label=e}}class ne{constructor(e){l(this,"config");l(this,"isDragging",!1);this.config=e}draw(e){const{x:t,y:i,width:s,min:a,max:n,value:r,nineSlice:c}=this.config;c?e.drawImage(c,t,i,s,16):(e.save(),e.fillStyle="#222",e.strokeStyle="#00f0ff",e.lineWidth=2,e.beginPath(),e.roundRect(t,i,s,16,8),e.fill(),e.stroke(),e.restore());const h=(r-a)/(n-a),f=t+h*s;e.save(),e.fillStyle="#b600f9",e.beginPath(),e.arc(f,i+8,10,0,Math.PI*2),e.fill(),e.restore()}handlePointerDown(e,t){const{x:i,y:s,width:a}=this.config;t>=s&&t<=s+16&&e>=i&&e<=i+a&&(this.isDragging=!0,this.updateValueFromPointer(e))}handlePointerMove(e,t){this.isDragging&&this.updateValueFromPointer(e)}handlePointerUp(e,t){this.isDragging&&(this.isDragging=!1,this.config.audioManager.playSound(this.config.soundKey||"ui_click"))}updateValueFromPointer(e){const{x:t,width:i,min:s,max:a,onChange:n,audioManager:r}=this.config;let c=(e-t)/i;c=Math.max(0,Math.min(1,c));const h=s+c*(a-s);h!==this.config.value&&(this.config.value=h,n(h),r.playSound(this.config.soundKey||"ui_slide"))}setValue(e){this.config.value=Math.max(this.config.min,Math.min(this.config.max,e))}}class de{constructor(e){l(this,"config");l(this,"isVisible",!1);l(this,"buttons",[]);l(this,"sliders",[]);l(this,"masterVolumeSlider");l(this,"musicVolumeSlider");l(this,"sfxVolumeSlider");l(this,"muteButton");l(this,"closeButton");l(this,"backToMenuButton");this.config=e,this.createControls()}createControls(){const{audioManager:e,onClose:t,onBackToMenu:i,isFromPauseMenu:s}=this.config;this.masterVolumeSlider=new ne({x:80,y:200,width:200,min:0,max:1,value:e.getConfig().masterVolume,onChange:a=>{e.setMasterVolume(a),o.debug(`Master volume set to: ${a}`,null,"SettingsMenu")},audioManager:e,soundKey:"ui_slide"}),this.musicVolumeSlider=new ne({x:80,y:250,width:200,min:0,max:1,value:e.getConfig().musicVolume,onChange:a=>{e.setMusicVolume(a),o.debug(`Music volume set to: ${a}`,null,"SettingsMenu")},audioManager:e,soundKey:"ui_slide"}),this.sfxVolumeSlider=new ne({x:80,y:300,width:200,min:0,max:1,value:e.getConfig().sfxVolume,onChange:a=>{e.setSFXVolume(a),o.debug(`SFX volume set to: ${a}`,null,"SettingsMenu")},audioManager:e,soundKey:"ui_slide"}),this.muteButton=new ae({x:80,y:350,width:200,height:40,label:e.getConfig().enabled?"Mute Audio":"Unmute Audio",onClick:()=>{const a=!e.getConfig().enabled;e.setEnabled(a),this.muteButton.setLabel(a?"Mute Audio":"Unmute Audio"),o.debug(`Audio ${a?"enabled":"disabled"}`,null,"SettingsMenu")},audioManager:e,soundKey:"ui_click"}),this.closeButton=new ae({x:80,y:420,width:200,height:40,label:"Close",onClick:t,audioManager:e,soundKey:"ui_click"}),s&&i&&(this.backToMenuButton=new ae({x:80,y:470,width:200,height:40,label:"Back to Menu",onClick:i,audioManager:e,soundKey:"ui_click"})),this.sliders=[this.masterVolumeSlider,this.musicVolumeSlider,this.sfxVolumeSlider],this.buttons=[this.muteButton,this.closeButton],this.backToMenuButton&&this.buttons.push(this.backToMenuButton)}show(){this.isVisible=!0,o.info("Settings menu opened",null,"SettingsMenu")}hide(){this.isVisible=!1,o.info("Settings menu closed",null,"SettingsMenu")}isMenuVisible(){return this.isVisible}draw(e){this.isVisible&&(e.save(),e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(0,0,360,640),e.restore(),e.save(),e.fillStyle="#1a1a1a",e.strokeStyle="#00f0ff",e.lineWidth=3,e.beginPath(),e.roundRect(50,100,260,440,12),e.fill(),e.stroke(),e.restore(),e.save(),e.fillStyle="#00f0ff",e.font="24px Cyberpunks, monospace",e.textAlign="center",e.fillText("SETTINGS",180,140),e.restore(),e.save(),e.fillStyle="#ffffff",e.font="16px Interceptor, monospace",e.textAlign="left",e.fillText("Master Volume:",80,190),e.fillText("Music Volume:",80,240),e.fillText("SFX Volume:",80,290),e.restore(),this.sliders.forEach(t=>t.draw(e)),this.buttons.forEach(t=>t.draw(e)))}handlePointerMove(e,t){this.isVisible&&this.buttons.forEach(i=>i.handlePointerMove(e,t))}handlePointerDown(e,t){this.isVisible&&(this.buttons.forEach(i=>i.handlePointerDown(e,t)),this.sliders.forEach(i=>i.handlePointerDown(e,t)))}handlePointerUp(e,t){this.isVisible&&(this.buttons.forEach(i=>i.handlePointerUp(e,t)),this.sliders.forEach(i=>i.handlePointerUp(e,t)))}updateVolumeDisplays(){const e=this.config.audioManager.getConfig();this.masterVolumeSlider.setValue(e.masterVolume),this.musicVolumeSlider.setValue(e.musicVolume),this.sfxVolumeSlider.setValue(e.sfxVolume),this.muteButton.setLabel(e.enabled?"Mute Audio":"Unmute Audio")}get isFromPauseMenu(){return!!this.config.isFromPauseMenu}}class Ie{constructor(e){l(this,"config");l(this,"selectedSlot",0);l(this,"isConfirmingDelete",!1);l(this,"deleteSlotId",-1);l(this,"isVisible",!1);l(this,"hoveredSlot",-1);l(this,"scrollOffset",0);l(this,"message","");l(this,"messageTimer",0);l(this,"messageType","info");this.config=e,o.info("💾 SaveLoadMenu initialized",null,"SaveLoadMenu")}show(){this.isVisible=!0,this.selectedSlot=0,this.isConfirmingDelete=!1,this.deleteSlotId=-1,this.hoveredSlot=-1,this.scrollOffset=0,this.clearMessage(),o.info("💾 Save/Load menu opened",null,"SaveLoadMenu")}hide(){this.isVisible=!1,o.info("💾 Save/Load menu closed",null,"SaveLoadMenu")}isMenuVisible(){return this.isVisible}handlePointerMove(e,t){if(!this.isVisible)return;const i=this.getSlotYPosition(),s=80,a=150+i;for(let n=0;n<3;n++){const r=a+n*(s+10),c=r+s;if(t>=r&&t<=c&&e>=50&&e<=310){this.hoveredSlot=n;return}}this.hoveredSlot=-1}handlePointerDown(e,t){if(!this.isVisible)return;if(this.isConfirmingDelete){this.handleDeleteConfirmationClick(e,t);return}const i=this.getSlotYPosition(),s=80,a=150+i;for(let n=0;n<3;n++){const r=a+n*(s+10),c=r+s;if(t>=r&&t<=c&&e>=50&&e<=310){this.selectedSlot=n;return}}this.handleButtonClick(e,t)}handlePointerUp(e,t){this.isVisible}handleKeyPress(e){if(!this.isVisible)return!1;switch(e){case"Escape":return this.isConfirmingDelete?this.cancelDelete():this.config.onClose(),!0;case"Enter":return this.isConfirmingDelete?this.confirmDelete():this.loadSelectedSlot(),!0;case"KeyN":return this.isConfirmingDelete||this.newGameInSelectedSlot(),!0;case"KeyD":return this.isConfirmingDelete||this.deleteSelectedSlot(),!0;case"ArrowUp":return this.selectedSlot=Math.max(0,this.selectedSlot-1),!0;case"ArrowDown":return this.selectedSlot=Math.min(2,this.selectedSlot+1),!0}return!1}render(e){this.isVisible&&(e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(0,0,360,640),e.fillStyle="#1a1a2e",e.fillRect(20,50,320,540),e.fillStyle="#ffffff",e.font='24px "Cyberpunks"',e.textAlign="center",e.fillText("SAVE/LOAD GAME",180,90),this.isConfirmingDelete?this.renderDeleteConfirmation(e):(this.renderSaveSlots(e),this.renderButtons(e),this.renderProgressInfo(e),this.renderMessage(e)))}renderSaveSlots(e){const t=this.config.getSaveSlots(),i=this.getSlotYPosition(),s=80,a=150+i;for(let n=0;n<3;n++){const r=a+n*(s+10),c=t.find(u=>u.id===n),h=this.selectedSlot===n,f=this.hoveredSlot===n;if(h?e.fillStyle="#4a90e2":f?e.fillStyle="#2a2a4e":e.fillStyle="#2a2a3e",e.fillRect(50,r,260,s),e.strokeStyle=h?"#ffffff":"#444444",e.lineWidth=2,e.strokeRect(50,r,260,s),c){e.fillStyle="#ffffff",e.font='16px "Interceptor"',e.textAlign="left",e.fillText(`Save ${n+1}`,70,r+25),e.fillStyle="#cccccc",e.font='14px "Interceptor"',e.fillText(`Level: ${c.progress.currentLevel}`,70,r+45),e.fillText(`Score: ${c.progress.totalScore.toLocaleString()}`,70,r+65);const u=new Date(c.lastPlayed);e.fillStyle="#888888",e.font='12px "Interceptor"',e.fillText(u.toLocaleDateString(),200,r+25),e.fillText(u.toLocaleTimeString(),200,r+45)}else e.fillStyle="#666666",e.font='16px "Interceptor"',e.textAlign="center",e.fillText("Empty Slot",180,r+45)}}renderButtons(e){e.fillStyle="#4a90e2",e.fillRect(60,450,80,40),e.fillStyle="#ffffff",e.font='14px "Interceptor"',e.textAlign="center",e.fillText("LOAD",100,450+25),e.fillStyle="#50c878",e.fillRect(150,450,80,40),e.fillStyle="#ffffff",e.font='14px "Interceptor"',e.textAlign="center",e.fillText("NEW",190,450+25),e.fillStyle="#e74c3c",e.fillRect(240,450,80,40),e.fillStyle="#ffffff",e.font='14px "Interceptor"',e.textAlign="center",e.fillText("DELETE",280,450+25),e.fillStyle="#888888",e.font='12px "Interceptor"',e.textAlign="center",e.fillText("Use arrow keys to navigate, Enter to select",180,450+70),e.fillText("ESC to close",180,450+85)}renderProgressInfo(e){const t=this.config.getCurrentProgress();if(!t)return;const i=550;e.fillStyle="#ffffff",e.font='14px "Interceptor"',e.textAlign="left",e.fillText(`Total Play Time: ${this.formatPlayTime(t.playTime)}`,60,i),e.fillText(`Games Played: ${t.gamesPlayed}`,60,i+20),e.fillText(`Goals Reached: ${t.totalGoalsReached}`,60,i+40),e.fillText(`Balls Lost: ${t.totalBallsLost}`,60,i+60);const s=this.config.getAchievements(),a=s.filter(n=>n.unlocked).length;e.fillText(`Achievements: ${a}/${s.length}`,200,i)}renderDeleteConfirmation(e){e.fillStyle="#2a2a3e",e.fillRect(80,200,200,150),e.strokeStyle="#e74c3c",e.lineWidth=3,e.strokeRect(80,200,200,150),e.fillStyle="#ffffff",e.font='16px "Interceptor"',e.textAlign="center",e.fillText("DELETE SAVE SLOT?",180,230),e.fillText(`Save ${this.deleteSlotId+1}`,180,250),e.fillStyle="#ff6b6b",e.font='14px "Interceptor"',e.fillText("This action cannot be undone!",180,270),e.fillStyle="#e74c3c",e.fillRect(100,280,60,30),e.fillStyle="#ffffff",e.font='12px "Interceptor"',e.fillText("YES",130,300),e.fillStyle="#4a90e2",e.fillRect(200,280,60,30),e.fillStyle="#ffffff",e.fillText("NO",230,300)}handleButtonClick(e,t){t>=450&&t<=450+40&&(e>=60&&e<=60+80?this.loadSelectedSlot():e>=150&&e<=150+80?this.newGameInSelectedSlot():e>=240&&e<=240+80&&this.deleteSelectedSlot())}handleDeleteConfirmationClick(e,t){e>=100&&e<=160&&t>=280&&t<=310?this.confirmDelete():e>=200&&e<=260&&t>=280&&t<=310&&this.cancelDelete()}loadSelectedSlot(){this.config.getSaveSlots().find(i=>i.id===this.selectedSlot)?(o.info(`📂 Loading save slot ${this.selectedSlot}`,null,"SaveLoadMenu"),this.showMessage(`Loading save slot ${this.selectedSlot+1}...`,"info",1e3),setTimeout(()=>{this.config.onLoadGame(this.selectedSlot),this.hide()},1e3)):(o.warn(`⚠️ No save data in slot ${this.selectedSlot}`,null,"SaveLoadMenu"),this.showMessage("No save data in this slot","error"))}newGameInSelectedSlot(){o.info(`🆕 Starting new game in slot ${this.selectedSlot}`,null,"SaveLoadMenu"),this.showMessage(`Starting new game in slot ${this.selectedSlot+1}...`,"success",1e3),setTimeout(()=>{this.config.onNewGame(this.selectedSlot),this.hide()},1e3)}deleteSelectedSlot(){this.config.getSaveSlots().find(i=>i.id===this.selectedSlot)?(this.isConfirmingDelete=!0,this.deleteSlotId=this.selectedSlot,o.info(`🗑️ Confirming deletion of save slot ${this.selectedSlot}`,null,"SaveLoadMenu")):(o.warn(`⚠️ No save data to delete in slot ${this.selectedSlot}`,null,"SaveLoadMenu"),this.showMessage("No save data to delete","error"))}confirmDelete(){o.info(`🗑️ Deleting save slot ${this.deleteSlotId}`,null,"SaveLoadMenu"),this.config.onDeleteSlot(this.deleteSlotId),this.showMessage(`Save slot ${this.deleteSlotId+1} deleted`,"success"),this.cancelDelete()}cancelDelete(){this.isConfirmingDelete=!1,this.deleteSlotId=-1}getSlotYPosition(){return this.scrollOffset}formatPlayTime(e){const t=Math.floor(e/36e5),i=Math.floor(e%(1e3*60*60)/(1e3*60));return t>0?`${t}h ${i}m`:`${i}m`}showMessage(e,t="info",i=3e3){this.message=e,this.messageType=t,this.messageTimer=Date.now()+i,o.info(`💾 Save/Load Menu: ${e}`,null,"SaveLoadMenu")}clearMessage(){this.message="",this.messageTimer=0}update(e){this.message&&this.messageTimer>0&&Date.now()>this.messageTimer&&this.clearMessage()}renderMessage(e){if(!this.message)return;e.fillStyle="rgba(0, 0, 0, 0.9)",e.fillRect(60,400,240,40);const t=this.messageType==="error"?"#e74c3c":this.messageType==="success"?"#50c878":"#4a90e2";e.strokeStyle=t,e.lineWidth=2,e.strokeRect(60,400,240,40),e.fillStyle="#ffffff",e.font='14px "Interceptor"',e.textAlign="center",e.fillText(this.message,180,425)}}class De{constructor(e){l(this,"config");l(this,"achievement",null);l(this,"isVisible",!1);l(this,"startTime",0);l(this,"animationPhase","slideIn");l(this,"slideInDuration",500);l(this,"slideOutDuration",500);l(this,"showDuration",3e3);this.config=e,o.info("🏆 AchievementNotification initialized",null,"AchievementNotification")}show(e){this.achievement=e,this.isVisible=!0,this.startTime=Date.now(),this.animationPhase="slideIn",o.info(`🏆 Showing achievement notification: ${e.name}`,null,"AchievementNotification")}hide(){this.isVisible=!1,this.achievement=null,this.animationPhase="slideIn"}isNotificationVisible(){return this.isVisible}update(e){if(!this.isVisible||!this.achievement)return;const t=Date.now()-this.startTime;this.animationPhase==="slideIn"&&t>=this.slideInDuration?(this.animationPhase="show",this.startTime=Date.now()):this.animationPhase==="show"&&t>=this.showDuration?(this.animationPhase="slideOut",this.startTime=Date.now()):this.animationPhase==="slideOut"&&t>=this.slideOutDuration&&(this.hide(),this.config.onComplete())}render(e){if(!this.isVisible||!this.achievement)return;const t=Date.now()-this.startTime;let i=0,s=0;switch(this.animationPhase){case"slideIn":i=Math.min(t/this.slideInDuration,1),s=(1-i)*100;break;case"show":i=1,s=0;break;case"slideOut":i=Math.min(t/this.slideOutDuration,1),s=i*100;break}const a=this.easeOutBack(i),n=300,r=80,c=360-n-20+(1-a)*n,h=20+s,f=e.createLinearGradient(c,h,c,h+r);f.addColorStop(0,"#2a2a3e"),f.addColorStop(1,"#1a1a2e"),e.fillStyle=f,e.fillRect(c,h,n,r);const u={common:"#cccccc",rare:"#4a90e2",epic:"#9b59b6",legendary:"#f39c12"};e.strokeStyle=u[this.achievement.rarity]||"#cccccc",e.lineWidth=3,e.strokeRect(c,h,n,r),e.fillStyle="#ffffff",e.font="24px Arial",e.textAlign="center",e.fillText(this.achievement.icon,c+30,h+45),e.fillStyle="#ffffff",e.font='16px "Interceptor"',e.textAlign="left",e.fillText(this.achievement.name,c+60,h+30),e.fillStyle="#cccccc",e.font='12px "Interceptor"',e.fillText(this.achievement.description,c+60,h+50);const g=this.achievement.rarity.toUpperCase();if(e.fillStyle=u[this.achievement.rarity]||"#cccccc",e.font='10px "Interceptor"',e.textAlign="center",e.fillText(g,c+n-40,h+25),this.achievement.maxProgress&&this.achievement.progress!==void 0){const S=c+n-80-20,w=h+r-20;e.fillStyle="#444444",e.fillRect(S,w,80,6);const L=this.achievement.progress/this.achievement.maxProgress;e.fillStyle=u[this.achievement.rarity]||"#4a90e2",e.fillRect(S,w,80*L,6),e.fillStyle="#ffffff",e.font='10px "Interceptor"',e.textAlign="center",e.fillText(`${this.achievement.progress}/${this.achievement.maxProgress}`,S+80/2,w-5)}this.achievement.rarity==="legendary"&&this.renderSparkles(e,c,h,n,r,t)}renderSparkles(e,t,i,s,a,n){for(let h=0;h<8;h++){const f=(n*.001+h*Math.PI*2/8)%(Math.PI*2),u=30+Math.sin(n*.002+h)*10,g=t+s/2+Math.cos(f)*u,p=i+a/2+Math.sin(f)*u,M=.5+.5*Math.sin(n*.003+h);e.fillStyle=`rgba(255, 215, 0, ${M})`,e.fillRect(g-2/2,p-2/2,2,2)}}easeOutBack(e){return 1+2.70158*Math.pow(e-1,3)+1.70158*Math.pow(e-1,2)}}class Re{constructor(e){l(this,"config");l(this,"currentTab","overview");l(this,"scrollOffset",0);l(this,"TAB_HEIGHT",40);l(this,"SCROLL_SPEED",20);this.config=e,o.info("📊 StatsMenu initialized",null,"StatsMenu")}render(e){e&&(e.fillStyle="rgba(0, 0, 0, 0.9)",e.fillRect(0,0,360,640),this.drawContainer(e),this.drawHeader(e),this.drawTabs(e),this.drawContent(e),this.drawFooter(e))}handleInput(e){switch(e){case"Escape":this.config.onClose();break;case"Digit1":case"1":this.currentTab="overview";break;case"Digit2":case"2":this.currentTab="levels";break;case"Digit3":case"3":this.currentTab="performance";break;case"Digit4":case"4":this.currentTab="sessions";break;case"ArrowUp":this.scrollOffset=Math.max(0,this.scrollOffset-this.SCROLL_SPEED);break;case"ArrowDown":this.scrollOffset+=this.SCROLL_SPEED;break}}drawContainer(e){e.fillStyle="#1a1a1a",e.fillRect(10,30,340,580),e.strokeStyle="#b600f9",e.lineWidth=2,e.shadowColor="#b600f9",e.shadowBlur=10,e.strokeRect(10,30,340,580),e.shadowBlur=0}drawHeader(e){e.fillStyle="#b600f9",m.setFont(e,"display",20,"bold"),e.textAlign="center",e.fillText("GAME STATISTICS",Math.round(180),Math.round(60)),e.fillStyle="#888888",m.setFont(e,"primary",10),e.fillText("ANALYTICS & PERFORMANCE DATA",Math.round(180),Math.round(75))}drawTabs(e){const t=[{key:"overview",label:"OVERVIEW",number:"1"},{key:"levels",label:"LEVELS",number:"2"},{key:"performance",label:"PERFORMANCE",number:"3"},{key:"sessions",label:"SESSIONS",number:"4"}],i=85,s=90;t.forEach((a,n)=>{const r=10+n*i,c=this.currentTab===a.key;e.fillStyle=c?"#b600f9":"#333333",e.fillRect(Math.round(r),Math.round(s),i-2,this.TAB_HEIGHT),e.strokeStyle=c?"#ffffff":"#666666",e.lineWidth=1,e.strokeRect(Math.round(r),Math.round(s),i-2,this.TAB_HEIGHT),e.fillStyle=c?"#ffffff":"#cccccc",m.setFont(e,"primary",8,"bold"),e.textAlign="center",e.fillText(a.label,Math.round(r+(i-2)/2),Math.round(s+15)),e.fillText(`[${a.number}]`,Math.round(r+(i-2)/2),Math.round(s+28))})}drawContent(e){switch(e.save(),e.beginPath(),e.rect(10,155,340,405),e.clip(),e.translate(0,-this.scrollOffset),this.currentTab){case"overview":this.drawOverviewContent(e,155);break;case"levels":this.drawLevelsContent(e,155);break;case"performance":this.drawPerformanceContent(e,155);break;case"sessions":this.drawSessionsContent(e,155);break}e.restore()}drawOverviewContent(e,t){const i=this.config.statsManager.getStats(),s=this.config.statsManager.getStatsSummary();let a=t;this.drawStatRow(e,"TOTAL PLAY TIME",s.totalPlayTime,a),a+=25,this.drawStatRow(e,"GAMES PLAYED",s.gamesPlayed.toString(),a),a+=25,this.drawStatRow(e,"COMPLETION RATE",s.completionRate,a),a+=25,this.drawStatRow(e,"AVERAGE SCORE",s.averageScore.toString(),a),a+=25,this.drawStatRow(e,"FAVORITE LEVEL",`Level ${s.favoriteLevel}`,a),a+=25,this.drawStatRow(e,"MOST CHALLENGING",`Level ${s.mostChallengingLevel}`,a),a+=35,this.drawProgressBar(e,"ACHIEVEMENT PROGRESS",i.achievementProgress,a),a+=30,this.drawStatRow(e,"ACHIEVEMENTS UNLOCKED",`${i.achievementsUnlocked}/${i.totalAchievements}`,a),a+=35,e.fillStyle="#00ff99",m.setFont(e,"primary",12,"bold"),e.textAlign="left",e.fillText("HIGH SCORES & RECORDS",Math.round(20),Math.round(a)),a+=20,this.drawStatRow(e,"HIGHEST SCORE",i.highestScore.toString(),a),a+=25,this.drawStatRow(e,"HIGHEST LEVEL",i.highestLevel.toString(),a),a+=25,this.drawStatRow(e,"LONGEST SESSION",this.formatPlayTime(i.longestSession),a),a+=25,this.drawStatRow(e,"FASTEST COMPLETION",this.formatPlayTime(i.fastestLevelCompletion),a)}drawLevelsContent(e,t){const i=this.config.statsManager.getStats();let s=t+15;e.fillStyle="#00ff99",m.setFont(e,"primary",12,"bold"),e.textAlign="left",e.fillText("LEVEL STATISTICS",Math.round(20),Math.round(s)),s+=25,e.fillStyle="#b600f9",m.setFont(e,"primary",10,"bold"),e.fillText("LEVEL",Math.round(20),Math.round(s)),e.fillText("ATTEMPTS",Math.round(80),Math.round(s)),e.fillText("COMPLETIONS",Math.round(140),Math.round(s)),e.fillText("RATE",Math.round(200),Math.round(s)),e.fillText("BEST TIME",Math.round(250),Math.round(s)),e.fillText("BEST SCORE",Math.round(320),Math.round(s)),s+=20,e.fillStyle="#ffffff",m.setFont(e,"primary",9);for(const[a,n]of i.levelStats){if(s-t>400)break;e.fillText(`Level ${a}`,Math.round(20),Math.round(s)),e.fillText(n.attempts.toString(),Math.round(80),Math.round(s)),e.fillText(n.completions.toString(),Math.round(140),Math.round(s)),e.fillText(`${n.completionRate.toFixed(1)}%`,Math.round(200),Math.round(s)),e.fillText(this.formatPlayTime(n.bestTime),Math.round(250),Math.round(s)),e.fillText(n.bestScore.toString(),Math.round(320),Math.round(s)),s+=18}}drawPerformanceContent(e,t){const i=this.config.statsManager.getPerformanceStats();let s=t+15;e.fillStyle="#00ff99",m.setFont(e,"primary",12,"bold"),e.textAlign="left",e.fillText("PERFORMANCE METRICS",Math.round(20),Math.round(s)),s+=25,this.drawStatRow(e,"AVERAGE FPS",`${i.averageFPS.toFixed(1)}`,s),s+=25,this.drawStatRow(e,"MIN FPS",i.minFPS.toString(),s),s+=25,this.drawStatRow(e,"MAX FPS",i.maxFPS.toString(),s),s+=35,e.fillStyle="#00ff99",m.setFont(e,"primary",10,"bold"),e.fillText("LOAD TIMES",Math.round(20),Math.round(s)),s+=20,this.drawStatRow(e,"GAME START",`${i.loadTimes.gameStart}ms`,s),s+=25,this.drawStatRow(e,"LEVEL LOAD",`${i.loadTimes.levelLoad}ms`,s),s+=25,this.drawStatRow(e,"ASSET LOAD",`${i.loadTimes.assetLoad}ms`,s),s+=35,e.fillStyle="#00ff99",m.setFont(e,"primary",10,"bold"),e.fillText("DEVICE INFORMATION",Math.round(20),Math.round(s)),s+=20,this.drawStatRow(e,"PLATFORM",i.deviceInfo.platform,s),s+=25,this.drawStatRow(e,"RESOLUTION",i.deviceInfo.screenResolution,s),s+=25,this.drawStatRow(e,"LANGUAGE",i.deviceInfo.language,s),s+=25;const a=i.deviceInfo.userAgent.length>30?i.deviceInfo.userAgent.substring(0,30)+"...":i.deviceInfo.userAgent;this.drawStatRow(e,"BROWSER",a,s)}drawSessionsContent(e,t){const i=this.config.statsManager.getStats();let s=t+15;e.fillStyle="#00ff99",m.setFont(e,"primary",12,"bold"),e.textAlign="left",e.fillText("RECENT SESSIONS",Math.round(20),Math.round(s)),s+=25,e.fillStyle="#b600f9",m.setFont(e,"primary",9,"bold"),e.fillText("DURATION",Math.round(20),Math.round(s)),e.fillText("GOALS",Math.round(80),Math.round(s)),e.fillText("BALLS LOST",Math.round(120),Math.round(s)),e.fillText("SCORE",Math.round(180),Math.round(s)),e.fillText("STATUS",Math.round(240),Math.round(s)),s+=15,e.fillStyle="#ffffff",m.setFont(e,"primary",8);for(const a of i.recentSessions){if(s-t>400)break;const n=this.formatPlayTime(a.duration),r=a.completed?"COMPLETE":"INCOMPLETE",c=a.completed?"#00ff99":"#ff6666";e.fillText(n,Math.round(20),Math.round(s)),e.fillText(a.goalsReached.toString(),Math.round(80),Math.round(s)),e.fillText(a.ballsLost.toString(),Math.round(120),Math.round(s)),e.fillText(a.score.toString(),Math.round(180),Math.round(s)),e.fillStyle=c,e.fillText(r,Math.round(240),Math.round(s)),e.fillStyle="#ffffff",s+=16}}drawStatRow(e,t,i,s){e.fillStyle="#cccccc",m.setFont(e,"primary",10),e.textAlign="left",e.fillText(t,Math.round(20),Math.round(s)),e.fillStyle="#ffffff",m.setFont(e,"primary",10,"bold"),e.textAlign="right",e.fillText(i,Math.round(330),Math.round(s))}drawProgressBar(e,t,i,s){e.fillStyle="#cccccc",m.setFont(e,"primary",10),e.textAlign="left",e.fillText(t,Math.round(20),Math.round(s)),e.fillStyle="#ffffff",m.setFont(e,"primary",10,"bold"),e.textAlign="right",e.fillText(`${i.toFixed(1)}%`,Math.round(330),Math.round(s)),s+=15,e.fillStyle="#333333",e.fillRect(Math.round(20),Math.round(s),300,8);const a=i/100*300;e.fillStyle="#00ff99",e.fillRect(Math.round(20),Math.round(s),a,8),e.strokeStyle="#666666",e.lineWidth=1,e.strokeRect(Math.round(20),Math.round(s),300,8)}drawFooter(e){e.fillStyle="#888888",m.setFont(e,"primary",9),e.textAlign="center",e.fillText("1-4: Switch tabs | ↑↓: Scroll | ESC: Close",Math.round(180),Math.round(580));const i=this.config.statsManager.getStats(),s=new Date(i.lastUpdated).toLocaleString();e.fillText(`Last updated: ${s}`,Math.round(180),Math.round(580+15))}formatPlayTime(e){if(e===0)return"N/A";const t=Math.floor(e/(1e3*60*60)),i=Math.floor(e%(1e3*60*60)/(1e3*60)),s=Math.floor(e%(1e3*60)/1e3);return t>0?`${t}h ${i}m`:i>0?`${i}m ${s}s`:`${s}s`}}class Ue{constructor(e){l(this,"config");l(this,"animationTime",0);this.config=e,o.info(`🏆 WinScreen initialized for Level ${e.levelId}`,null,"WinScreen")}update(e){this.animationTime+=e}render(e){if(!e)return;const t=Math.min(this.animationTime/500,.95);e.fillStyle=`rgba(0, 0, 0, ${t})`,e.fillRect(0,0,360,640),this.drawContainer(e),this.drawHeader(e),this.drawLevelInfo(e),this.drawTimingInfo(e),this.drawContinuePrompt(e)}handleInput(e){e&&e.trim()!==""&&this.config.onContinue()}drawContainer(e){const n=Math.min(this.animationTime/800,1),c=120+(1-this.easeOutCubic(n))*50;e.fillStyle="#1a1a1a",e.fillRect(20,c,320,400),e.strokeStyle="#00f0ff",e.lineWidth=3,e.shadowColor="#00f0ff",e.shadowBlur=15,e.strokeRect(20,c,320,400),e.shadowBlur=0,e.strokeStyle="#b600f9",e.lineWidth=1,e.strokeRect(20+5,c+5,320-10,400-10)}drawHeader(e){const i=Math.min(this.animationTime/800,1),a=120+(1-this.easeOutCubic(i))*50+40;e.fillStyle="#00f0ff",m.setFont(e,"display",24,"bold"),e.textAlign="center",e.fillText("LEVEL COMPLETED",180,a),e.fillStyle="#00ff00",m.setFont(e,"primary",12),e.fillText("✓ ALL GOALS REACHED",180,a+25)}drawLevelInfo(e){const i=Math.min(this.animationTime/800,1),a=120+(1-this.easeOutCubic(i))*50+100;e.fillStyle="#ffffff",m.setFont(e,"primary",16,"bold"),e.textAlign="center",e.fillText(`LEVEL ${this.config.levelId}`,180,a),e.fillStyle="#ffff00",m.setFont(e,"primary",14),e.fillText(`LEVEL POINTS: ${this.config.score.toFixed(1)}`,180,a+25),this.config.totalScore!==void 0&&(e.fillStyle="#00ff00",m.setFont(e,"primary",12,"bold"),e.fillText(`TOTAL SCORE: ${this.config.totalScore.toFixed(1)}`,180,a+45))}drawTimingInfo(e){const i=Math.min(this.animationTime/800,1),a=120+(1-this.easeOutCubic(i))*50+190;if(!this.config.levelScoreData){this.drawLegacyTimingInfo(e,a);return}const n=this.config.levelScoreData,r=1e3;if(this.animationTime>r){const f=Math.min((this.animationTime-r)/500,1);e.fillStyle=`rgba(0, 240, 255, ${f})`,m.setFont(e,"primary",10),e.textAlign="left",e.fillText("RAW TIME:",60,a),e.fillStyle=`rgba(255, 255, 255, ${f})`,m.setFont(e,"primary",12),e.textAlign="right",e.fillText(`${n.rawTime.toFixed(3)}s`,300,a)}const c=1500;if(this.animationTime>c&&(n.timeReductions>0||n.assistPenalties>0)){const f=Math.min((this.animationTime-c)/500,1);n.timeReductions>0&&(e.fillStyle=`rgba(0, 255, 0, ${f})`,m.setFont(e,"primary",9),e.textAlign="left",e.fillText("TIME CUTS:",60,a+18),e.fillStyle=`rgba(0, 255, 0, ${f})`,m.setFont(e,"primary",10),e.textAlign="right",e.fillText(`-${n.timeReductions.toFixed(1)}s`,300,a+18)),n.assistPenalties>0&&(e.fillStyle=`rgba(255, 165, 0, ${f})`,m.setFont(e,"primary",9),e.textAlign="left",e.fillText("ASSIST PENALTY:",60,a+33),e.fillStyle=`rgba(255, 165, 0, ${f})`,m.setFont(e,"primary",10),e.textAlign="right",e.fillText(`+${n.assistPenalties.toFixed(1)}s`,300,a+33))}const h=2e3;if(this.animationTime>h){const f=Math.min((this.animationTime-h)/500,1);e.strokeStyle=`rgba(182, 0, 249, ${f})`,e.lineWidth=1,e.beginPath(),e.moveTo(60,a+50),e.lineTo(300,a+50),e.stroke(),e.fillStyle=`rgba(255, 255, 0, ${f})`,m.setFont(e,"primary",10,"bold"),e.textAlign="left",e.fillText("ADJUSTED TIME:",60,a+68),e.fillStyle=`rgba(255, 255, 0, ${f})`,m.setFont(e,"primary",12,"bold"),e.textAlign="right",e.fillText(`${n.adjustedTime.toFixed(3)}s`,300,a+68),e.fillStyle=`rgba(136, 136, 136, ${f})`,m.setFont(e,"primary",8),e.textAlign="center",e.fillText(`${n.baseLevelValue} ÷ ${n.adjustedTime.toFixed(3)} = ${n.levelPoints.toFixed(1)}`,180,a+85)}}drawLegacyTimingInfo(e,t){if(this.animationTime>1e3){const a=Math.min((this.animationTime-1e3)/500,1);e.fillStyle=`rgba(0, 240, 255, ${a})`,m.setFont(e,"primary",12),e.textAlign="left",e.fillText("LEVEL TIME:",60,t),e.fillStyle=`rgba(255, 255, 255, ${a})`,m.setFont(e,"primary",16,"bold"),e.textAlign="right",e.fillText(this.formatTime(this.config.levelTime),300,t)}const s=1800;if(this.animationTime>s){const a=Math.min((this.animationTime-s)/500,1);e.strokeStyle=`rgba(182, 0, 249, ${a})`,e.lineWidth=1,e.beginPath(),e.moveTo(60,t+20),e.lineTo(300,t+20),e.stroke();const n=this.config.sessionTotal-this.config.levelTime;e.fillStyle=`rgba(136, 136, 136, ${a})`,m.setFont(e,"primary",10),e.textAlign="left",e.fillText("PREVIOUS:",60,t+40),e.fillStyle=`rgba(136, 136, 136, ${a})`,m.setFont(e,"primary",12),e.textAlign="right",e.fillText(this.formatTime(n),300,t+40),e.fillStyle=`rgba(0, 255, 0, ${a})`,m.setFont(e,"primary",12,"bold"),e.textAlign="left",e.fillText("SESSION TOTAL:",60,t+65),e.fillStyle=`rgba(0, 255, 0, ${a})`,m.setFont(e,"primary",18,"bold"),e.textAlign="right",e.fillText(this.formatTime(this.config.sessionTotal),300,t+65)}}drawContinuePrompt(e){const i=Math.min(this.animationTime/800,1),a=120+(1-this.easeOutCubic(i))*50+320,n=2500;if(this.animationTime>n){const r=(this.animationTime-n)%1e3,c=.5+.5*Math.sin(r/1e3*Math.PI*2);e.fillStyle=`rgba(255, 255, 255, ${c})`,m.setFont(e,"primary",12,"bold"),e.textAlign="center",e.fillText("PRESS ANY KEY TO CONTINUE",180,a),e.fillStyle=`rgba(136, 136, 136, ${c*.8})`,m.setFont(e,"primary",8),e.fillText("SPACE, ENTER, OR CLICK TO ADVANCE",180,a+15)}}formatTime(e){const t=e/1e3,i=Math.floor(t/60),s=t%60;return`${i}:${s.toFixed(3).padStart(6,"0")}`}easeOutCubic(e){return 1-Math.pow(1-e,3)}}class _e{constructor(){l(this,"STORAGE_KEY","circuit_breaker_save");l(this,"SAVE_SLOTS_KEY","circuit_breaker_slots");l(this,"CURRENT_VERSION","1.0.0");l(this,"MAX_SAVE_SLOTS",3);l(this,"AUTO_SAVE_INTERVAL",3e4);l(this,"autoSaveTimer",null);l(this,"lastAutoSave",0);o.info("💾 StorageManager initialized",null,"StorageManager")}createNewProgress(){return{version:this.CURRENT_VERSION,lastSaved:Date.now(),currentLevel:1,highestLevel:1,totalScore:0,lives:3,completedLevels:new Set,highScores:new Map,achievements:new Set,settings:{masterVolume:.7,musicVolume:.4,sfxVolume:.8,audioEnabled:!0},playTime:0,gamesPlayed:0,totalBallsLost:0,totalGoalsReached:0,unifiedTotalScore:0,scoreSessions:[],bestLevelScores:new Map,allTimeHighScore:0}}saveProgress(e,t=0){try{if(e.lastSaved=Date.now(),e.version=this.CURRENT_VERSION,!this.validateProgress(e))return o.error("❌ Invalid progress data, save aborted",null,"StorageManager"),!1;const i=this.serializeProgress(e),s=`${this.STORAGE_KEY}_${t}`;return localStorage.setItem(s,JSON.stringify(i)),this.updateSaveSlot(t,e),o.info(`💾 Game progress saved to slot ${t}`,null,"StorageManager"),!0}catch(i){return o.error("❌ Failed to save game progress:",i,"StorageManager"),!1}}loadProgress(e=0){try{const t=`${this.STORAGE_KEY}_${e}`,i=localStorage.getItem(t);if(!i)return o.info(`📂 No save data found in slot ${e}`,null,"StorageManager"),null;const s=JSON.parse(i),a=this.deserializeProgress(s);return this.validateProgress(a)?this.isVersionCompatible(a.version)?(o.info(`📂 Game progress loaded from slot ${e}`,null,"StorageManager"),a):(o.warn("⚠️ Save data version mismatch, attempting migration",null,"StorageManager"),this.migrateProgress(a)):(o.error("❌ Invalid save data, loading aborted",null,"StorageManager"),null)}catch(t){return o.error("❌ Failed to load game progress:",t,"StorageManager"),null}}autoSave(e,t=0){const i=Date.now();if(i-this.lastAutoSave<this.AUTO_SAVE_INTERVAL)return!1;const s=this.saveProgress(e,t);return s&&(this.lastAutoSave=i,o.debug("🔄 Auto-save completed",null,"StorageManager")),s}startAutoSave(e,t=0){this.stopAutoSave(),this.autoSaveTimer=window.setInterval(()=>{this.autoSave(e,t)},this.AUTO_SAVE_INTERVAL),o.debug("🔄 Auto-save timer started",null,"StorageManager")}stopAutoSave(){this.autoSaveTimer&&(clearInterval(this.autoSaveTimer),this.autoSaveTimer=null,o.debug("🔄 Auto-save timer stopped",null,"StorageManager"))}getSaveSlots(){try{const e=localStorage.getItem(this.SAVE_SLOTS_KEY);return e?JSON.parse(e).filter(i=>i&&i.progress):[]}catch(e){return o.error("❌ Failed to load save slots:",e,"StorageManager"),[]}}deleteSaveSlot(e){try{const t=`${this.STORAGE_KEY}_${e}`;localStorage.removeItem(t);const s=this.getSaveSlots().filter(a=>a.id!==e);return localStorage.setItem(this.SAVE_SLOTS_KEY,JSON.stringify(s)),o.info(`🗑️ Save slot ${e} deleted`,null,"StorageManager"),!0}catch(t){return o.error("❌ Failed to delete save slot:",t,"StorageManager"),!1}}clearAllSaves(){try{for(let e=0;e<this.MAX_SAVE_SLOTS;e++){const t=`${this.STORAGE_KEY}_${e}`;localStorage.removeItem(t)}return localStorage.removeItem(this.SAVE_SLOTS_KEY),o.info("🗑️ All save data cleared",null,"StorageManager"),!0}catch(e){return o.error("❌ Failed to clear save data:",e,"StorageManager"),!1}}validateProgress(e){if(!e||typeof e!="object")return!1;const t=["version","lastSaved","currentLevel","highestLevel","totalScore","lives","completedLevels","highScores","achievements","settings","playTime","gamesPlayed","totalBallsLost","totalGoalsReached"];for(const i of t)if(!(i in e))return o.error(`❌ Missing required field: ${i}`,null,"StorageManager"),!1;return!(e.currentLevel<1||e.highestLevel<1||e.totalScore<0||e.lives<0||e.lives>10||e.playTime<0||e.gamesPlayed<0)}serializeProgress(e){return $(v({},e),{completedLevels:Array.from(e.completedLevels),highScores:Object.fromEntries(e.highScores),achievements:Array.from(e.achievements),bestLevelScores:e.bestLevelScores?Object.fromEntries(e.bestLevelScores):{},scoreSessions:e.scoreSessions||[]})}deserializeProgress(e){return $(v({},e),{completedLevels:new Set(e.completedLevels||[]),highScores:new Map(Object.entries(e.highScores||{})),achievements:new Set(e.achievements||[]),bestLevelScores:e.bestLevelScores?new Map(Object.entries(e.bestLevelScores)):new Map,scoreSessions:e.scoreSessions||[],unifiedTotalScore:e.unifiedTotalScore||0,allTimeHighScore:e.allTimeHighScore||0})}isVersionCompatible(e){return!0}migrateProgress(e){const t=v(v({},this.createNewProgress()),e);return t.completedLevels||(t.completedLevels=new Set),t.highScores||(t.highScores=new Map),t.achievements||(t.achievements=new Set),t.settings||(t.settings=this.createNewProgress().settings),o.info("🔄 Progress data migrated to current version",null,"StorageManager"),t}updateSaveSlot(e,t){try{const i=this.getSaveSlots(),s=i.findIndex(n=>n.id===e),a={id:e,name:`Save ${e+1}`,lastPlayed:Date.now(),progress:t};s>=0?i[s]=a:i.push(a),i.sort((n,r)=>r.lastPlayed-n.lastPlayed),localStorage.setItem(this.SAVE_SLOTS_KEY,JSON.stringify(i))}catch(i){o.error("❌ Failed to update save slot metadata:",i,"StorageManager")}}updateUnifiedScoringData(e,t,i){e.unifiedTotalScore=t.totalScore,t.totalScore>(e.allTimeHighScore||0)&&(e.allTimeHighScore=t.totalScore,o.info(`🏆 New all-time high score: ${t.totalScore.toFixed(1)}`,null,"StorageManager")),e.scoreSessions||(e.scoreSessions=[]),e.scoreSessions.push(t),e.scoreSessions.length>10&&(e.scoreSessions=e.scoreSessions.slice(-10)),e.bestLevelScores||(e.bestLevelScores=new Map);for(const s of i){const a=e.bestLevelScores.get(s.levelId);(!a||s.levelPoints>a.levelPoints)&&(e.bestLevelScores.set(s.levelId,s),o.info(`🎯 New best score for Level ${s.levelId}: ${s.levelPoints.toFixed(1)}`,null,"StorageManager"))}}getBestLevelScore(e,t){return e.bestLevelScores&&e.bestLevelScores.get(t)||null}getUnifiedScoringStats(e){const t=e.allTimeHighScore||0,i=e.scoreSessions||[],s=i.length,a=s>0?i.reduce((r,c)=>r+c.totalScore,0)/s:0,n=e.bestLevelScores?e.bestLevelScores.size:0;return{allTimeHighScore:t,averageSessionScore:a,totalSessions:s,bestLevelCount:n}}getStorageInfo(){var e;try{let t=0;const i=Object.keys(localStorage);for(const n of i)(n.startsWith(this.STORAGE_KEY)||n===this.SAVE_SLOTS_KEY)&&(t+=((e=localStorage.getItem(n))==null?void 0:e.length)||0);const s=5*1024*1024,a=t/s*100;return{used:t,available:s,percentage:a}}catch(t){return o.error("❌ Failed to get storage info:",t,"StorageManager"),{used:0,available:0,percentage:0}}}}class Ge{constructor(){l(this,"achievements",new Map);l(this,"notifications",[]);l(this,"onAchievementUnlocked");this.initializeAchievements(),o.info("🏆 AchievementManager initialized",null,"AchievementManager")}initializeAchievements(){this.addAchievement({id:"first_goal",name:"First Contact",description:"Reach your first goal",icon:"🎯",unlocked:!1,category:"gameplay",rarity:"common"}),this.addAchievement({id:"level_complete",name:"Circuit Master",description:"Complete a level",icon:"⚡",unlocked:!1,category:"gameplay",rarity:"common"}),this.addAchievement({id:"perfect_level",name:"Perfect Circuit",description:"Complete a level without losing any balls",icon:"💎",unlocked:!1,category:"skill",rarity:"rare"}),this.addAchievement({id:"speed_runner",name:"Speed Runner",description:"Complete a level in under 30 seconds",icon:"🏃",unlocked:!1,category:"skill",rarity:"rare"}),this.addAchievement({id:"survivor",name:"Survivor",description:"Complete 5 levels in a single game",icon:"🛡️",unlocked:!1,category:"gameplay",rarity:"epic"}),this.addAchievement({id:"high_scorer",name:"High Scorer",description:"Score 10,000 points in a single game",icon:"🏆",unlocked:!1,category:"skill",rarity:"epic"}),this.addAchievement({id:"goal_hunter",name:"Goal Hunter",description:"Reach 50 goals total",icon:"🎯",unlocked:!1,category:"completion",rarity:"rare",progress:0,maxProgress:50}),this.addAchievement({id:"level_explorer",name:"Level Explorer",description:"Unlock 10 levels",icon:"🗺️",unlocked:!1,category:"completion",rarity:"rare",progress:0,maxProgress:10}),this.addAchievement({id:"persistent_player",name:"Persistent Player",description:"Play 10 games",icon:"🎮",unlocked:!1,category:"completion",rarity:"common",progress:0,maxProgress:10}),this.addAchievement({id:"time_investor",name:"Time Investor",description:"Play for 1 hour total",icon:"⏰",unlocked:!1,category:"completion",rarity:"common",progress:0,maxProgress:36e5}),this.addAchievement({id:"ball_conservationist",name:"Ball Conservationist",description:"Complete a level with only 1 ball",icon:"🔵",unlocked:!1,category:"skill",rarity:"epic"}),this.addAchievement({id:"chain_reaction",name:"Chain Reaction",description:"Reach 3 goals in quick succession",icon:"⚡",unlocked:!1,category:"skill",rarity:"legendary"}),this.addAchievement({id:"veteran_player",name:"Veteran Player",description:"Play for 5 hours total",icon:"👴",unlocked:!1,category:"completion",rarity:"epic",progress:0,maxProgress:18e6}),this.addAchievement({id:"master_circuit",name:"Master Circuit",description:"Complete all levels",icon:"👑",unlocked:!1,category:"completion",rarity:"legendary"})}addAchievement(e){this.achievements.set(e.id,e)}setAchievementCallback(e){this.onAchievementUnlocked=e}checkAchievements(e){e.goalsReached>=1&&this.unlockAchievement("first_goal"),e.levelsCompleted>=1&&this.unlockAchievement("level_complete"),e.perfectLevels>=1&&this.unlockAchievement("perfect_level"),e.quickCompletions>=1&&this.unlockAchievement("speed_runner"),e.levelsCompleted>=5&&this.unlockAchievement("survivor"),e.totalScore>=1e4&&this.unlockAchievement("high_scorer"),e.lives>=2&&e.levelsCompleted>=1&&this.unlockAchievement("ball_conservationist"),this.updateProgressAchievement("goal_hunter",e.goalsReached),this.updateProgressAchievement("level_explorer",e.currentLevel),this.updateProgressAchievement("persistent_player",e.gamesPlayed),this.updateProgressAchievement("time_investor",e.totalPlayTime),this.updateProgressAchievement("veteran_player",e.totalPlayTime),e.currentLevel>=20&&this.unlockAchievement("master_circuit")}unlockAchievement(e){const t=this.achievements.get(e);if(!t||t.unlocked)return!1;t.unlocked=!0,t.unlockedAt=Date.now();const i={id:t.id,name:t.name,description:t.description,icon:t.icon,timestamp:Date.now(),category:t.category,rarity:t.rarity};return this.notifications.push(i),this.onAchievementUnlocked&&this.onAchievementUnlocked(t),o.info(`🏆 Achievement unlocked: ${t.name}`,null,"AchievementManager"),!0}updateProgressAchievement(e,t){const i=this.achievements.get(e);!i||i.unlocked||!i.maxProgress||(i.progress=Math.min(t,i.maxProgress),i.progress>=i.maxProgress&&this.unlockAchievement(e))}getAllAchievements(){return Array.from(this.achievements.values())}getUnlockedAchievements(){return Array.from(this.achievements.values()).filter(e=>e.unlocked)}getAchievementsByCategory(e){return Array.from(this.achievements.values()).filter(t=>t.category===e)}getAchievementsByRarity(e){return Array.from(this.achievements.values()).filter(t=>t.rarity===e)}getRecentNotifications(e=5){return this.notifications.sort((t,i)=>i.timestamp-t.timestamp).slice(0,e)}clearOldNotifications(e=24*60*60*1e3){const t=Date.now()-e;this.notifications=this.notifications.filter(i=>i.timestamp>t)}getAchievementProgress(e){const t=this.achievements.get(e);if(!t||!t.maxProgress)return null;const i=t.progress||0,s=i/t.maxProgress*100;return{current:i,max:t.maxProgress,percentage:Math.min(s,100)}}getAchievementStats(){const e=Array.from(this.achievements.values()),t=e.filter(a=>a.unlocked),i={},s={};for(const a of e)i[a.category]||(i[a.category]={total:0,unlocked:0}),s[a.rarity]||(s[a.rarity]={total:0,unlocked:0}),i[a.category].total++,s[a.rarity].total++,a.unlocked&&(i[a.category].unlocked++,s[a.rarity].unlocked++);return{total:e.length,unlocked:t.length,percentage:e.length>0?t.length/e.length*100:0,byCategory:i,byRarity:s}}loadAchievements(e){for(const t of e){const i=this.achievements.get(t);i&&(i.unlocked=!0,i.unlockedAt=Date.now())}o.info(`📂 Loaded ${e.length} achievements from save`,null,"AchievementManager")}getUnlockedAchievementIds(){return Array.from(this.achievements.values()).filter(e=>e.unlocked).map(e=>e.id)}resetAchievements(){for(const e of this.achievements.values())e.unlocked=!1,e.unlockedAt=void 0,e.progress=0;this.notifications=[],o.info("🔄 All achievements reset",null,"AchievementManager")}}class Be{constructor(){l(this,"stats");l(this,"currentSession",null);l(this,"fpsSamples",[]);l(this,"MAX_FPS_SAMPLES",100);l(this,"STATS_KEY","circuit_breaker_stats");l(this,"VERSION","1.0.0");this.stats=this.loadStats(),this.initializePerformanceStats(),o.info("📊 StatsManager initialized",null,"StatsManager")}recordEvent(e){try{switch(e.type){case"game_start":this.handleGameStart(e);break;case"game_complete":this.handleGameComplete(e);break;case"level_start":this.handleLevelStart(e);break;case"level_complete":this.handleLevelComplete(e);break;case"goal_reached":this.handleGoalReached(e);break;case"ball_lost":this.handleBallLost(e);break;case"death":this.handleDeath(e);break;case"session_start":this.handleSessionStart(e);break;case"session_end":this.handleSessionEnd(e);break;case"fps_update":this.handleFPSUpdate(e);break;case"achievement_unlocked":this.handleAchievementUnlocked(e);break}this.saveStats()}catch(t){o.error("❌ Failed to record stats event:",t,"StatsManager")}}getStats(){return v({},this.stats)}getLevelStats(e){return this.stats.levelStats.get(e)||null}getPerformanceStats(){return v({},this.stats.performance)}getCurrentSession(){return this.currentSession?v({},this.currentSession):null}resetStats(){this.stats=this.createNewStats(),this.currentSession=null,this.fpsSamples=[],this.saveStats(),o.info("🔄 All stats reset",null,"StatsManager")}exportStats(){const e=$(v({},this.stats),{levelStats:Object.fromEntries(this.stats.levelStats),exportDate:new Date().toISOString()});return JSON.stringify(e,null,2)}importStats(e){try{const t=JSON.parse(e);if(!this.validateStats(t))return o.error("❌ Invalid stats data format",null,"StatsManager"),!1;if(t.levelStats&&typeof t.levelStats=="object"){const i=new Map;for(const[s,a]of Object.entries(t.levelStats))i.set(parseInt(s),a);t.levelStats=i}return this.stats=t,this.saveStats(),o.info("📥 Stats imported successfully",null,"StatsManager"),!0}catch(t){return o.error("❌ Failed to import stats:",t,"StatsManager"),!1}}getStatsSummary(){const e=this.formatPlayTime(this.stats.totalPlayTime),t=this.stats.totalGamesStarted,i=this.stats.averageCompletionRate.toFixed(1)+"%",s=this.stats.totalGamesCompleted>0?Math.round(this.stats.highestScore/this.stats.totalGamesCompleted):0;let a=1,n=0;for(const[h,f]of this.stats.levelStats)f.completions>n&&(n=f.completions,a=h);let r=1,c=100;for(const[h,f]of this.stats.levelStats)f.attempts>0&&f.completionRate<c&&(c=f.completionRate,r=h);return{totalPlayTime:e,gamesPlayed:t,completionRate:i,averageScore:s,favoriteLevel:a,mostChallengingLevel:r}}handleGameStart(e){this.stats.totalGamesStarted++,this.stats.lastUpdated=e.timestamp,o.debug("📊 Game start recorded",null,"StatsManager")}handleGameComplete(e){this.stats.totalGamesCompleted++,this.stats.lastUpdated=e.timestamp,this.currentSession&&(this.currentSession.completed=!0,this.currentSession.endTime=e.timestamp,this.currentSession.duration=e.timestamp-this.currentSession.startTime),o.debug("📊 Game complete recorded",null,"StatsManager")}handleLevelStart(e){var s;const t=((s=e.data)==null?void 0:s.levelId)||1;let i=this.stats.levelStats.get(t);i||(i=this.createLevelStats(t),this.stats.levelStats.set(t,i)),i.attempts++,i.lastPlayed=e.timestamp,this.currentSession&&this.currentSession.levelsPlayed.push(t),o.debug(`📊 Level ${t} start recorded`,null,"StatsManager")}handleLevelComplete(e){var n,r,c;const t=((n=e.data)==null?void 0:n.levelId)||1,i=((r=e.data)==null?void 0:r.completionTime)||0,s=((c=e.data)==null?void 0:c.score)||0,a=this.stats.levelStats.get(t);a&&(a.completions++,a.completionRate=a.completions/a.attempts*100,i>0&&(a.bestTime===0||i<a.bestTime)&&(a.bestTime=i),s>a.bestScore&&(a.bestScore=s)),this.stats.levelsCompleted=Math.max(this.stats.levelsCompleted,t),this.stats.highestLevel=Math.max(this.stats.highestLevel,t),o.debug(`📊 Level ${t} complete recorded`,null,"StatsManager")}handleGoalReached(e){this.stats.totalGoalsReached++,this.currentSession&&this.currentSession.goalsReached++,o.debug("📊 Goal reached recorded",null,"StatsManager")}handleBallLost(e){this.stats.totalBallsLost++,this.currentSession&&this.currentSession.ballsLost++,o.debug("📊 Ball lost recorded",null,"StatsManager")}handleDeath(e){this.stats.totalDeaths++,o.debug("📊 Death recorded",null,"StatsManager")}handleSessionStart(e){this.stats.totalSessions++,this.currentSession={sessionId:this.generateSessionId(),startTime:e.timestamp,duration:0,levelsPlayed:[],goalsReached:0,ballsLost:0,score:0,completed:!1},o.debug("📊 Session start recorded",null,"StatsManager")}handleSessionEnd(e){this.currentSession&&(this.currentSession.endTime=e.timestamp,this.currentSession.duration=e.timestamp-this.currentSession.startTime,this.stats.recentSessions.unshift(this.currentSession),this.stats.recentSessions.length>10&&(this.stats.recentSessions=this.stats.recentSessions.slice(0,10)),this.currentSession.duration>this.stats.longestSession&&(this.stats.longestSession=this.currentSession.duration),this.currentSession=null),o.debug("📊 Session end recorded",null,"StatsManager")}handleFPSUpdate(e){var i;const t=((i=e.data)==null?void 0:i.fps)||0;this.fpsSamples.push(t),this.fpsSamples.length>this.MAX_FPS_SAMPLES&&this.fpsSamples.shift(),this.stats.performance.averageFPS=this.fpsSamples.reduce((s,a)=>s+a,0)/this.fpsSamples.length,this.stats.performance.minFPS=Math.min(...this.fpsSamples),this.stats.performance.maxFPS=Math.max(...this.fpsSamples),this.stats.performance.fpsSamples=[...this.fpsSamples]}handleAchievementUnlocked(e){this.stats.achievementsUnlocked++,this.stats.achievementProgress=this.stats.achievementsUnlocked/this.stats.totalAchievements*100,o.debug("📊 Achievement unlocked recorded",null,"StatsManager")}createNewStats(){return{version:this.VERSION,lastUpdated:Date.now(),totalPlayTime:0,totalSessions:0,totalGamesStarted:0,totalGamesCompleted:0,totalGoalsReached:0,totalBallsLost:0,totalDeaths:0,highestScore:0,highestLevel:1,longestSession:0,fastestLevelCompletion:0,levelsCompleted:0,totalLevelAttempts:0,averageCompletionRate:0,levelStats:new Map,performance:this.createPerformanceStats(),recentSessions:[],achievementsUnlocked:0,totalAchievements:0,achievementProgress:0}}createPerformanceStats(){return{averageFPS:0,minFPS:0,maxFPS:0,fpsSamples:[],loadTimes:{gameStart:0,levelLoad:0,assetLoad:0},deviceInfo:{userAgent:navigator.userAgent,screenResolution:`${screen.width}x${screen.height}`,platform:navigator.platform,language:navigator.language}}}createLevelStats(e){return{levelId:e,attempts:0,completions:0,bestTime:0,bestScore:0,totalPlayTime:0,ballsLost:0,goalsReached:0,averageAttempts:0,completionRate:0,lastPlayed:0}}initializePerformanceStats(){this.stats.performance=this.createPerformanceStats()}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}loadStats(){try{const e=localStorage.getItem(this.STATS_KEY);if(e){const t=JSON.parse(e);if(t.levelStats&&typeof t.levelStats=="object"&&(t.levelStats=new Map(Object.entries(t.levelStats))),this.validateStats(t))return o.info("📂 Stats loaded from storage",null,"StatsManager"),t}}catch(e){o.error("❌ Failed to load stats:",e,"StatsManager")}return o.info("🆕 Creating new stats",null,"StatsManager"),this.createNewStats()}saveStats(){try{const e=$(v({},this.stats),{levelStats:Object.fromEntries(this.stats.levelStats)});localStorage.setItem(this.STATS_KEY,JSON.stringify(e))}catch(e){o.error("❌ Failed to save stats:",e,"StatsManager")}}validateStats(e){return e&&typeof e.version=="string"&&typeof e.lastUpdated=="number"&&typeof e.totalPlayTime=="number"}formatPlayTime(e){const t=Math.floor(e/36e5),i=Math.floor(e%(1e3*60*60)/(1e3*60));return t>0?`${t}h ${i}m`:`${i}m`}}const $e={[y.SLOW_MO_SURGE]:{name:"Slow-Mo Surge",description:"Slows down time for precise control",baseDuration:5e3,baseCharges:1,physics:{timeScale:.3},visualEffects:{activation:[{type:"overlay",data:{color:"rgba(0, 255, 255, 0.2)",opacity:.3,fadeIn:300}}],active:[{type:"overlay",data:{color:"rgba(0, 255, 255, 0.4)",opacity:.3,pulse:!0,pulseSpeed:.01}},{type:"glow",data:{target:"ball",color:"#00ffff",intensity:1.5,pulse:!0}}],deactivation:[{type:"overlay",data:{color:"rgba(0, 255, 255, 0.2)",opacity:.3,fadeOut:500}}]},audio:{activation:"slowmo_activate",deactivation:"slowmo_deactivate",ambient:"slowmo_ambient"},upgradeScaling:{durationMultiplier:1.2,chargesMultiplier:1,effectMultiplier:1}},[y.MAGNETIC_GUIDE]:{name:"Magnetic Guide",description:"Attracts the ball toward the target",baseDuration:5e3,baseCharges:1,physics:{magneticForce:.3},visualEffects:{activation:[{type:"glow",data:{target:"hole",color:"#ff00ff",intensity:.5,fadeIn:200}}],active:[{type:"glow",data:{target:"hole",color:"#ff00ff",intensity:1,pulse:!0,pulseSpeed:.01,pulseAmplitude:.3}},{type:"particle",data:{type:"electric_arc",from:"ball",to:"hole",color:"#ff00ff",count:3,frequency:100}}],deactivation:[{type:"glow",data:{target:"hole",color:"#ff00ff",intensity:.5,fadeOut:300}}]},audio:{activation:"magnetic_activate",ambient:"magnetic_ambient"},upgradeScaling:{durationMultiplier:1.1,effectMultiplier:1.3}},[y.CIRCUIT_PATCH]:{name:"Circuit Patch",description:"Shields the ball from falling off once",baseDuration:-1,baseCharges:1,physics:{},visualEffects:{activation:[{type:"glow",data:{target:"ball",color:"#00ff00",intensity:.8,type:"shield_ring",fadeIn:400}}],active:[{type:"glow",data:{target:"ball",color:"#00ff00",intensity:1.2,type:"shield_ring",pulse:!0,pulseSpeed:.02}}],deactivation:[{type:"glow",data:{target:"ball",color:"#00ff00",intensity:2,type:"shield_explosion",duration:200}}]},audio:{activation:"shield_activate",deactivation:"shield_used"},upgradeScaling:{chargesMultiplier:1}},[y.OVERCLOCK_BOOST]:{name:"Overclock Boost",description:"Increases bar movement speed",baseDuration:4e3,baseCharges:1,physics:{barSpeedMultiplier:1.5},visualEffects:{activation:[{type:"glow",data:{target:"bar",color:"#ff6600",intensity:1,fadeIn:200}}],active:[{type:"glow",data:{target:"bar",color:"#ff6600",intensity:1,pulse:!0,pulseSpeed:.02,pulseAmplitude:.5}},{type:"particle",data:{type:"spark",target:"bar_ends",color:"#ff6600",count:5,frequency:200}}],deactivation:[{type:"glow",data:{target:"bar",color:"#ff6600",intensity:1.5,fadeOut:400}}]},audio:{activation:"overclock_activate",deactivation:"overclock_deactivate",ambient:"overclock_ambient"},upgradeScaling:{durationMultiplier:1.2,effectMultiplier:1.1}},[y.SCAN_REVEAL]:{name:"Scan Reveal",description:"Shows the optimal path to the target",baseDuration:3e3,baseCharges:1,physics:{},visualEffects:{activation:[{type:"animation",data:{type:"scan_sweep",color:"#00ffff",speed:3,fadeIn:100}}],active:[{type:"overlay",data:{type:"path_reveal",color:"#00ffff",opacity:.6,animated:!0}},{type:"animation",data:{type:"scan_bar",color:"#00ffff",speed:2}}],deactivation:[{type:"overlay",data:{type:"path_reveal",color:"#00ffff",opacity:.6,fadeOut:500}}]},audio:{activation:"scan_activate",deactivation:"scan_deactivate"},upgradeScaling:{durationMultiplier:1.3}}},Fe={[Z.STANDARD]:{name:"Standard Ball",description:"The classic ball with balanced physics",physics:{mass:6,friction:.18,restitution:.65},visual:{sprite:"ball_standard"},unlockCondition:{type:"score",value:0}},[Z.HEAVY]:{name:"Heavy Ball",description:"Harder to control but more stable",physics:{mass:9,friction:.216,restitution:.52},visual:{sprite:"ball_heavy",glow:{color:"#666666",intensity:.8}},unlockCondition:{type:"score",value:5e4}},[Z.LIGHT]:{name:"Light Ball",description:"More responsive but less stable",physics:{mass:4.2,friction:.108,restitution:.715},visual:{sprite:"ball_light",glow:{color:"#ffffff",intensity:1.2},trail:{color:"#ffffff",length:5}},unlockCondition:{type:"achievement",value:"speed_demon"}},[Z.NEON_SPLIT]:{name:"Neon Split",description:"Unique physics with special effects",physics:{mass:5.4,friction:.162,restitution:.65},visual:{sprite:"ball_neon",glow:{color:"#00ffff",intensity:1.5},trail:{color:"#00ffff",length:8}},unlockCondition:{type:"level",value:15}}},He={slowMoCharges:{name:"Slow-Mo Charges",description:"Increases maximum Slow-Mo Surge charges",maxLevel:3,costs:[1e3,2500,5e3],effects:{maxCharges:[2,3,4]}},barSpeedLevel:{name:"Bar Speed",description:"Increases base bar movement speed",maxLevel:5,costs:[500,1e3,2e3,4e3,8e3],effects:{speedMultiplier:[1.1,1.2,1.3,1.4,1.5]}},frictionLevel:{name:"Friction Reduction",description:"Reduces surface friction for smoother movement",maxLevel:4,costs:[800,1600,3200,6400],effects:{frictionModifier:[.95,.9,.85,.8]}},shieldLevel:{name:"Shield Capacity",description:"Increases maximum shield charges",maxLevel:3,costs:[1500,3e3,6e3],effects:{maxCharges:[2,3,4]}}};function G(d){return $e[d]}function Ne(d){return Fe[d]}function ge(d){return He[d]}class Se{constructor(){l(this,"eventCallbacks",new Map);l(this,"globalCallbacks",{});l(this,"eventHistory",[]);l(this,"maxHistorySize",100)}registerPowerUpCallbacks(e,t){this.eventCallbacks.set(e,v(v({},this.eventCallbacks.get(e)),t)),o.debug(`🔗 Registered callbacks for ${e}`,null,"PowerUpEventSystem")}registerGlobalCallbacks(e){this.globalCallbacks=v(v({},this.globalCallbacks),e),o.debug("🔗 Registered global power-up callbacks",null,"PowerUpEventSystem")}unregisterPowerUpCallbacks(e){this.eventCallbacks.delete(e),o.debug(`🔗 Unregistered callbacks for ${e}`,null,"PowerUpEventSystem")}clearGlobalCallbacks(){this.globalCallbacks={},o.debug("🔗 Cleared global power-up callbacks",null,"PowerUpEventSystem")}emitActivated(e,t,i){const s={type:e,state:v({},t),timestamp:Date.now(),context:i};this.addToHistory(s),this.executeCallbacks("onActivated",s),o.info(`⚡ Power-up activated: ${e}`,null,"PowerUpEventSystem")}emitDeactivated(e,t,i){const s={type:e,state:v({},t),timestamp:Date.now(),context:i};this.addToHistory(s),this.executeCallbacks("onDeactivated",s),o.info(`⚡ Power-up deactivated: ${e}`,null,"PowerUpEventSystem")}emitExpired(e,t,i){const s={type:e,state:v({},t),timestamp:Date.now(),context:i};this.addToHistory(s),this.executeCallbacks("onExpired",s),o.info(`⚡ Power-up expired: ${e}`,null,"PowerUpEventSystem")}emitChargeUsed(e,t,i){const s={type:e,state:v({},t),timestamp:Date.now(),context:i};this.addToHistory(s),this.executeCallbacks("onChargeUsed",s),o.debug(`⚡ Charge used: ${e}`,null,"PowerUpEventSystem")}emitChargeAdded(e,t,i,s){const a={type:e,state:v({},t),timestamp:Date.now(),context:$(v({},s),{amount:i})};this.addToHistory(a),this.executeCallbacks("onChargeAdded",a),o.debug(`⚡ Charge added: ${e} (+${i})`,null,"PowerUpEventSystem")}emitEffectApplied(e,t,i,s){const a={type:e,state:v({},t),timestamp:Date.now(),context:$(v({},s),{effect:i})};this.addToHistory(a),this.executeCallbacks("onEffectApplied",a),o.debug(`⚡ Effect applied: ${e}`,null,"PowerUpEventSystem")}emitEffectRemoved(e,t,i,s){const a={type:e,state:v({},t),timestamp:Date.now(),context:$(v({},s),{effect:i})};this.addToHistory(a),this.executeCallbacks("onEffectRemoved",a),o.debug(`⚡ Effect removed: ${e}`,null,"PowerUpEventSystem")}executeCallbacks(e,t){try{const i=this.eventCallbacks.get(t.type);i&&i[e]&&i[e](t),this.globalCallbacks[e]&&this.globalCallbacks[e](t)}catch(i){o.error(`❌ Error executing power-up event callbacks: ${i}`,null,"PowerUpEventSystem")}}addToHistory(e){this.eventHistory.push(e),this.eventHistory.length>this.maxHistorySize&&this.eventHistory.shift()}getEventHistory(e=50){return this.eventHistory.slice(-e)}getEventsByType(e,t=20){return this.eventHistory.filter(i=>i.type===e).slice(-t)}getEventsByTimeRange(e,t){return this.eventHistory.filter(i=>i.timestamp>=e&&i.timestamp<=t)}clearHistory(){this.eventHistory=[],o.debug("🔄 Power-up event history cleared",null,"PowerUpEventSystem")}getUsageStatistics(){var n;const e=this.eventHistory.filter(r=>r.type&&r.timestamp),t={};let i=0,s=0;e.forEach(r=>{const c=r.type.toString();t[c]=(t[c]||0)+1,r.context&&r.context.duration&&(i+=r.context.duration,s++)});const a=((n=Object.entries(t).sort(([,r],[,c])=>c-r)[0])==null?void 0:n[0])||null;return{totalActivations:e.length,activationsByType:t,averageActivationTime:s>0?i/s:0,mostUsedPowerUp:a}}getRegisteredCallbacks(){return{typeSpecific:new Map(this.eventCallbacks),global:v({},this.globalCallbacks)}}reset(){this.eventCallbacks.clear(),this.globalCallbacks={},this.eventHistory=[],o.debug("🔄 PowerUpEventSystem reset",null,"PowerUpEventSystem")}}class Ve{constructor(e){l(this,"activePowerUps",new Map);l(this,"powerUpEffects",{});l(this,"upgradeProgress");l(this,"currentTime",0);l(this,"eventSystem");l(this,"validationErrors",[]);this.eventSystem=e||new Se,this.upgradeProgress=this.createDefaultUpgradeProgress(),this.initializeEventHandlers(),o.info("⚡ PowerUpManager initialized with event system",null,"PowerUpManager")}initializeEventHandlers(){this.eventSystem.registerGlobalCallbacks({onActivated:e=>{o.info(`⚡ Power-up activated: ${e.type}`,null,"PowerUpManager")},onDeactivated:e=>{o.info(`⚡ Power-up deactivated: ${e.type}`,null,"PowerUpManager")},onExpired:e=>{o.info(`⚡ Power-up expired: ${e.type}`,null,"PowerUpManager")}})}createDefaultUpgradeProgress(){return{slowMoCharges:1,barSpeedLevel:0,frictionLevel:0,shieldLevel:0,unlockedThemes:["default"],unlockedBallTypes:[Z.STANDARD],currentTheme:"default",currentBallType:Z.STANDARD}}update(e){this.currentTime+=e,this.updateActivePowerUps(),this.calculateCombinedEffects(),this.validateState()}updateActivePowerUps(){const e=[];this.activePowerUps.forEach((t,i)=>{t.isActive&&t.duration>0&&this.currentTime-t.startTime>=t.duration&&e.push(i)}),e.forEach(t=>{this.expirePowerUp(t)})}calculateCombinedEffects(){this.powerUpEffects={},this.activePowerUps.forEach((e,t)=>{e.isActive&&this.applyPowerUpEffect(t)})}applyPowerUpEffect(e){const i=G(e).physics;switch(i.timeScale!==void 0&&(this.powerUpEffects.timeScale=i.timeScale),i.magneticForce!==void 0&&(this.powerUpEffects.magneticForce=i.magneticForce),i.barSpeedMultiplier!==void 0&&(this.powerUpEffects.barSpeedMultiplier=i.barSpeedMultiplier),e){case y.CIRCUIT_PATCH:this.powerUpEffects.shieldActive=!0;break;case y.SCAN_REVEAL:this.powerUpEffects.scanActive=!0;break}}activatePowerUp(e){if(!this.validatePowerUpType(e))return o.error(`❌ Invalid power-up type: ${e}`,null,"PowerUpManager"),!1;const t=this.activePowerUps.get(e);if(!t)return o.error(`❌ Power-up state not found: ${e}`,null,"PowerUpManager"),!1;if(t.charges<=0)return o.warn(`⚠️ No charges available for: ${e}`,null,"PowerUpManager"),!1;t.isActive&&this.deactivatePowerUp(e),t.charges--,this.eventSystem.emitChargeUsed(e,t),t.isActive=!0,t.startTime=this.currentTime;const i=G(e);return t.duration=this.getUpgradedDuration(e,i.baseDuration),this.eventSystem.emitActivated(e,t,{duration:t.duration,remainingCharges:t.charges}),o.info(`⚡ Power-up activated: ${e} (${t.charges} charges remaining)`,null,"PowerUpManager"),!0}deactivatePowerUp(e){const t=this.activePowerUps.get(e);t&&t.isActive&&(t.isActive=!1,this.eventSystem.emitDeactivated(e,t),o.info(`⚡ Power-up deactivated: ${e}`,null,"PowerUpManager"))}expirePowerUp(e){const t=this.activePowerUps.get(e);t&&t.isActive&&(t.isActive=!1,this.eventSystem.emitExpired(e,t),o.info(`⚡ Power-up expired: ${e}`,null,"PowerUpManager"))}addCharges(e,t=1){if(!this.validatePowerUpType(e))return!1;const i=this.activePowerUps.get(e);if(!i)return o.error(`❌ Power-up state not found: ${e}`,null,"PowerUpManager"),!1;const s=i.charges;i.charges=Math.min(i.charges+t,i.maxCharges);const a=i.charges-s;return a>0?(this.eventSystem.emitChargeAdded(e,i,a),o.info(`⚡ Added ${a} charges to ${e} (${i.charges}/${i.maxCharges})`,null,"PowerUpManager"),!0):!1}getPowerUpState(e){return this.activePowerUps.get(e)}getActivePowerUps(){return new Map(this.activePowerUps)}getPowerUpEffects(){return v({},this.powerUpEffects)}isPowerUpActive(e){const t=this.activePowerUps.get(e);return t?t.isActive:!1}initializeRun(){this.activePowerUps.clear(),Object.values(y).forEach(e=>{const t=G(e);this.activePowerUps.set(e,{type:e,isActive:!1,startTime:0,duration:t.baseDuration,charges:0,maxCharges:this.getUpgradedMaxCharges(e,t.baseCharges)})}),this.validationErrors=[],o.info("⚡ Power-ups initialized for new run (zero charges)",null,"PowerUpManager")}getUpgradedDuration(e,t){const s=G(e).upgradeScaling.durationMultiplier||1;let a=0;switch(e){case y.SLOW_MO_SURGE:a=this.upgradeProgress.slowMoCharges;break}return t*Math.pow(s,a)}getUpgradedMaxCharges(e,t){const s=G(e).upgradeScaling.chargesMultiplier||1;let a=0;switch(e){case y.SLOW_MO_SURGE:a=this.upgradeProgress.slowMoCharges;break;case y.CIRCUIT_PATCH:a=this.upgradeProgress.shieldLevel;break}return Math.floor(t*Math.pow(s,a))}getUpgradeProgress(){return v({},this.upgradeProgress)}updateUpgradeProgress(e){this.upgradeProgress=v(v({},this.upgradeProgress),e),this.updateMaxChargesFromUpgrades(),o.info("⚡ Upgrade progress updated",null,"PowerUpManager")}updateMaxChargesFromUpgrades(){this.activePowerUps.forEach((e,t)=>{const i=G(t),s=this.getUpgradedMaxCharges(t,i.baseCharges);e.maxCharges!==s&&(e.maxCharges=s,o.debug(`⚡ Updated max charges for ${t}: ${s}`,null,"PowerUpManager"))})}getCurrentBallType(){return this.upgradeProgress.currentBallType}setCurrentBallType(e){this.upgradeProgress.unlockedBallTypes.includes(e)?(this.upgradeProgress.currentBallType=e,o.info(`⚡ Ball type changed to: ${e}`,null,"PowerUpManager")):o.warn(`⚠️ Ball type not unlocked: ${e}`,null,"PowerUpManager")}getCurrentTheme(){return this.upgradeProgress.currentTheme}setCurrentTheme(e){this.upgradeProgress.unlockedThemes.includes(e)?(this.upgradeProgress.currentTheme=e,o.info(`⚡ Theme changed to: ${e}`,null,"PowerUpManager")):o.warn(`⚠️ Theme not unlocked: ${e}`,null,"PowerUpManager")}unlockBallType(e){this.upgradeProgress.unlockedBallTypes.includes(e)||(this.upgradeProgress.unlockedBallTypes.push(e),o.info(`⚡ Ball type unlocked: ${e}`,null,"PowerUpManager"))}unlockTheme(e){this.upgradeProgress.unlockedThemes.includes(e)||(this.upgradeProgress.unlockedThemes.push(e),o.info(`⚡ Theme unlocked: ${e}`,null,"PowerUpManager"))}getBallPhysicsProperties(){const e=Ne(this.upgradeProgress.currentBallType);return v({},e.physics)}getBarSpeedMultiplier(){var a;const i=((a=ge("barSpeedLevel").effects.speedMultiplier)==null?void 0:a[this.upgradeProgress.barSpeedLevel])||1,s=this.powerUpEffects.barSpeedMultiplier||1;return 1*i*s}getFrictionModifier(){var s;return 1*(((s=ge("frictionLevel").effects.frictionModifier)==null?void 0:s[this.upgradeProgress.frictionLevel])||1)}useShield(){const e=this.activePowerUps.get(y.CIRCUIT_PATCH);return e&&e.charges>0?(e.charges--,e.isActive=!1,this.eventSystem.emitChargeUsed(y.CIRCUIT_PATCH,e,{shieldUsed:!0}),o.info("🛡️ Shield used",null,"PowerUpManager"),!0):!1}validatePowerUpType(e){const t=Object.values(y).includes(e);return t||this.validationErrors.push(`Invalid power-up type: ${e}`),t}validateState(){this.validationErrors=[],this.activePowerUps.forEach((e,t)=>{if(e.charges<0&&this.validationErrors.push(`Negative charges for ${t}: ${e.charges}`),e.charges>e.maxCharges&&this.validationErrors.push(`Charges exceed max for ${t}: ${e.charges}/${e.maxCharges}`),e.isActive&&e.duration>0){const i=this.currentTime-e.startTime;i<0&&this.validationErrors.push(`Negative elapsed time for ${t}: ${i}`)}}),this.validationErrors.length>0&&o.error(`❌ Validation errors: ${this.validationErrors.join(", ")}`,null,"PowerUpManager")}getValidationErrors(){return[...this.validationErrors]}getEventSystem(){return this.eventSystem}getUsageStatistics(){const e=this.eventSystem.getUsageStatistics(),t=Array.from(this.activePowerUps.values()).filter(i=>i.isActive).length;return $(v({},e),{currentActiveCount:t})}reset(){this.activePowerUps.clear(),this.powerUpEffects={},this.currentTime=0,this.validationErrors=[],this.eventSystem.clearHistory(),o.info("⚡ PowerUpManager reset",null,"PowerUpManager")}}class We{constructor(){l(this,"visualEffectCache",new Map);l(this,"lastCacheUpdate",new Map);l(this,"cacheTimeout",1e3);l(this,"activePhysicsEffects",new Map);l(this,"activeVisualEffects",new Map);l(this,"pathCache",new Map);l(this,"pathCacheTimeout",5e3)}applyPhysicsEffects(e,t){const i=G(e);this.removePhysicsEffects(e,t);const s={type:e,applied:!0,timestamp:Date.now()};switch(e){case y.SLOW_MO_SURGE:s.timeScale=i.physics.timeScale,t.physicsEngine.setTimeScale&&t.physicsEngine.setTimeScale(i.physics.timeScale||1);break;case y.MAGNETIC_GUIDE:s.magneticForce=i.physics.magneticForce;break;case y.OVERCLOCK_BOOST:s.barSpeedMultiplier=i.physics.barSpeedMultiplier,t.tiltingBar.setSpeedMultiplier(i.physics.barSpeedMultiplier||1);break;case y.CIRCUIT_PATCH:break;case y.SCAN_REVEAL:break}this.activePhysicsEffects.set(e,s),o.debug(`⚡ Physics effects applied: ${e}`,null,"PowerUpEffects")}removePhysicsEffects(e,t){if(this.activePhysicsEffects.get(e)){switch(e){case y.SLOW_MO_SURGE:t.physicsEngine.setTimeScale&&t.physicsEngine.setTimeScale(1);break;case y.OVERCLOCK_BOOST:t.tiltingBar.setSpeedMultiplier(1);break;case y.MAGNETIC_GUIDE:break;case y.CIRCUIT_PATCH:case y.SCAN_REVEAL:break}this.activePhysicsEffects.delete(e),o.debug(`⚡ Physics effects removed: ${e}`,null,"PowerUpEffects")}}updatePhysicsEffects(e){const t=this.activePhysicsEffects.get(y.MAGNETIC_GUIDE);t&&e.targetPosition&&this.updateMagneticEffect(t,e)}updateMagneticEffect(e,t){if(!e.magneticForce||!t.targetPosition)return;const i=t.physicsEngine.getObjects().find(a=>a.id==="game-ball");if(!i)return;const s=Math.sqrt(Math.pow(i.position.x-t.targetPosition.x,2)+Math.pow(i.position.y-t.targetPosition.y,2));if(s<100){const a=e.magneticForce*(1-s/100),n=(t.targetPosition.x-i.position.x)/s,r=(t.targetPosition.y-i.position.y)/s;i.acceleration.x+=n*a*100,i.acceleration.y+=r*a*100}}getVisualEffects(e,t){const i=[],s=Date.now();return e.forEach((a,n)=>{if(a.isActive){const r=`${n}_${a.startTime}_${s}`;if(this.shouldUseCache(n,s)){const h=this.visualEffectCache.get(r);if(h){i.push(...h);return}}const c=this.generateVisualEffects(n,a,t);this.visualEffectCache.set(r,c),this.lastCacheUpdate.set(n,s),i.push(...c)}}),i}generateVisualEffects(e,t,i){const s=G(e),a=[],n=Date.now(),r=n-t.startTime;let c=[];return r<500?c=s.visualEffects.activation:t.isActive?c=s.visualEffects.active:c=s.visualEffects.deactivation,c.forEach((h,f)=>{const u={type:h.type,data:this.processEffectData(h.data,e,i),id:`${e}_${f}_${n}`,timestamp:n};a.push(u)}),a}processEffectData(e,t,i){const s=v({},e);return s.pulse&&(s.currentIntensity=s.intensity+Math.sin(i.currentTime*(s.pulseSpeed||.01))*(s.pulseAmplitude||.3)),t===y.SCAN_REVEAL&&s.type==="path_reveal"&&(s.path=this.getOptimalPath(i)),s}getOptimalPath(e){if(!e.targetPosition)return[];const t=e.physicsEngine.getObjects().find(n=>n.id==="game-ball");if(!t)return[];const i=`${t.position.x}_${t.position.y}_${e.targetPosition.x}_${e.targetPosition.y}`,s=this.pathCache.get(i);if(s)return s;const a=this.calculateOptimalPath(t.position,e.targetPosition,e.physicsEngine.getObjects());return this.pathCache.set(i,a),setTimeout(()=>{this.pathCache.delete(i)},this.pathCacheTimeout),a}calculateOptimalPath(e,t,i){const s=[];s.push(v({},e));const a=10,n=t.x-e.x,r=t.y-e.y;for(let c=1;c<=a;c++){const h=c/a;let f=e.x+n*h,u=e.y+r*h;i.forEach(g=>{g.id!=="game-ball"&&this.isPointNearObstacle(f,u,g)&&(f+=f<g.position.x?-20:20,u+=u<g.position.y?-20:20)}),s.push({x:f,y:u})}return s.push(v({},t)),s}isPointNearObstacle(e,t,i){return Math.sqrt(Math.pow(e-i.position.x,2)+Math.pow(t-i.position.y,2))<(i.radius||20)+10}shouldUseCache(e,t){const i=this.lastCacheUpdate.get(e);return i?t-i<this.cacheTimeout:!1}shouldUseShield(e,t){return e.y>t.height+50}getActivePhysicsEffects(){return new Map(this.activePhysicsEffects)}clearVisualCache(){this.visualEffectCache.clear(),this.lastCacheUpdate.clear(),o.debug("🔄 Visual effect cache cleared",null,"PowerUpEffects")}clearPathCache(){this.pathCache.clear(),o.debug("🔄 Path cache cleared",null,"PowerUpEffects")}getCacheStats(){return{visualCacheSize:this.visualEffectCache.size,pathCacheSize:this.pathCache.size,lastUpdates:new Map(this.lastCacheUpdate)}}reset(){this.activePhysicsEffects.clear(),this.activeVisualEffects.clear(),this.clearVisualCache(),this.clearPathCache(),o.debug("🔄 PowerUpEffects reset",null,"PowerUpEffects")}}class Ye{constructor(e,t,i,s={}){l(this,"powerUpManager");l(this,"powerUpEffects");l(this,"eventSystem");l(this,"config");l(this,"performanceMetrics");l(this,"isVisible",!1);l(this,"frameStartTime",0);l(this,"frameCount",0);l(this,"performanceHistory",[]);l(this,"maxHistoryLength",60);l(this,"consoleCommands",new Map);this.powerUpManager=e,this.powerUpEffects=t,this.eventSystem=i,this.config=v({showOverlay:!1,showPerformanceStats:!1,showEventHistory:!1,showCacheStats:!1,showValidation:!1,logLevel:"warn"},s),this.performanceMetrics={frameTime:0,visualEffectCount:0,physicsEffectCount:0,cacheHitRate:0,memoryUsage:0,eventCount:0,lastUpdateTime:Date.now()},this.initializeConsoleCommands(),this.setupEventListeners(),o.info("🔧 PowerUpDebugger initialized",null,"PowerUpDebugger")}initializeConsoleCommands(){this.consoleCommands.set("powerup.activate",e=>{const t=e[0];t&&Object.values(y).includes(t)?(this.powerUpManager.activatePowerUp(t),console.log(`✓ Activated power-up: ${t}`)):console.log(`❌ Invalid power-up type: ${t}`)}),this.consoleCommands.set("powerup.deactivate",e=>{const t=e[0];t&&Object.values(y).includes(t)?(this.powerUpManager.deactivatePowerUp(t),console.log(`✓ Deactivated power-up: ${t}`)):console.log(`❌ Invalid power-up type: ${t}`)}),this.consoleCommands.set("powerup.charges",e=>{const t=e[0],i=parseInt(e[1])||1;t&&Object.values(y).includes(t)?(this.powerUpManager.addCharges(t,i),console.log(`✓ Added ${i} charges to ${t}`)):console.log(`❌ Invalid power-up type: ${t}`)}),this.consoleCommands.set("powerup.stats",()=>{const e=this.powerUpManager.getUsageStatistics();console.log("📊 Power-up Statistics:",e)}),this.consoleCommands.set("powerup.debug",e=>{switch(e[0]){case"show":this.show();break;case"hide":this.hide();break;case"toggle":this.toggle();break;case"clear":this.clearHistory();break;default:console.log("Usage: powerup.debug [show|hide|toggle|clear]")}}),this.consoleCommands.set("powerup.cache",e=>{switch(e[0]){case"stats":{const i=this.powerUpEffects.getCacheStats();console.log("📈 Cache Statistics:",i);break}case"clear":this.powerUpEffects.clearVisualCache(),this.powerUpEffects.clearPathCache(),console.log("✓ Cache cleared");break;default:console.log("Usage: powerup.cache [stats|clear]")}}),this.consoleCommands.set("powerup.validate",()=>{const e=this.powerUpManager.getValidationErrors();e.length>0?console.log("❌ Validation Errors:",e):console.log("✓ All power-ups are valid")}),typeof window!="undefined"&&(window.powerupDebug={activate:e=>this.consoleCommands.get("powerup.activate")([e]),deactivate:e=>this.consoleCommands.get("powerup.deactivate")([e]),addCharges:(e,t)=>this.consoleCommands.get("powerup.charges")([e,t.toString()]),stats:()=>this.consoleCommands.get("powerup.stats")([]),show:()=>this.show(),hide:()=>this.hide(),toggle:()=>this.toggle(),cache:()=>this.consoleCommands.get("powerup.cache")(["stats"]),validate:()=>this.consoleCommands.get("powerup.validate")([])})}setupEventListeners(){this.eventSystem.registerGlobalCallbacks({onActivated:()=>this.performanceMetrics.eventCount++,onDeactivated:()=>this.performanceMetrics.eventCount++,onExpired:()=>this.performanceMetrics.eventCount++,onChargeUsed:()=>this.performanceMetrics.eventCount++,onChargeAdded:()=>this.performanceMetrics.eventCount++})}startFrameMeasurement(){this.frameStartTime=performance.now()}endFrameMeasurement(){const e=performance.now()-this.frameStartTime;this.performanceMetrics.frameTime=e,this.performanceMetrics.lastUpdateTime=Date.now(),this.performanceHistory.push(e),this.performanceHistory.length>this.maxHistoryLength&&this.performanceHistory.shift(),this.frameCount++}updateMetrics(){const e=this.powerUpEffects.getCacheStats();this.performanceMetrics.visualEffectCount=e.visualCacheSize,this.performanceMetrics.physicsEffectCount=this.powerUpEffects.getActivePhysicsEffects().size,this.performanceMetrics.cacheHitRate=e.visualCacheSize>0?Math.min(e.visualCacheSize/10,1):0,this.performanceMetrics.memoryUsage=e.visualCacheSize*100+e.pathCacheSize*200+this.eventSystem.getEventHistory().length*50}show(){this.isVisible=!0,this.config.showOverlay=!0,o.info("🔧 Debug overlay shown",null,"PowerUpDebugger")}hide(){this.isVisible=!1,this.config.showOverlay=!1,o.info("🔧 Debug overlay hidden",null,"PowerUpDebugger")}toggle(){this.isVisible?this.hide():this.show()}clearHistory(){this.performanceHistory=[],this.eventSystem.clearHistory(),this.frameCount=0,o.info("🔧 Debug history cleared",null,"PowerUpDebugger")}render(e){if(!this.isVisible||!this.config.showOverlay)return;this.updateMetrics(),e.save(),e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(10,10,300,400),e.strokeStyle="#00ffff",e.lineWidth=2,e.strokeRect(10,10,300,400),e.fillStyle="#00ffff",e.font="bold 16px monospace",e.fillText("Power-Up Debug",20,35);let t=60;e.font="12px monospace",this.config.showPerformanceStats&&(e.fillStyle="#ffff00",e.fillText("Performance:",20,t),t+=20,e.fillStyle="#ffffff",e.fillText(`Frame Time: ${this.performanceMetrics.frameTime.toFixed(2)}ms`,25,t),t+=15,e.fillText(`FPS: ${this.getFPS().toFixed(1)}`,25,t),t+=15,e.fillText(`Visual Effects: ${this.performanceMetrics.visualEffectCount}`,25,t),t+=15,e.fillText(`Physics Effects: ${this.performanceMetrics.physicsEffectCount}`,25,t),t+=15,e.fillText(`Cache Hit Rate: ${(this.performanceMetrics.cacheHitRate*100).toFixed(1)}%`,25,t),t+=15,e.fillText(`Memory Usage: ${this.formatBytes(this.performanceMetrics.memoryUsage)}`,25,t),t+=20),e.fillStyle="#ff9900",e.fillText("Active Power-ups:",20,t),t+=20;const i=this.powerUpManager.getActivePowerUps();if(i.size===0?(e.fillStyle="#888888",e.fillText("None",25,t),t+=15):i.forEach((s,a)=>{const n=s.isActive?"#00ff00":"#888888";e.fillStyle=n;const r=s.duration>0?Math.max(0,s.duration-(this.performanceMetrics.lastUpdateTime-s.startTime)):0;e.fillText(`${a}: ${s.charges}/${s.maxCharges} (${(r/1e3).toFixed(1)}s)`,25,t),t+=15}),t+=10,this.config.showCacheStats){e.fillStyle="#ff00ff",e.fillText("Cache Stats:",20,t),t+=20;const s=this.powerUpEffects.getCacheStats();e.fillStyle="#ffffff",e.fillText(`Visual Cache: ${s.visualCacheSize}`,25,t),t+=15,e.fillText(`Path Cache: ${s.pathCacheSize}`,25,t),t+=20}if(this.config.showValidation){const s=this.powerUpManager.getValidationErrors();s.length>0?(e.fillStyle="#ff0000",e.fillText("Validation Errors:",20,t),t+=20,s.forEach((a,n)=>{n<3&&(e.fillText(`• ${a}`,25,t),t+=15)}),s.length>3&&(e.fillText(`... and ${s.length-3} more`,25,t),t+=15)):(e.fillStyle="#00ff00",e.fillText("✓ All Valid",20,t),t+=15)}if(this.config.showEventHistory){e.fillStyle="#00ffff",e.fillText("Recent Events:",20,t),t+=20;const s=this.eventSystem.getEventHistory(3);s.length===0?(e.fillStyle="#888888",e.fillText("None",25,t)):s.reverse().forEach(a=>{const n=Date.now()-a.timestamp,r=n<1e3?"#00ff00":n<5e3?"#ffff00":"#888888";e.fillStyle=r,e.fillText(`${a.type} (${(n/1e3).toFixed(1)}s ago)`,25,t),t+=15})}e.restore()}getFPS(){return this.performanceHistory.length<2?0:1e3/(this.performanceHistory.reduce((t,i)=>t+i,0)/this.performanceHistory.length)}formatBytes(e){if(e===0)return"0 B";const t=1024,i=["B","KB","MB","GB"],s=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,s)).toFixed(2))+" "+i[s]}executeCommand(e,t=[]){const i=this.consoleCommands.get(e);if(i)try{i(t)}catch(s){console.error(`❌ Error executing command '${e}':`,s)}else console.warn(`❌ Unknown command: ${e}`),console.log("Available commands:",Array.from(this.consoleCommands.keys()))}getConfig(){return v({},this.config)}updateConfig(e){this.config=v(v({},this.config),e),o.info("🔧 Debug config updated",null,"PowerUpDebugger")}getPerformanceMetrics(){return v({},this.performanceMetrics)}getPerformanceHistory(){return[...this.performanceHistory]}exportDebugData(){return{config:this.getConfig(),metrics:this.getPerformanceMetrics(),powerUpStates:Object.fromEntries(this.powerUpManager.getActivePowerUps()),eventHistory:this.eventSystem.getEventHistory(),cacheStats:this.powerUpEffects.getCacheStats(),validationErrors:this.powerUpManager.getValidationErrors()}}}var x=(d=>(d.GOAL_HIT="goal",d.POWERUP_COLLECT="powerup",d.LEVEL_COMPLETE="level",d.BONUS="bonus",d.ACHIEVEMENT="achievement",d.COMBO="combo",d.TIME_BONUS="time_bonus",d.SAUCER_WAITING="saucer_waiting",d))(x||{});class N{constructor(e){l(this,"config");l(this,"startTime");l(this,"currentPosition");l(this,"isActive",!0);l(this,"initialVelocity");l(this,"id");l(this,"currentScale",1);l(this,"currentOpacity",1);l(this,"currentRotation",0);this.config=e,this.startTime=Date.now(),this.currentPosition=v({},e.startPosition),this.id=`flyoff-${this.startTime}-${Math.random().toString(36).substr(2,9)}`,this.initialVelocity=this.calculateInitialVelocity(),o.debug(`✨ Point fly-off created: ${e.points} points at (${e.startPosition.x}, ${e.startPosition.y})`,null,"PointFlyOff")}calculateInitialVelocity(){switch(this.config.animation){case"fly-up":return{x:0,y:-80};case"arc":{const e=(Math.random()-.5)*Math.PI*.6,t=60+Math.random()*40;return{x:Math.sin(e)*t,y:-Math.cos(e)*t}}case"explode":{const e=Math.random()*Math.PI*2,t=40+Math.random()*60;return{x:Math.cos(e)*t,y:Math.sin(e)*t}}case"fade":default:return{x:0,y:-20}}}update(e){if(!this.isActive)return;const t=Date.now()-this.startTime,i=Math.min(t/this.config.duration,1);if(i>=1){this.isActive=!1;return}this.updatePosition(e,i),this.updateVisualProperties(i)}updatePosition(e,t){const i=e/1e3;switch(this.config.animation){case"fly-up":{const s=this.initialVelocity.y*(1-t*.3);this.currentPosition.y+=s*i;break}case"arc":{this.currentPosition.x+=this.initialVelocity.x*i,this.currentPosition.y+=this.initialVelocity.y*i,this.initialVelocity.y+=150*i;break}case"explode":{this.currentPosition.x+=this.initialVelocity.x*i,this.currentPosition.y+=this.initialVelocity.y*i,this.initialVelocity.x*=.95,this.initialVelocity.y*=.95;break}case"fade":this.currentPosition.y+=this.initialVelocity.y*i;break}}updateVisualProperties(e){switch(this.config.animation){case"fly-up":e<.2?this.currentScale=1+e*2:this.currentScale=1.4-(e-.2)*1.75,this.currentOpacity=1-Math.pow(e,1.5);break;case"arc":this.currentScale=1+e*.3,this.currentOpacity=1-Math.pow(e,2);break;case"explode":this.currentScale=1+e*1.5,this.currentOpacity=1-Math.pow(e,1.2),this.currentRotation=e*Math.PI*4;break;case"fade":this.currentScale=1+e*.5,this.currentOpacity=1-e;break}this.currentScale=Math.max(0,this.currentScale),this.currentOpacity=Math.max(0,Math.min(1,this.currentOpacity))}render(e){if(!this.isActive||this.currentOpacity<=0)return;e.save(),e.globalAlpha=this.currentOpacity,e.translate(this.currentPosition.x,this.currentPosition.y),e.scale(this.currentScale,this.currentScale),e.rotate(this.currentRotation),e.font=`${this.config.fontSize}px ${this.config.fontFamily}`,e.fillStyle=this.config.color,e.textAlign="center",e.textBaseline="middle",e.shadowColor="rgba(0, 0, 0, 0.7)",e.shadowBlur=4,e.shadowOffsetX=1,e.shadowOffsetY=1;let t;this.config.color==="#00ffff"?t=`-${this.config.points} Secs`:t=`+${this.config.points}`,e.fillText(t,0,0),e.restore()}isActiveAnimation(){return this.isActive}getId(){return this.id}getPosition(){return v({},this.currentPosition)}complete(){this.isActive=!1}getRemainingTime(){const e=Date.now()-this.startTime;return Math.max(0,this.config.duration-e)}}class V{static createGoalHit(e,t){return new N({points:e,startPosition:t,color:"#39ff14",fontSize:20,duration:1500,animation:"fly-up",fontFamily:"Interceptor"})}static createPowerUpCollect(e,t,i="#ff6600"){return new N({points:e,startPosition:t,color:"#39ff14",fontSize:16,duration:1200,animation:"arc",fontFamily:"Interceptor"})}static createLevelComplete(e,t){return new N({points:e,startPosition:t,color:"#39ff14",fontSize:24,duration:2e3,animation:"explode",fontFamily:"Cyberpunks"})}static createBonus(e,t){return new N({points:e,startPosition:t,color:"#39ff14",fontSize:18,duration:1300,animation:"arc",fontFamily:"Interceptor"})}static createAchievement(e,t){return new N({points:e,startPosition:t,color:"#39ff14",fontSize:22,duration:1800,animation:"explode",fontFamily:"Cyberpunks"})}static createCombo(e,t,i){return new N({points:e,startPosition:t,color:"#39ff14",fontSize:19,duration:1400,animation:"fly-up",fontFamily:"Interceptor"})}static createTimeBonus(e,t){return new N({points:e,startPosition:t,color:"#00ffff",fontSize:20,duration:2e3,animation:"fly-up",fontFamily:"Interceptor"})}static createSaucerWaiting(e,t){return new N({points:e,startPosition:t,color:"#00d26a",fontSize:12,duration:1200,animation:"fly-up",fontFamily:"Interceptor"})}}class ze{constructor(){l(this,"activeFlyOffs",new Map);l(this,"maxActiveFlyOffs",20);l(this,"totalPointsDisplayed",0);l(this,"frameTime",0);l(this,"averageFrameTime",0);l(this,"frameCount",0);o.info("✨ PointFlyOffManager initialized",null,"PointFlyOffManager")}createFlyOff(e){var s,a;this.activeFlyOffs.size>=this.maxActiveFlyOffs&&this.cleanupOldestFlyOff();let t;switch(e.type){case x.GOAL_HIT:t=V.createGoalHit(e.points,e.position);break;case x.POWERUP_COLLECT:{const n=((s=e.metadata)==null?void 0:s.color)||"#ff6600";t=V.createPowerUpCollect(e.points,e.position,n);break}case x.LEVEL_COMPLETE:t=V.createLevelComplete(e.points,e.position);break;case x.BONUS:t=V.createBonus(e.points,e.position);break;case x.ACHIEVEMENT:t=V.createAchievement(e.points,e.position);break;case x.COMBO:{const n=((a=e.metadata)==null?void 0:a.multiplier)||1;t=V.createCombo(e.points,e.position,n);break}case x.TIME_BONUS:t=V.createTimeBonus(e.points,e.position);break;case x.SAUCER_WAITING:t=V.createSaucerWaiting(e.points,e.position);break;default:return o.warn(`❌ Unknown point fly-off type: ${e.type}`,null,"PointFlyOffManager"),null}const i=t.getId();return this.activeFlyOffs.set(i,t),this.totalPointsDisplayed+=e.points,o.debug(`✨ Created ${e.type} fly-off: +${e.points} points (ID: ${i})`,null,"PointFlyOffManager"),i}update(e){const t=performance.now(),i=[];for(const[s,a]of this.activeFlyOffs)a.update(e),a.isActiveAnimation()||i.push(s);for(const s of i)this.activeFlyOffs.delete(s);this.frameTime=performance.now()-t,this.updatePerformanceMetrics(),this.averageFrameTime>2&&o.warn(`⚠️ Point fly-off performance warning: ${this.averageFrameTime.toFixed(2)}ms average frame time`,null,"PointFlyOffManager")}render(e){if(this.activeFlyOffs.size===0)return;const t=Array.from(this.activeFlyOffs.values()).sort((i,s)=>parseInt(i.getId().split("-")[1])-parseInt(s.getId().split("-")[1]));for(const i of t)i.render(e)}showGoalHit(e,t){return this.createFlyOff({type:x.GOAL_HIT,points:e,position:v({},t)})}showPowerUpCollect(e,t,i){return this.createFlyOff({type:x.POWERUP_COLLECT,points:e,position:v({},t),metadata:{color:i}})}showLevelComplete(e,t){return this.createFlyOff({type:x.LEVEL_COMPLETE,points:e,position:v({},t)})}showBonus(e,t){return this.createFlyOff({type:x.BONUS,points:e,position:v({},t)})}showAchievement(e,t){return this.createFlyOff({type:x.ACHIEVEMENT,points:e,position:v({},t)})}showCombo(e,t,i){return this.createFlyOff({type:x.COMBO,points:e,position:v({},t),metadata:{multiplier:i}})}showTimeBonus(e,t){return this.createFlyOff({type:x.TIME_BONUS,points:e,position:v({},t)})}showSaucerWaiting(e,t){return this.createFlyOff({type:x.SAUCER_WAITING,points:e,position:v({},t)})}clearAll(){this.activeFlyOffs.clear(),o.debug("🧹 Cleared all point fly-offs",null,"PointFlyOffManager")}completeAll(){for(const e of this.activeFlyOffs.values())e.complete();o.debug("⏭️ Completed all point fly-offs",null,"PointFlyOffManager")}cleanupOldestFlyOff(){if(this.activeFlyOffs.size===0)return;let e="",t=1/0;for(const[i]of this.activeFlyOffs){const s=parseInt(i.split("-")[1]);s<t&&(t=s,e=i)}e&&(this.activeFlyOffs.delete(e),o.debug(`🧹 Cleaned up oldest fly-off: ${e}`,null,"PointFlyOffManager"))}updatePerformanceMetrics(){this.frameCount++;const e=Math.min(1/this.frameCount,.01);this.averageFrameTime=this.averageFrameTime*(1-e)+this.frameTime*e}getPerformanceStats(){return{activeFlyOffs:this.activeFlyOffs.size,averageFrameTime:this.averageFrameTime,totalPointsDisplayed:this.totalPointsDisplayed}}getActiveFlyOffCount(){return this.activeFlyOffs.size}setMaxActiveFlyOffs(e){this.maxActiveFlyOffs=Math.max(1,e),o.debug(`⚙️ Set max active fly-offs to: ${this.maxActiveFlyOffs}`,null,"PointFlyOffManager")}isFlyOffActive(e){return this.activeFlyOffs.has(e)}getFlyOffPosition(e){const t=this.activeFlyOffs.get(e);return t?t.getPosition():null}getFlyOffRemainingTime(e){const t=this.activeFlyOffs.get(e);return t?t.getRemainingTime():0}showScoreBurst(e){const t=[];for(const i of e){const s=this.createFlyOff(i);s&&t.push(s)}return o.debug(`🎆 Created score burst: ${t.length} fly-offs`,null,"PointFlyOffManager"),t}}const W=class W{constructor(){l(this,"currentSession");l(this,"currentLevelStartTime",0);l(this,"currentLevelTimeReductions",0);l(this,"currentLevelAssistPenalties",0);this.currentSession={totalScore:0,levelScores:[],sessionStartTime:Date.now()},o.info("📊 UnifiedScoringSystem initialized",null,"UnifiedScoringSystem")}static calculateBaseLevelValue(e){return W.BASE_LEVEL_VALUE_START+(e-1)*W.BASE_LEVEL_VALUE_INCREMENT}startNewSession(){this.currentSession={totalScore:0,levelScores:[],sessionStartTime:Date.now()},this.currentLevelStartTime=0,this.currentLevelTimeReductions=0,this.currentLevelAssistPenalties=0,o.info("🎮 New scoring session started",null,"UnifiedScoringSystem")}startLevel(e){this.currentLevelStartTime=Date.now(),this.currentLevelTimeReductions=0,this.currentLevelAssistPenalties=0,o.info(`⏰ Started timing level ${e}`,null,"UnifiedScoringSystem")}addTimeReduction(e){this.currentLevelTimeReductions+=e,o.info(`⚡ Time reduction added: ${e}s (total: ${this.currentLevelTimeReductions}s)`,null,"UnifiedScoringSystem")}addAssistPenalty(e){this.currentLevelAssistPenalties+=e,o.info(`⚖️ Assist penalty added: ${e}s (total: ${this.currentLevelAssistPenalties}s)`,null,"UnifiedScoringSystem")}addBonusPoints(e){this.currentSession.totalScore+=e,o.info(`🎰 Bonus points added: ${e} (total: ${this.currentSession.totalScore.toFixed(1)})`,null,"UnifiedScoringSystem")}completeLevel(e){if(this.currentLevelStartTime===0)throw new Error("Level not started - call startLevel() first");const t=(Date.now()-this.currentLevelStartTime)/1e3,i=Math.max(.1,t-this.currentLevelTimeReductions+this.currentLevelAssistPenalties),s=W.calculateBaseLevelValue(e),a=s/i,n={levelId:e,baseLevelValue:s,rawTime:t,adjustedTime:i,levelPoints:a,timeReductions:this.currentLevelTimeReductions,assistPenalties:this.currentLevelAssistPenalties};return this.currentSession.levelScores.push(n),this.currentSession.totalScore+=a,o.info(`🎯 Level ${e} completed: ${a.toFixed(2)} points (${s}/${i.toFixed(2)}s = ${a.toFixed(2)})`,null,"UnifiedScoringSystem"),this.currentLevelStartTime=0,this.currentLevelTimeReductions=0,this.currentLevelAssistPenalties=0,n}getCurrentSession(){return v({},this.currentSession)}getCurrentTotalScore(){return this.currentSession.totalScore}getLevelScores(){return[...this.currentSession.levelScores]}getCurrentLevelStatus(){return{isActive:this.currentLevelStartTime>0,rawTime:this.currentLevelStartTime>0?(Date.now()-this.currentLevelStartTime)/1e3:0,timeReductions:this.currentLevelTimeReductions,assistPenalties:this.currentLevelAssistPenalties}}endSession(){return this.currentSession.sessionEndTime=Date.now(),o.info(`🏁 Scoring session ended: ${this.currentSession.totalScore.toFixed(2)} total points across ${this.currentSession.levelScores.length} levels`,null,"UnifiedScoringSystem"),v({},this.currentSession)}getScoringSummary(){const e=this.currentSession.levelScores,t=e.map(i=>i.levelPoints);return{totalScore:this.currentSession.totalScore,levelsCompleted:e.length,averageScore:e.length>0?this.currentSession.totalScore/e.length:0,bestLevelScore:t.length>0?Math.max(...t):0,worstLevelScore:t.length>0?Math.min(...t):0}}static formatScore(e){return e.toFixed(1)}getLevelPointsPreview(e){if(this.currentLevelStartTime===0)return 0;const t=(Date.now()-this.currentLevelStartTime)/1e3,i=Math.max(.1,t-this.currentLevelTimeReductions+this.currentLevelAssistPenalties);return W.calculateBaseLevelValue(e)/i}};l(W,"BASE_LEVEL_VALUE_START",1e5),l(W,"BASE_LEVEL_VALUE_INCREMENT",2e4);let ce=W;class Ke{constructor(){l(this,"gameState");l(this,"gameLoop");l(this,"renderer");l(this,"physicsEngine");l(this,"inputManager");l(this,"tiltingBar");l(this,"levelManager");l(this,"audioManager");l(this,"settingsMenu");l(this,"saveLoadMenu");l(this,"achievementNotification");l(this,"statsMenu");l(this,"winScreen",null);l(this,"storageManager");l(this,"achievementManager");l(this,"statsManager");l(this,"powerUpManager");l(this,"powerUpEffects");l(this,"powerUpEventSystem");l(this,"powerUpDebugger");l(this,"pointFlyOffManager");l(this,"unifiedScoringSystem");l(this,"currentLevel",null);l(this,"isRunning",!1);l(this,"levelCompletionHandled",!1);l(this,"lastSaucerConstraintY");l(this,"saucerWaitingScoringState",{isActive:!1,lastScoringTime:0,scoringInterval:50});l(this,"isAnimatingHoleFall",!1);l(this,"holeAnimationState",null);l(this,"menuTimer",0);l(this,"attractModeDelay",1e4);l(this,"attractModeTimer",0);l(this,"loadingProgress",0);l(this,"loadingStatus","Initializing...");l(this,"assetsToLoad",[]);l(this,"loadedAssets",0);l(this,"loadingComplete",!1);l(this,"gameProgress");l(this,"currentSaveSlot",0);l(this,"sessionStartTime",0);l(this,"sessionTotalTime",0);l(this,"lastAutoSave",0);this.gameState=new Pe,this.gameLoop=new Te,this.renderer=new Ce,this.physicsEngine=new xe,this.inputManager=new Ee,this.levelManager=new ke,this.audioManager=new Oe,this.storageManager=new _e,this.achievementManager=new Ge,this.statsManager=new Be,this.powerUpEventSystem=new Se,this.powerUpManager=new Ve(this.powerUpEventSystem),this.powerUpEffects=new We,this.powerUpDebugger=new Ye(this.powerUpManager,this.powerUpEffects,this.powerUpEventSystem,{showOverlay:!1,showPerformanceStats:!0,showEventHistory:!0,showCacheStats:!0,showValidation:!0,logLevel:"warn"}),this.setupPowerUpEventCallbacks(),this.pointFlyOffManager=new ze,this.unifiedScoringSystem=new ce,this.settingsMenu=new de({audioManager:this.audioManager,onClose:()=>this.closeSettings(),onBackToMenu:()=>this.backToMenuFromSettings()}),this.saveLoadMenu=new Ie({onClose:()=>this.closeSaveLoadMenu(),onLoadGame:e=>this.loadGameFromSlot(e),onNewGame:e=>this.startNewGameInSlot(e),onDeleteSlot:e=>this.deleteSaveSlot(e),getSaveSlots:()=>this.storageManager.getSaveSlots(),getCurrentProgress:()=>this.gameProgress,getAchievements:()=>this.achievementManager.getAllAchievements()}),this.achievementNotification=new De({onComplete:()=>{o.debug("🏆 Achievement notification completed",null,"Game")}}),this.statsMenu=new Re({onClose:()=>this.closeStatsMenu(),statsManager:this.statsManager}),this.tiltingBar=new Ae({position:{x:180,y:590},width:360,height:8,maxRotation:Math.PI/4,rotationSpeed:3,friction:.05}),o.info("🎮 Circuit Breaker - Game initialized with enhanced power-up system",null,"Game")}setupPowerUpEventCallbacks(){this.powerUpEventSystem.registerGlobalCallbacks({onActivated:e=>{const t=this.createEffectContext();this.powerUpEffects.applyPhysicsEffects(e.type,t);const i=G(e.type);i.audio.activation&&this.audioManager.playSound(i.audio.activation),o.info(`⚡ Power-up activated: ${e.type}`,null,"Game")},onDeactivated:e=>{const t=this.createEffectContext();this.powerUpEffects.removePhysicsEffects(e.type,t);const i=G(e.type);i.audio.deactivation&&this.audioManager.playSound(i.audio.deactivation),o.info(`⚡ Power-up deactivated: ${e.type}`,null,"Game")},onExpired:e=>{const t=this.createEffectContext();this.powerUpEffects.removePhysicsEffects(e.type,t),o.info(`⚡ Power-up expired: ${e.type}`,null,"Game")}})}createEffectContext(){let e;if(this.currentLevel){const i=this.currentLevel.getLevelData().holes.find(s=>s.isGoal);i&&(e={x:i.position.x,y:i.position.y})}return{physicsEngine:this.physicsEngine,tiltingBar:this.tiltingBar,currentTime:Date.now(),deltaTime:16.67,targetPosition:e}}init(){return C(this,null,function*(){try{o.info("🎮 Initializing Circuit Breaker...",null,"Game");const e=document.getElementById("game-canvas");if(!e)throw new Error("Canvas element not found");this.renderer.init(e),o.info("🎨 Loading sprite atlas...",null,"Game"),yield this.renderer.loadSprites(),o.info("✅ Sprite atlas loading completed",null,"Game"),yield m.preloadFonts(),this.physicsEngine.setGravity(0,520),this.physicsEngine.setAirResistance(.999),this.physicsEngine.setBounds(360,640),this.physicsEngine.setTiltingBar(this.tiltingBar),this.physicsEngine.setAudioCallback((f,u)=>{this.gameState.isPlaying()&&u==="bounce"&&this.audioManager.playBounceSound(f)});const t=this.physicsEngine.isBallHeld.bind(this.physicsEngine);this.physicsEngine.isBallHeld=f=>this.currentLevel&&this.currentLevel.isBallInSaucer(f)?!0:t(f);const i=this.physicsEngine.isBallSinking.bind(this.physicsEngine);this.physicsEngine.isBallSinking=f=>{var u;if(this.currentLevel){const g=this.currentLevel.getLevelData();for(const p of g.holes)if((u=p.saucerState)!=null&&u.isActive&&p.saucerState.ballId===f&&p.saucerState.phase==="sinking")return!0}return i(f)};const s=this.physicsEngine.getHeldBallTarget.bind(this.physicsEngine);this.physicsEngine.getHeldBallTarget=f=>{var u;if(this.currentLevel){const g=this.currentLevel.getLevelData();for(const p of g.holes)if((u=p.saucerState)!=null&&u.isActive&&p.saucerState.ballId===f)return this.currentLevel.getSaucerBallPosition(p.id)}return s(f)},this.inputManager.init(e,this.tiltingBar),yield this.audioManager.init(),this.loadGameProgress(),this.achievementManager.setAchievementCallback(f=>{o.info(`🏆 Achievement unlocked: ${f.name}`,null,"Game"),this.achievementNotification.show(f)});const a=14,n=-50,r=300,c=this.powerUpManager.getBallPhysicsProperties(),h=this.physicsEngine.createObject({id:"game-ball",x:n,y:r,radius:a,mass:c.mass,restitution:c.restitution,friction:c.friction,isStatic:!1});this.physicsEngine.addObject(h),this.physicsEngine.setDebug(this.gameState.isDebugMode()),this.powerUpManager.initializeRun(),this.currentLevel=this.levelManager.loadLevel(1,f=>{this.audioManager.playSound(f)}),this.currentLevel&&(this.currentLevel.start(),this.levelCompletionHandled=!1,o.info("🎯 Level 1 loaded and started",null,"Game")),this.isRunning=!0,this.statsManager.recordEvent({type:"session_start",timestamp:Date.now()}),o.info("✅ Circuit Breaker initialized successfully",null,"Game")}catch(e){throw o.error("❌ Failed to initialize Circuit Breaker:",e,"Game"),e}})}start(){if(!this.isRunning){o.warn("⚠️ Game not initialized. Call init() first.",null,"Game");return}o.info("▶️ Starting Circuit Breaker...",null,"Game"),this.gameState.setState(b.LOADING),this.gameLoop.start(this.gameState,this.renderer,this.physicsEngine,this),this.startAssetLoading()}update(e){if(this.powerUpDebugger.startFrameMeasurement(),this.inputManager.update(),this.gameState.isLoading()){this.loadingComplete&&this.hasAnyInput()&&(o.debug("🎮 User interaction detected - transitioning to menu",null,"Game"),this.completeLoading()),this.inputManager.endFrame();return}if(this.gameState.isState(b.MENU)){if(this.hasAnyInput()&&(this.menuTimer=0),(this.inputManager.isActionJustPressed("start")||this.inputManager.isMouseJustPressed())&&(o.info("🎮 Starting new game...",null,"Game"),this.startNewGame(),this.menuTimer=0,this.audioManager.resumeContext(),this.audioManager.playSound("ui_click")),this.inputManager.isKeyJustPressed("KeyD")&&(this.gameState.toggleDebugMode(),this.menuTimer=0,this.physicsEngine.setDebug(this.gameState.isDebugMode()),this.audioManager.playSound("ui_click")),this.inputManager.isKeyJustPressed("KeyS")&&(o.info("⚙️ Opening settings menu...",null,"Game"),this.openSettings(),this.menuTimer=0),this.inputManager.isKeyJustPressed("KeyL")&&(o.info("💾 Opening save/load menu...",null,"Game"),this.openSaveLoadMenu(),this.menuTimer=0),this.inputManager.isKeyJustPressed("KeyT")&&(o.info("📊 Opening stats menu...",null,"Game"),this.openStatsMenu(),this.menuTimer=0),this.inputManager.isKeyJustPressed("KeyH")&&(o.info("❓ Opening how to play screen...",null,"Game"),this.openHowToPlay(),this.menuTimer=0),this.inputManager.isMouseJustPressed()){const t=this.inputManager.getMousePosition();if(t&&t.x>=90&&t.x<=90+180&&t.y>=460&&t.y<=460+40){o.info("❓ Opening how to play screen via button click...",null,"Game"),this.openHowToPlay(),this.menuTimer=0,this.inputManager.endFrame();return}}this.menuTimer+=e,this.menuTimer>=this.attractModeDelay&&(o.debug("🎬 Starting attract mode...",null,"Game"),this.startAttractMode())}if(this.gameState.isAttractMode()&&(this.hasAnyInput()&&(o.debug("🏠 Exiting attract mode - returning to menu...",null,"Game"),this.exitAttractMode()),this.updateAttractMode(e)),this.gameState.isState(b.GAME_OVER)&&(this.inputManager.isActionJustPressed("start")||this.inputManager.isMouseJustPressed())&&(o.info("🏠 Returning to menu...",null,"Game"),this.gameState.reset(),this.audioManager.playSound("ui_click"),this.playMenuMusic()),this.gameState.isPaused()&&(this.inputManager.isActionJustPressed("pause")?(o.info("▶️ Resuming game...",null,"Game"),this.gameState.setState(b.PLAYING),this.audioManager.playSound("ui_click")):this.inputManager.isKeyJustPressed("KeyS")?(o.info("⚙️ Opening settings from pause menu...",null,"Game"),this.openSettings()):this.inputManager.isKeyJustPressed("KeyY")&&(o.info("🏠 Returning to menu from pause...",null,"Game"),this.gameState.reset(),this.audioManager.playSound("ui_click"),this.playMenuMusic())),this.gameState.isSettings()){const t=this.inputManager.getMousePosition();t&&(this.settingsMenu.handlePointerMove(t.x,t.y),this.inputManager.isMouseJustPressed()&&this.settingsMenu.handlePointerDown(t.x,t.y),this.inputManager.isMouseJustReleased()&&this.settingsMenu.handlePointerUp(t.x,t.y)),this.inputManager.isActionJustPressed("pause")&&(o.info("⚙️ Closing settings menu...",null,"Game"),this.closeSettings())}if(this.gameState.isSaveLoad()){this.saveLoadMenu.update(e);const t=this.inputManager.getMousePosition();t&&(this.saveLoadMenu.handlePointerMove(t.x,t.y),this.inputManager.isMouseJustPressed()&&this.saveLoadMenu.handlePointerDown(t.x,t.y),this.inputManager.isMouseJustReleased()&&this.saveLoadMenu.handlePointerUp(t.x,t.y));const i=this.inputManager.getJustPressedKeys();for(const s of i)if(this.saveLoadMenu.handleKeyPress(s))break;this.inputManager.isActionJustPressed("pause")&&(o.info("💾 Closing save/load menu...",null,"Game"),this.closeSaveLoadMenu())}if(this.gameState.isStats()){const t=this.inputManager.getJustPressedKeys();for(const i of t)this.statsMenu.handleInput(i);this.inputManager.isActionJustPressed("pause")&&(o.info("📊 Closing stats menu...",null,"Game"),this.closeStatsMenu())}if(this.gameState.isWinScreen()&&this.winScreen){this.winScreen.update(e);const t=this.inputManager.getJustPressedKeys();for(const i of t)this.winScreen.handleInput(i);this.inputManager.isMouseJustPressed()&&this.winScreen.handleInput("Space")}if(this.gameState.isHowToPlay()&&((this.inputManager.isActionJustPressed("pause")||this.inputManager.isKeyJustPressed("Backspace"))&&(o.info("❓ Closing how to play screen...",null,"Game"),this.gameState.setState(b.MENU),this.audioManager.playSound("ui_click")),this.inputManager.isKeyJustPressed("KeyD")&&(this.gameState.toggleDebugMode(),this.physicsEngine.setDebug(this.gameState.isDebugMode()),this.audioManager.playSound("ui_click"))),this.gameState.isConfirmingMenu()&&(this.inputManager.isKeyJustPressed("KeyY")||this.inputManager.isKeyJustPressed("Enter")?(o.info("✅ Confirmed - returning to menu",null,"Game"),this.gameState.reset(),this.audioManager.playSound("ui_click")):(this.inputManager.isKeyJustPressed("KeyN")||this.inputManager.isKeyJustPressed("Escape"))&&(o.info("❌ Cancelled - returning to game",null,"Game"),this.gameState.setState(b.PLAYING),this.audioManager.playSound("ui_click"))),this.gameState.isPlaying()){this.powerUpManager.update(e);const t=this.createEffectContext();if(t.deltaTime=e,this.powerUpEffects.updatePhysicsEffects(t),this.autoSave(),this.checkAchievements(),this.achievementNotification.update(e),this.pointFlyOffManager.update(e),this.inputManager.isActionJustPressed("pause")){o.debug("⏸️ Escape pressed - showing confirmation dialog",null,"Game"),this.gameState.setState(b.CONFIRM_MENU),this.audioManager.playSound("ui_click");return}this.isAnimatingHoleFall&&this.updateHoleAnimation(e),this.inputManager.isActionJustPressed("start")&&(o.debug("🎯 SPACE pressed - placing ball on bar",null,"Game"),this.placeBallOnBar(),this.audioManager.resumeContext(),this.audioManager.playSound("ui_click")),this.handlePowerUpInput();const i=this.inputManager.getLeftSideInput(),s=this.inputManager.getRightSideInput();this.currentLevel&&!this.currentLevel.hasTimerStarted()&&(i!==0||s!==0)&&this.currentLevel.startTimer(),this.tiltingBar.moveLeftSide(i),this.tiltingBar.moveRightSide(s),this.tiltingBar.update(e/1e3),this.currentLevel&&(this.currentLevel.update(e),this.updateSaucerBehavior(),this.isAnimatingHoleFall||(this.checkCollisions(),this.checkWinLoseConditions()))}this.handleDebugInput(),this.inputManager.endFrame(),this.powerUpDebugger.endFrameMeasurement()}renderGameplay(){var t;if(this.currentLevel){const i=this.currentLevel.getLevelData();for(const s of i.holes){if(!s.isActive&&!((t=s.animationState)!=null&&t.isAnimated))continue;const a=s.isGoal&&this.currentLevel?this.currentLevel.isGoalCompleted(s.id):!1;this.renderer.drawHole(s,a,this.gameState.isDebugMode())}}if(this.renderer.drawTiltingBar(this.tiltingBar),this.currentLevel){const i=this.currentLevel.getLevelData(),s=this.renderer.getContext();if(s){s.fillStyle="#00f0ff",m.setFont(s,"primary",12),s.textAlign="left",s.fillText(`Level: ${i.id} - ${i.name}`,10,20);const a=this.unifiedScoringSystem.getCurrentTotalScore();s.fillText(`Total Score: ${a.toFixed(1)}`,10,35);const n=this.unifiedScoringSystem.getCurrentLevelStatus();if(n.isActive){const r=this.unifiedScoringSystem.getLevelPointsPreview(i.id);s.fillText(`Level Points: ${r.toFixed(1)}`,10,50)}else s.fillText("Level Points: --.-",10,50);if(s.fillText(`Lives: ${this.gameState.getStateData().lives}`,10,65),n.isActive){const r=n.rawTime,c=Math.floor(r/60),h=r%60,f=`${c}:${h.toFixed(3).padStart(6,"0")}`;let u="";(n.timeReductions>0||n.assistPenalties>0)&&(u=` (${n.timeReductions>0?"-"+n.timeReductions.toFixed(1):""}${n.assistPenalties>0?"+"+n.assistPenalties.toFixed(1):""})`),s.fillText(`Time: ${f}${u}`,10,80)}else s.fillText("Time: --:---.---",10,80);if(this.gameState.isDebugMode()){s.fillStyle="#ffffff",m.setFont(s,"primary",8),s.textAlign="left";const r=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=768;s.fillText(`Device: ${r?"Mobile":"Desktop"}`,10,95),s.fillText(`Window: ${window.innerWidth}x${window.innerHeight}`,10,110);try{const u=F.getInstance(),g=u.getCurrentScale(),p=u.getConfig();s.fillText(`Scale: ${g.toFixed(2)}x (min: ${p.minScale})`,10,125),s.fillText(`ForceInt: ${p.forceIntegerScaling}`,10,140);const M=document.getElementById("game-canvas");M&&(s.fillText(`Canvas: ${M.width}x${M.height}`,10,155),s.fillText(`Style: ${M.style.width} x ${M.style.height}`,10,170))}catch(u){s.fillText("Scale: Error",10,125)}const c=this.inputManager.getInputState(),h=this.inputManager.getLeftSideInput(),f=this.inputManager.getRightSideInput();if(s.fillText(`Left: ${h.toFixed(2)} Right: ${f.toFixed(2)}`,260,35),c.mouse.isDown){s.fillStyle="#00ff00",s.fillRect(340,10,15,15),s.fillStyle="#ffffff",m.setFont(s,"primary",8),s.textAlign="center",s.fillText("T",347,20),h!==0&&(s.fillStyle=h>0?"#00ff00":"#ff6600",s.fillRect(10,180,30,15),s.fillStyle="#ffffff",s.textAlign="center",s.fillText(h>0?"L↑":"L↓",25,191)),f!==0&&(s.fillStyle=f>0?"#00ff00":"#ff6600",s.fillRect(320,180,30,15),s.fillStyle="#ffffff",s.textAlign="center",s.fillText(f>0?"R↑":"R↓",335,191)),s.fillStyle="#00f0ff",s.textAlign="left",s.fillText("Touch Above/Below Bar Sides",260,50);try{const g=F.getInstance().getCurrentScale();s.fillText(`Scale: ${g.toFixed(2)}x`,260,65),s.fillText(`Screen: ${window.innerWidth}x${window.innerHeight}`,10,200)}catch(u){s.fillText("Scale: Error",260,65)}}else{s.fillText("Touch Above/Below Bar to Control",260,50);try{const g=F.getInstance().getCurrentScale();s.fillText(`Scale: ${g.toFixed(2)}x`,260,65),s.fillText(`Screen: ${window.innerWidth}x${window.innerHeight}`,10,200)}catch(u){s.fillText("Scale: Error",260,65)}}}if(this.gameState.isDebugMode()){s.fillText(`Progress: ${Math.round(this.currentLevel.getProgress()*100)}%`,10,210);const r=this.currentLevel.getCompletedGoals(),c=this.currentLevel.getRequiredGoals();s.fillText(`Goals: ${r}/${c} completed`,10,225),r<c?s.fillText("Goal: Navigate to the glowing goal holes",10,240):s.fillText("Goal: All goals completed! Level complete!",10,240)}}}if(this.gameState.isDebugMode()){const i=this.renderer.getContext();i&&(i.fillStyle="#00f0ff",m.setFont(i,"primary",10),i.textAlign="center",i.fillText("SPACE: Start | Keys: A/Z (left) ↑/↓/L/, (right) | Touch: Above/Below Bar",180,580),i.fillText("Navigate upward to the goal holes - avoid falling into other holes!",180,595),i.fillStyle="#ffaa00",m.setFont(i,"primary",8),i.fillText("DEBUG: F1: Toggle Overlay | F2: Clear History | F3: Export | F4: Test Effects | W: Instant Win",180,610))}this.renderPowerUpEffects();const e=this.renderer.getContext();if(e&&this.pointFlyOffManager.render(e),this.gameState.isSettings()){const i=this.renderer.getContext();i&&this.settingsMenu.draw(i)}}getHoleAnimationState(){return this.holeAnimationState?{scale:this.holeAnimationState.scale,opacity:this.holeAnimationState.opacity}:null}renderPowerUpEffects(){const e=this.renderer.getContext();if(!e)return;const t=this.powerUpManager.getActivePowerUps(),i=this.createEffectContext();this.powerUpEffects.getVisualEffects(t,i).forEach(a=>{this.renderVisualEffect(e,a)}),this.renderPowerUpHUD(e,t),this.powerUpDebugger.render(e)}renderVisualEffect(e,t){switch(e.save(),t.type){case"overlay":this.renderOverlayEffect(e,t.data);break;case"glow":this.renderGlowEffect(e,t.data);break;case"particle":this.renderParticleEffect(e,t.data);break;case"animation":this.renderAnimationEffect(e,t.data);break}e.restore()}renderOverlayEffect(e,t){if(t.type==="path_reveal"&&t.path)e.strokeStyle=t.color||"#00ffff",e.lineWidth=3,e.globalAlpha=t.opacity||.6,e.beginPath(),t.path.forEach((i,s)=>{s===0?e.moveTo(i.x,i.y):e.lineTo(i.x,i.y)}),e.stroke();else{if(e.fillStyle=t.color||"rgba(0, 255, 255, 0.2)",e.globalAlpha=t.opacity||.3,t.pulse){const i=t.currentIntensity||t.intensity||1;e.globalAlpha*=i}e.fillRect(0,0,360,640)}}renderGlowEffect(e,t){let i={x:180,y:320};if(t.target==="ball"){const r=this.physicsEngine.getObjects().find(c=>c.id==="game-ball");r&&(i=r.position)}else if(t.target==="hole"&&this.currentLevel){const c=this.currentLevel.getLevelData().holes.find(h=>h.isGoal);c&&(i={x:c.position.x,y:c.position.y})}else t.target==="bar"&&(i=this.tiltingBar.position);const s=t.currentIntensity||t.intensity||1,a=(t.radius||30)*s,n=e.createRadialGradient(i.x,i.y,0,i.x,i.y,a);n.addColorStop(0,t.color||"#ffffff"),n.addColorStop(1,"transparent"),e.fillStyle=n,e.globalAlpha=s*.5,e.fillRect(i.x-a,i.y-a,a*2,a*2)}renderParticleEffect(e,t){if(t.type==="electric_arc"&&t.from==="ball"&&t.to==="hole"){const i=this.physicsEngine.getObjects().find(a=>a.id==="game-ball");let s={x:180,y:50};if(this.currentLevel){const n=this.currentLevel.getLevelData().holes.find(r=>r.isGoal);n&&(s={x:n.position.x,y:n.position.y})}if(i){e.strokeStyle=t.color||"#ff00ff",e.lineWidth=2,e.globalAlpha=.7;for(let a=0;a<(t.count||3);a++){const n=(Math.random()-.5)*20;e.beginPath(),e.moveTo(i.position.x+n,i.position.y+n),e.lineTo(s.x-n,s.y-n),e.stroke()}}}}renderAnimationEffect(e,t){if(t.type==="scan_bar"){const i=Date.now()*(t.speed||2)*.001,s=(Math.sin(i)*.5+.5)*640;e.strokeStyle=t.color||"#00ffff",e.lineWidth=3,e.globalAlpha=.8,e.beginPath(),e.moveTo(0,s),e.lineTo(360,s),e.stroke()}}renderPowerUpHUD(e,t){const i={[y.SLOW_MO_SURGE]:"hourglass",[y.MAGNETIC_GUIDE]:"magnet",[y.CIRCUIT_PATCH]:"chip",[y.OVERCLOCK_BOOST]:"starburst",[y.SCAN_REVEAL]:"eye"},s=360,a=20,n={[y.SLOW_MO_SURGE]:{x:a+30,align:"center"},[y.MAGNETIC_GUIDE]:{x:a+80,align:"center"},[y.CIRCUIT_PATCH]:{x:s/2,align:"center"},[y.OVERCLOCK_BOOST]:{x:s-a-80,align:"center"},[y.SCAN_REVEAL]:{x:s-a-30,align:"center"}};t.forEach((r,c)=>{const h=i[c],f=r.charges,u=r.isActive,g=n[c];if(h&&this.renderer){if(u)if(c===y.SLOW_MO_SURGE){const w=Date.now()-r.startTime,L=Math.max(0,r.duration-w),T=Math.ceil(L/1e3);T<=1?this.renderer.setTint("#ff0000"):T<=2?this.renderer.setTint("#ff6600"):this.renderer.setTint("#00ff00")}else this.renderer.setTint("#00ff00");else this.renderer.setTint("#ffffff");this.renderer.drawAtlasSprite(h,g.x,590,.4),this.renderer.clearTint()}e.fillStyle=u?"#00ff00":"#ffffff",e.font="14px Interceptor",e.textAlign="center";let p=`${f}`;if(u&&c===y.SLOW_MO_SURGE){const M=Date.now()-r.startTime,S=Math.max(0,r.duration-M),w=Math.ceil(S/1e3);p=`${f}[${w}s]`,w<=1?e.fillStyle="#ff0000":w<=2?e.fillStyle="#ff6600":e.fillStyle="#00ff00"}e.fillText(p,g.x,610)}),this.gameState.isDebugMode()&&(e.fillStyle="#00f0ff",e.font="10px Interceptor",e.textAlign="left",e.fillText("Power-ups: Q(Slow-Mo) W(Magnetic) E(Shield) R(Overclock) T(Scan)",10,620))}handlePowerUpInput(){this.inputManager.isKeyJustPressed("KeyQ")&&this.powerUpManager.activatePowerUp(y.SLOW_MO_SURGE)&&(this.audioManager.playSound("powerup_activate"),o.info("⏰ Slow-Mo Surge activated",null,"Game")),this.inputManager.isKeyJustPressed("KeyW")&&this.powerUpManager.activatePowerUp(y.MAGNETIC_GUIDE)&&(this.audioManager.playSound("powerup_activate"),o.info("🧲 Magnetic Guide activated",null,"Game")),this.inputManager.isKeyJustPressed("KeyE")&&this.powerUpManager.activatePowerUp(y.CIRCUIT_PATCH)&&(this.audioManager.playSound("shield_activate"),o.info("🛡️ Circuit Patch shield activated",null,"Game")),this.inputManager.isKeyJustPressed("KeyR")&&this.powerUpManager.activatePowerUp(y.OVERCLOCK_BOOST)&&(this.audioManager.playSound("powerup_activate"),o.info("⚡ Overclock Boost activated",null,"Game")),this.inputManager.isKeyJustPressed("KeyT")&&this.powerUpManager.activatePowerUp(y.SCAN_REVEAL)&&(this.audioManager.playSound("powerup_activate"),o.info("🔍 Scan Reveal activated",null,"Game"))}placeBallOnBar(){const e=this.physicsEngine.getObjects().find(t=>t.id==="game-ball");e&&(e.position.x=this.tiltingBar.position.x,e.position.y=this.tiltingBar.leftSideHeight-20,e.previousPosition.x=e.position.x,e.previousPosition.y=e.position.y,e.velocity.x=0,e.velocity.y=0,o.debug("🎯 Ball placed on tilting bar",null,"Game"))}resetBallAfterGoal(){o.info("🎯 Goal completed - resetting ball without life loss",null,"Game"),this.powerUpManager.initializeRun(),this.tiltingBar.reset(),this.placeBallOnBar()}handleBallFallOff(){const e=this.physicsEngine.getObjects().find(i=>i.id==="game-ball");if(e&&this.powerUpEffects.shouldUseShield(e.position,{width:360,height:640})&&this.powerUpManager.useShield()){o.info("🛡️ Shield protected ball from falling!",null,"Game"),this.audioManager.playSound("shield_used"),this.placeBallOnBar();return}o.warn("💀 Ball fell off screen!",null,"Game"),this.statsManager.recordEvent({type:"ball_lost",timestamp:Date.now()}),this.gameProgress.totalBallsLost++;const t=this.gameState.getStateData().lives;t>1?(this.gameState.updateStateData({lives:t-1}),o.info(`💔 Lives remaining: ${t-1}`,null,"Game"),this.placeBallOnBar()):this.handleGameOver()}loadNextLevel(e){o.info(`🔄 Loading level ${e}...`,null,"Game"),this.statsManager.recordEvent({type:"level_start",timestamp:Date.now(),data:{levelId:e}}),this.currentLevel=this.levelManager.loadLevel(e,t=>{this.audioManager.playSound(t)}),this.currentLevel&&(this.currentLevel.start(),this.gameState.updateStateData({currentLevel:e}),this.levelCompletionHandled=!1,this.unifiedScoringSystem.startLevel(e),this.tiltingBar.reset(),this.placeBallOnBar(),o.info(`🎯 Level ${e} loaded and started`,null,"Game"))}getPowerUpManager(){return this.powerUpManager}getPowerUpEffects(){return this.powerUpEffects}getPowerUpEventSystem(){return this.powerUpEventSystem}getPowerUpDebugger(){return this.powerUpDebugger}getIsAnimatingHoleFall(){return this.isAnimatingHoleFall}checkCollisions(){if(!this.currentLevel)return;const e=this.physicsEngine.getObjects().find(a=>a.id==="game-ball");if(!e)return;const t={x:e.position.x,y:e.position.y},i=e.radius;if(this.currentLevel.checkGoalReached(t,i)){this.handleGoalReached();const a=this.currentLevel.getGoalHoleAtPosition(t);a&&this.startHoleAnimation("game-ball",a.position,!0,!1);return}const s=this.currentLevel.checkHoleCollision(t,i,"game-ball");s&&!s.isGoal&&this.handleHoleCollision(s),this.currentLevel.checkBallFallOff(t,{x:360,y:640})&&this.handleBallFallOff()}checkWinLoseConditions(){this.currentLevel&&this.currentLevel.checkLevelComplete()&&!this.levelCompletionHandled&&(this.levelCompletionHandled=!0,this.handleLevelComplete())}handleGoalReached(){if(!this.currentLevel)return;o.info("🎯 Goal reached!",null,"Game"),this.statsManager.recordEvent({type:"goal_reached",timestamp:Date.now()}),this.gameProgress.totalGoalsReached++,this.audioManager.playSound("target");const e=this.gameState.getStateData().score;this.gameState.updateStateData({score:e+500});const t=this.physicsEngine.getObjects().find(a=>a.id==="game-ball");t&&this.pointFlyOffManager.showGoalHit(500,t.position),o.info("💰 Goal bonus: 500 points",null,"Game");const i=this.currentLevel.getCompletedGoals(),s=this.currentLevel.getRequiredGoals();o.info(`🎯 Goals completed: ${i}/${s}`,null,"Game"),i>=s&&(o.info("🎉 All goals completed! Level complete!",null,"Game"),o.info(`🎯 Level ${this.currentLevel.getLevelData().id} complete! All ${s} goals reached!`,null,"Game"))}handleHoleCollision(e){var s;o.info(`🕳️ Ball fell into hole: ${e.id}`,null,"Game");const t=e.powerUpType!==void 0,i=(s=e.animationState)==null?void 0:s.isAnimated;t?this.currentLevel&&(this.currentLevel.startSaucerBehavior(e.id,"game-ball",Date.now()),this.handlePowerUpHoleCollection(e)):i?(this.audioManager.playSound("zap"),this.applyRegularHoleTimeBonus(e,!0),this.tiltingBar.reset(),o.info("🔄 Bar reset to starting position after ball fell into animated hole",null,"Game"),this.startHoleAnimation("game-ball",e.position,!1,!0),e.animationState&&(e.animationState.phase="animating_out",e.animationState.startTime=Date.now(),e.isActive=!1,o.info(`🌟 Animated hole forced to animate out after ball collision: ${e.id}`,null,"Game"))):(this.audioManager.playSound("zap"),this.applyRegularHoleTimeBonus(e,!1),this.tiltingBar.reset(),o.info("🔄 Bar reset to starting position after ball fell into hole",null,"Game"),this.startHoleAnimation("game-ball",e.position,!1,!1))}updateSaucerBehavior(){if(!this.currentLevel)return;this.updateSaucerHeightConstraints(),this.updateSaucerWaitingScoring();const e=this.currentLevel.updateSaucerBehavior(Date.now());e&&this.kickBallFromSaucer(e)}kickBallFromSaucer(e){const t=this.physicsEngine.getObjects().find(s=>s.id===e.ballId);if(!t)return;this.tiltingBar.clearSaucerHeightConstraint();const i={x:e.direction.x*e.force,y:e.direction.y*e.force};t.previousPosition.x=t.position.x-i.x*.016,t.previousPosition.y=t.position.y-i.y*.016,this.audioManager.playSound("powerup_collect"),o.info(`🚀 Ball kicked from saucer with force: ${e.force} from hole: ${e.holeId}`,null,"Game")}updateSaucerHeightConstraints(){var a;if(!this.currentLevel)return;let e=!1,t=0;if(!this.physicsEngine.getObjects().find(n=>n.id==="game-ball"))return;const s=this.currentLevel.getHoles();for(const n of s)if((a=n.saucerState)!=null&&a.isActive&&n.saucerState.ballId==="game-ball"){e=!0;const r=this.currentLevel.getSaucerBallPosition(n.id);r?t=r.y:t=n.position.y;break}e?(!this.tiltingBar.hasSaucerHeightConstraint()||Math.abs(t-(this.lastSaucerConstraintY||0))>2)&&(this.tiltingBar.setSaucerHeightConstraint(t),this.lastSaucerConstraintY=t):this.tiltingBar.hasSaucerHeightConstraint()&&(this.tiltingBar.clearSaucerHeightConstraint(),this.lastSaucerConstraintY=void 0)}updateSaucerWaitingScoring(){var n;if(!this.currentLevel)return;const e=Date.now();let t=!1,i=null;if(!this.physicsEngine.getObjects().find(r=>r.id==="game-ball"))return;const a=this.currentLevel.getHoles();for(const r of a)if((n=r.saucerState)!=null&&n.isActive&&r.saucerState.ballId==="game-ball"&&r.saucerState.phase==="waiting"){t=!0,i=this.currentLevel.getSaucerBallPosition(r.id);break}if(t){if(this.saucerWaitingScoringState.isActive||(this.saucerWaitingScoringState.isActive=!0,this.saucerWaitingScoringState.lastScoringTime=e,o.info("🎯 Started saucer waiting scoring",null,"Game")),e-this.saucerWaitingScoringState.lastScoringTime>=this.saucerWaitingScoringState.scoringInterval){const c=this.gameState.getStateData().score;this.gameState.updateStateData({score:c+1e3}),this.unifiedScoringSystem.addBonusPoints(1e3),i&&this.createSaucerWaitingFlyoff(1,i),this.audioManager.playSound("target",.6,1.3),this.saucerWaitingScoringState.lastScoringTime=e,o.debug("🎯 Awarded 1000 points for saucer waiting",null,"Game")}}else this.saucerWaitingScoringState.isActive&&(this.saucerWaitingScoringState.isActive=!1,o.info("🎯 Stopped saucer waiting scoring",null,"Game"))}createSaucerWaitingFlyoff(e,t){const s={x:t.x+(Math.random()-.5)*16,y:t.y-12+(Math.random()-.5)*8};this.pointFlyOffManager.showSaucerWaiting(e,s),o.debug(`✨ Created saucer waiting flyoff: +${e} at (${s.x}, ${s.y})`,null,"Game")}handlePowerUpHoleCollection(e){if(!e.powerUpType)return;o.info(`🎁 Power-up collected from hole: ${e.powerUpType}`,null,"Game"),this.powerUpManager.addCharges(e.powerUpType,1);const t=this.physicsEngine.getObjects().find(a=>a.id==="game-ball"),i=t?{x:t.position.x,y:t.position.y}:void 0;this.applyPowerUpTimeBonus(e,i);const s=this.getPowerUpSpriteName(e.powerUpType,e.id);if(!this.isTimeBonusSprite(s)){const n=this.getPowerUpColor(e.powerUpType);this.pointFlyOffManager.showPowerUpCollect(100,e.position,n)}this.audioManager.playSound("powerup_collect"),this.statsManager.recordEvent({type:"powerup_collected",timestamp:Date.now(),data:{powerUpType:e.powerUpType,source:"hole"}}),o.info(`⚡ Added charge to ${e.powerUpType} from power-up hole`,null,"Game")}getPowerUpSpriteName(e,t){const s={SLOW_MO_SURGE:["hourglass","hourglass_alt"],MAGNETIC_GUIDE:["magnet","magnet_alt","hourglass_alt"],CIRCUIT_PATCH:["chip","chip_alt"],OVERCLOCK_BOOST:["starburst","starburst_alt","hourglass"],SCAN_REVEAL:["eye","eye_alt"]}[e]||["vortex"],a=t.charCodeAt(t.length-1)%s.length;return s[a]}isTimeBonusSprite(e){return e==="hourglass"||e==="hourglass_alt"}applyPowerUpTimeBonus(e,t){if(!e.powerUpType)return;const i=this.getPowerUpSpriteName(e.powerUpType,e.id);if(this.isTimeBonusSprite(i))this.unifiedScoringSystem.addTimeReduction(3),o.info(`⏰ Time reduction applied: -3s from ${e.powerUpType} (${i} sprite)`,null,"Game"),t&&this.pointFlyOffManager.showTimeBonus(3,t);else{const a={[y.SLOW_MO_SURGE]:2,[y.MAGNETIC_GUIDE]:2}[e.powerUpType];a&&(this.unifiedScoringSystem.addAssistPenalty(a),o.info(`⚖️ Assist penalty applied: +${a}s from ${e.powerUpType}`,null,"Game"));const r={[y.CIRCUIT_PATCH]:1,[y.OVERCLOCK_BOOST]:.5,[y.SCAN_REVEAL]:.5}[e.powerUpType];r&&(this.unifiedScoringSystem.addTimeReduction(r),o.info(`⏰ Time reduction applied: -${r}s from ${e.powerUpType}`,null,"Game"))}}applyRegularHoleTimeBonus(e,t){const i=t?.3:.1;this.unifiedScoringSystem.addTimeReduction(i);const s=t?"animated hole":"regular hole";o.info(`⏰ Time reduction applied: -${i}s from ${s} (${e.id})`,null,"Game")}handleLevelComplete(){if(!this.currentLevel)return;o.info("🏆 Level completed!",null,"Game");const e=this.currentLevel.getLevelData().id,t=this.unifiedScoringSystem.completeLevel(e);this.sessionTotalTime+=t.rawTime*1e3,this.statsManager.recordEvent({type:"level_complete",timestamp:Date.now(),data:{levelId:e,score:t.levelPoints,completionTime:t.rawTime*1e3,baseLevelValue:t.baseLevelValue,adjustedTime:t.adjustedTime,timeReductions:t.timeReductions,assistPenalties:t.assistPenalties}}),this.gameProgress.completedLevels.add(e),this.gameProgress.highestLevel=Math.max(this.gameProgress.highestLevel,e),this.gameState.addLevelScore(t);const i=this.gameState.getStateData().score;this.gameState.updateStateData({score:i+Math.floor(t.levelPoints),totalScore:this.unifiedScoringSystem.getCurrentTotalScore()}),this.audioManager.playSound("level_complete"),this.pointFlyOffManager.showLevelComplete(t.levelPoints,{x:180,y:320}),o.info(`🎉 Level Points: ${t.levelPoints.toFixed(2)} (${t.baseLevelValue}/${t.adjustedTime.toFixed(2)}s)`,null,"Game");const s=this.currentLevel.getLevelData().id+1;this.levelManager.unlockLevel(s),this.winScreen=new Ue({onContinue:()=>this.handleWinScreenContinue(),levelTime:t.rawTime*1e3,sessionTotal:this.sessionTotalTime,levelId:e,score:t.levelPoints,levelScoreData:t,totalScore:this.unifiedScoringSystem.getCurrentTotalScore()}),this.gameState.setState(b.WIN_SCREEN),o.info(`🏆 Level ${e} completed! Total Score: ${this.unifiedScoringSystem.getCurrentTotalScore().toFixed(2)} - Showing win screen...`,null,"Game")}handleWinScreenContinue(){if(this.winScreen=null,!this.currentLevel)return;const e=this.currentLevel.getLevelData().id+1;this.levelManager.getLevelData(e)?(this.gameState.setState(b.PLAYING),this.loadNextLevel(e),o.info(`🎮 Continuing to Level ${e}`,null,"Game")):this.handleGameComplete()}handleGameOver(){o.warn("💀 Game Over!",null,"Game"),this.statsManager.recordEvent({type:"death",timestamp:Date.now()}),this.gameState.setState(b.GAME_OVER),this.saveGameProgress(),this.audioManager.playSound("game_over"),setTimeout(()=>{this.playMenuMusic()},1e3),setTimeout(()=>{this.gameState.isState(b.GAME_OVER)&&(o.info("🏠 Auto-returning to menu...",null,"Game"),this.gameState.reset())},5e3)}handleGameComplete(){o.info("🎊 Game completed! All levels finished!",null,"Game"),this.statsManager.recordEvent({type:"game_complete",timestamp:Date.now()}),setTimeout(()=>{this.playMenuMusic()},1e3),setTimeout(()=>{o.info("🏠 Returning to main menu...",null,"Game"),this.gameState.reset()},2e3)}pause(){o.info("⏸️ Pausing Circuit Breaker...",null,"Game"),this.saveGameProgress(),this.gameLoop.pause()}resume(){o.info("▶️ Resuming Circuit Breaker...",null,"Game"),this.gameLoop.resume()}stop(){o.info("⏹️ Stopping Circuit Breaker...",null,"Game"),this.statsManager.recordEvent({type:"session_end",timestamp:Date.now()}),this.gameLoop.stop(),this.isRunning=!1}getGameState(){return this.gameState}isGameRunning(){return this.isRunning&&this.gameLoop.isGameLoopRunning()}startNewGame(){o.info("🎮 Starting new game...",null,"Game"),this.statsManager.recordEvent({type:"game_start",timestamp:Date.now()}),this.gameProgress.gamesPlayed++,this.sessionStartTime=Date.now(),this.sessionTotalTime=0,this.unifiedScoringSystem.startNewSession(),this.gameState.setState(b.PLAYING),this.gameState.updateStateData({currentLevel:1,score:0,totalScore:0,lives:3}),this.levelManager.regenerateLevels(),this.currentLevel=this.levelManager.loadLevel(1,e=>{this.audioManager.playSound(e)}),this.currentLevel&&(this.currentLevel.start(),this.levelCompletionHandled=!1,this.unifiedScoringSystem.startLevel(1),o.info("🎯 Level 1 loaded and started",null,"Game")),this.tiltingBar.reset(),this.lastSaucerConstraintY=void 0,this.placeBallOnBar(),this.playGameplayMusic(),o.info("🚀 New game started successfully!",null,"Game")}updateHoleAnimation(e){if(!this.holeAnimationState)return;const t=Date.now()-this.holeAnimationState.startTime,i=Math.min(t/this.holeAnimationState.duration,1),s=1-Math.pow(1-i,3);this.holeAnimationState.scale=1-s*.9,this.holeAnimationState.opacity=1-s*.7;const a=this.physicsEngine.getObjects().find(n=>{var r;return n.id===((r=this.holeAnimationState)==null?void 0:r.ballId)});if(a){const n=this.holeAnimationState.startPosition,r=this.holeAnimationState.holePosition;if(i<.3){const c=i/.3;a.position.x=n.x+(r.x-n.x)*c,a.position.y=n.y+(r.y-n.y)*c}else{const c=(i-.3)/.7;a.position.x=r.x,a.position.y=r.y+c*200}a.previousPosition.x=a.position.x,a.previousPosition.y=a.position.y,a.velocity.x=0,a.velocity.y=0}i>=1&&this.completeHoleAnimation()}startHoleAnimation(e,t,i=!1,s=!1){const a=this.physicsEngine.getObjects().find(n=>n.id===e);a&&(o.debug(`🎬 Starting hole animation for ball: ${e} (goal: ${i}, power-up: ${s})`,null,"Game"),this.isAnimatingHoleFall=!0,this.holeAnimationState={ballId:e,holePosition:t,startTime:Date.now(),duration:500,startPosition:{x:a.position.x,y:a.position.y},scale:1,opacity:1,isGoalHole:i,isPowerUpHole:s})}completeHoleAnimation(){if(!this.holeAnimationState)return;const e=this.holeAnimationState.isGoalHole,t=this.holeAnimationState.isPowerUpHole;o.debug(`🎬 Hole animation complete (goal: ${e}, power-up: ${t})`,null,"Game"),this.isAnimatingHoleFall=!1,this.holeAnimationState=null,e?this.resetBallAfterGoal():t?this.resetBallAfterGoal():this.handleBallFallOff()}hasAnyInput(){const e=this.inputManager.getInputState(),t=Object.values(e.keys).some(s=>s),i=e.mouse.isDown;return t||i}startAttractMode(){o.debug("🎬 Entering attract mode",null,"Game"),this.gameState.setState(b.ATTRACT_MODE),this.attractModeTimer=0,this.menuTimer=0,this.startAttractModeLevel()}exitAttractMode(){o.debug("🏠 Exiting attract mode",null,"Game"),this.gameState.setState(b.MENU),this.attractModeTimer=0,this.menuTimer=0,this.gameState.reset(),this.audioManager.playSound("ui_click"),this.playMenuMusic()}updateAttractMode(e){this.attractModeTimer+=e;const t=this.attractModeTimer/1e3,i=Math.sin(t*.8)*.7,s=Math.cos(t*.6)*.8;this.tiltingBar.moveLeftSide(i),this.tiltingBar.moveRightSide(s),this.tiltingBar.update(e/1e3),Math.floor(t)%8===0&&t%8<.1&&this.placeBallOnBar(),this.currentLevel&&(this.currentLevel.update(e),this.checkCollisions(),this.checkWinLoseConditions()),this.attractModeTimer>3e4&&this.exitAttractMode()}startAttractModeLevel(){try{this.currentLevel=this.levelManager.loadLevel(1,e=>{this.audioManager.playSound(e)}),this.currentLevel?(o.debug("🎮 Starting attract mode level",null,"Game"),this.currentLevel.start(),this.tiltingBar.reset(),this.placeBallOnBar(),o.debug("✅ Attract mode level started successfully",null,"Game")):(o.error("❌ Failed to load attract mode level",null,"Game"),this.exitAttractMode())}catch(e){o.error("❌ Error starting attract mode level:",e,"Game"),this.exitAttractMode()}}playMenuMusic(){return C(this,null,function*(){try{yield this.audioManager.fadeToMusic("02-Delorean_Time.mp3",1),o.debug("🎵 Menu music started (02-Delorean_Time.mp3)",null,"Game")}catch(e){o.error("❌ Error playing menu music:",e,"Game")}})}playGameplayMusic(){return C(this,null,function*(){try{yield this.audioManager.fadeToMusic("Dead_Space.mp3",1),o.debug("🎵 Gameplay music started",null,"Game")}catch(e){o.error("❌ Error playing gameplay music:",e,"Game")}})}getLoadingProgress(){return this.loadingProgress}getLoadingStatus(){return this.loadingStatus}isLoadingComplete(){return this.loadingComplete}startAssetLoading(){return C(this,null,function*(){o.info("📦 Starting asset loading...",null,"Game"),this.assetsToLoad=["Engage_II.mp3","Dead_Space.mp3","atlas_01.json","atlas_01.png","powerup_atlas_01.json","powerup_atlas_01.png"],this.loadedAssets=0,this.loadingProgress=0,this.loadingStatus="Loading audio files...",this.loadingComplete=!1;try{yield this.loadAudioAssets(),this.loadingStatus="Loading sprite atlas...",yield this.loadSpriteAssets(),this.loadingStatus="Loading fonts...",yield this.loadFonts(),this.loadingProgress=100,this.loadingStatus="Press any key to continue...",this.loadingComplete=!0,o.info("✅ All assets loaded successfully",null,"Game")}catch(e){o.error("❌ Error loading assets:",e,"Game"),this.loadingStatus="Loading failed - Press any key to continue...",this.loadingComplete=!0}})}loadAudioAssets(){return C(this,null,function*(){const e=this.assetsToLoad.filter(t=>t.endsWith(".mp3"));for(let t=0;t<e.length;t++){const i=e[t];this.loadingStatus=`Loading ${i}...`;try{yield this.audioManager.loadMusic(i),this.loadedAssets++,this.updateLoadingProgress(),o.debug(`✅ Loaded audio: ${i}`,null,"Game")}catch(s){o.warn(`⚠️ Failed to load audio: ${i}`,s,"Game"),this.loadedAssets++,this.updateLoadingProgress()}yield this.delay(100)}})}loadSpriteAssets(){return C(this,null,function*(){const e=this.assetsToLoad.filter(t=>t.endsWith(".json")||t.endsWith(".png"));for(let t=0;t<e.length;t++){const i=e[t];this.loadingStatus=`Loading ${i}...`,this.loadedAssets++,this.updateLoadingProgress(),yield this.delay(200)}o.info("✅ Sprite assets loading simulation completed",null,"Game")})}loadFonts(){return C(this,null,function*(){this.loadingStatus="Initializing fonts...",yield this.delay(300),o.debug("✅ Fonts initialized",null,"Game")})}updateLoadingProgress(){this.loadingProgress=this.loadedAssets/this.assetsToLoad.length*100}loadGameProgress(){try{const e=this.storageManager.loadProgress(this.currentSaveSlot);e?(this.gameProgress=e,this.achievementManager.loadAchievements(Array.from(e.achievements)),this.audioManager.setMasterVolume(e.settings.masterVolume),this.audioManager.setMusicVolume(e.settings.musicVolume),this.audioManager.setSFXVolume(e.settings.sfxVolume),this.audioManager.setEnabled(e.settings.audioEnabled),o.info(`📂 Loaded game progress from slot ${this.currentSaveSlot}`,null,"Game")):(this.gameProgress=this.storageManager.createNewProgress(),o.info("🆕 Created new game progress",null,"Game"))}catch(e){o.error("❌ Failed to load game progress:",e,"Game"),this.gameProgress=this.storageManager.createNewProgress()}}saveGameProgress(){try{this.updateGameProgress();const e=this.storageManager.saveProgress(this.gameProgress,this.currentSaveSlot);return e&&o.debug("💾 Game progress saved",null,"Game"),e}catch(e){return o.error("❌ Failed to save game progress:",e,"Game"),!1}}updateGameProgress(){if(!this.gameProgress)return;const e=Date.now();this.sessionStartTime>0&&(this.gameProgress.playTime+=e-this.sessionStartTime,this.sessionStartTime=e);const t=this.audioManager.getConfig();this.gameProgress.settings={masterVolume:t.masterVolume,musicVolume:t.musicVolume,sfxVolume:t.sfxVolume,audioEnabled:t.enabled},this.gameProgress.achievements=new Set(this.achievementManager.getUnlockedAchievementIds())}checkAchievements(){if(!this.gameProgress)return;const e=this.gameState.getStateData(),t=Date.now(),i=this.sessionStartTime>0?t-this.sessionStartTime:0,s=this.gameProgress.playTime+i,a={currentLevel:e.currentLevel||1,totalScore:e.score||0,lives:e.lives||3,goalsReached:this.gameProgress.totalGoalsReached,levelsCompleted:this.gameProgress.completedLevels.size,gamesPlayed:this.gameProgress.gamesPlayed,totalPlayTime:s,ballsLost:this.gameProgress.totalBallsLost,perfectLevels:0,quickCompletions:0};this.achievementManager.checkAchievements(a)}autoSave(){const e=Date.now();if(e-this.lastAutoSave<3e4)return!1;const t=this.saveGameProgress();return t&&(this.lastAutoSave=e),t}completeLoading(){return C(this,null,function*(){o.info("🎯 Loading complete - transitioning to menu",null,"Game"),this.gameState.setState(b.MENU),yield this.audioManager.resumeContext(),this.playMenuMusic()})}delay(e){return new Promise(t=>setTimeout(t,e))}openSettings(){this.gameState.setState(b.SETTINGS);const e=this.gameState.isPaused();this.settingsMenu=new de({audioManager:this.audioManager,onClose:()=>this.closeSettings(),onBackToMenu:()=>this.backToMenuFromSettings(),isFromPauseMenu:e}),this.settingsMenu.show(),this.settingsMenu.updateVolumeDisplays(),o.info(`⚙️ Settings menu opened ${e?"from pause menu":"from main menu"}`,null,"Game")}closeSettings(){this.settingsMenu.hide(),this.gameState.isPaused()?this.gameState.setState(b.PAUSED):this.gameState.setState(b.MENU),o.info("⚙️ Settings menu closed",null,"Game")}backToMenuFromSettings(){this.settingsMenu.hide(),this.gameState.setState(b.MENU),o.info("🏠 Returned to main menu from settings",null,"Game")}openSaveLoadMenu(){o.info("💾 Opening save/load menu",null,"Game"),this.gameState.setState(b.SAVE_LOAD),this.saveLoadMenu.show()}closeSaveLoadMenu(){o.info("💾 Closing save/load menu",null,"Game"),this.saveLoadMenu.hide(),this.gameState.isState(b.SAVE_LOAD)&&this.gameState.setState(b.MENU)}loadGameFromSlot(e){o.info(`📂 Loading game from slot ${e}`,null,"Game");const t=this.storageManager.loadProgress(e);t?(this.gameProgress=t,this.currentSaveSlot=e,this.achievementManager.loadAchievements(Array.from(t.achievements)),this.audioManager.setMasterVolume(t.settings.masterVolume),this.audioManager.setMusicVolume(t.settings.musicVolume),this.audioManager.setSFXVolume(t.settings.sfxVolume),this.audioManager.setEnabled(t.settings.audioEnabled),this.startNewGame()):o.warn(`⚠️ No save data found in slot ${e}`,null,"Game")}startNewGameInSlot(e){o.info(`🆕 Starting new game in slot ${e}`,null,"Game"),this.gameProgress=this.storageManager.createNewProgress(),this.currentSaveSlot=e,this.startNewGame()}deleteSaveSlot(e){o.info(`🗑️ Deleting save slot ${e}`,null,"Game"),this.storageManager.deleteSaveSlot(e)}openStatsMenu(){o.info("📊 Opening stats menu...",null,"Game"),this.gameState.setState(b.STATS)}closeStatsMenu(){o.info("📊 Closing stats menu...",null,"Game"),this.gameState.setState(b.MENU)}openHowToPlay(){o.info("❓ Opening how to play screen...",null,"Game"),this.gameState.setState(b.HOW_TO_PLAY),this.audioManager.playSound("ui_click")}handleDebugInput(){if(this.gameState.isDebugMode()){if(this.inputManager.isKeyJustPressed("F1")&&this.powerUpDebugger.toggle(),this.inputManager.isKeyJustPressed("F2")&&this.powerUpDebugger.clearHistory(),this.inputManager.isKeyJustPressed("F3")){const e=this.powerUpDebugger.exportDebugData();console.log("🔧 Debug Data Export:",e)}this.inputManager.isKeyJustPressed("F4")&&this.testPointFlyOffs(),this.inputManager.isKeyJustPressed("KeyW")&&this.gameState.isPlaying()&&this.debugInstantWin()}}debugInstantWin(){if(!this.currentLevel){o.warn("🧪 DEBUG: No current level to complete",null,"Game");return}if(this.currentLevel.checkLevelComplete()){o.warn("🧪 DEBUG: Level is already completed",null,"Game");return}o.info("🧪 DEBUG: Force completing current level...",null,"Game"),this.currentLevel.debugForceComplete(),this.audioManager.playSound("level_complete"),this.levelCompletionHandled||(this.levelCompletionHandled=!0,this.handleLevelComplete())}getBallSpriteForSaucerState(e){var i;if(!this.currentLevel)return"ball_normal";const t=this.currentLevel.getHoles();for(const s of t)if((i=s.saucerState)!=null&&i.isActive&&s.saucerState.ballId===e&&s.saucerState.phase==="waiting")return"ball_saucer";return"ball_normal"}testPointFlyOffs(){o.info("🧪 Testing point fly-offs...",null,"Game");const e=[{x:100,y:200},{x:180,y:300},{x:260,y:400},{x:50,y:500},{x:310,y:150}];this.pointFlyOffManager.showGoalHit(500,e[0]),this.pointFlyOffManager.showPowerUpCollect(100,e[1],"#ff6600"),this.pointFlyOffManager.showPowerUpCollect(150,e[2],"#00ff88"),this.pointFlyOffManager.showLevelComplete(1e3,e[3]),this.pointFlyOffManager.showBonus(250,e[4]),this.pointFlyOffManager.showAchievement(750,{x:180,y:100}),this.pointFlyOffManager.showCombo(300,{x:280,y:350},2),o.info("🧪 Point fly-offs test completed",null,"Game")}getPowerUpColor(e){switch(e){case y.SLOW_MO_SURGE:return"#00ffff";case y.MAGNETIC_GUIDE:return"#ff00ff";case y.CIRCUIT_PATCH:return"#00ff00";case y.OVERCLOCK_BOOST:return"#ffaa00";case y.SCAN_REVEAL:return"#ffff00";default:return"#ff6600"}}onScaleChanged(e){o.debug(`🔄 Game scale changed to ${e}x`,null,"Game");const t=document.getElementById("game-canvas");t&&this.renderer&&this.renderer.resize(t.width,t.height)}getAudioLevel(){return this.audioManager.getAudioLevel()}}let A=null,te=null;function pe(){return C(this,null,function*(){try{o.info("🚀 Circuit Breaker - Loading...",null,"Main");const d=document.getElementById("game-container");if(!d)throw new Error("Game container not found");const e=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=768;te=F.getInstance({baseWidth:360,baseHeight:640,minScale:e?.5:1,maxScale:8,forceIntegerScaling:!e}),o.debug(`📱 Device: ${e?"Mobile":"Desktop"}, Scaling config: minScale=${e?.5:1}, forceInteger=${!e}`,null,"Main"),d.innerHTML="";const t=document.createElement("canvas");t.id="game-canvas",d.appendChild(t),te.applyScaling(t,d),A=new Ke,yield A.init(),A.start(),Je(),window.game=A,window.scalingManager=te,o.info("✅ Circuit Breaker loaded successfully",null,"Main")}catch(d){o.error("❌ Failed to load Circuit Breaker:",d,"Main"),je("Failed to load game. Please refresh the page.")}})}function je(d){const e=document.getElementById("game-container");e&&(e.innerHTML=`
      <div style="text-align: center; color: #b600f9;">
        <h1>Circuit Breaker</h1>
        <p>Error: ${d}</p>
        <p>Please refresh the page to try again.</p>
      </div>
    `)}function Je(){te&&te.onResize(d=>{var i;o.debug(`📱 Window resized - applying ${d.scale}x scaling`,null,"Main");const e=document.getElementById("game-canvas"),t=document.getElementById("game-container");e&&t&&(te.applyScaling(e,t),A&&((i=A.onScaleChanged)==null||i.call(A,d.scale)))})}function qe(){o.debug("📱 Window resize event triggered",null,"Main")}function Xe(){document.hidden?(o.debug("👁️ Page hidden - pausing game",null,"Main"),A==null||A.pause()):(o.debug("👁️ Page visible - resuming game",null,"Main"),A==null||A.resume())}function Ze(){o.debug("👋 Page unloading - stopping game",null,"Main"),A==null||A.stop()}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",pe):pe();window.addEventListener("resize",qe);document.addEventListener("visibilitychange",Xe);window.addEventListener("beforeunload",Ze);
//# sourceMappingURL=index-9af7e9ba.js.map
